// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Service breakdown panel component renders service breakdown panel 1`] = `
<SpanDetailPanel
  data={
    Object {
      "gantt": Array [
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": "rgba(0, 0, 0, 0)",
          },
          "orientation": "h",
          "showlegend": false,
          "type": "bar",
          "width": 0.4,
          "x": Array [
            0,
          ],
          "y": Array [
            "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
          ],
        },
        Object {
          "hovertemplate": "%{x}<extra></extra>",
          "marker": Object {
            "color": "#7492e7",
          },
          "orientation": "h",
          "text": Array [
            "Error",
          ],
          "textfont": Object {
            "color": Array [
              "#c14125",
            ],
          },
          "textposition": "outside",
          "type": "bar",
          "width": 0.4,
          "x": Array [
            19.91,
          ],
          "y": Array [
            "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
          ],
        },
      ],
      "ganttMaxX": 19.91,
      "table": Array [
        Object {
          "end_time": "2020-11-10T17:55:45.239564396Z",
          "error": "Error",
          "latency": 19.91,
          "service_name": "inventory",
          "span_id": "32c641131b569afa",
          "start_time": "2020-11-10T17:55:45.219652629Z",
          "vs_benchmark": 0,
        },
      ],
    }
  }
>
  <EuiPanel>
    <div
      className="euiPanel euiPanel--paddingMedium"
    >
      <EuiFlexGroup>
        <div
          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
        >
          <EuiFlexItem>
            <div
              className="euiFlexItem"
            >
              <PanelTitle
                title="Spans"
                totalItems={0}
              >
                <EuiText
                  size="m"
                >
                  <div
                    className="euiText euiText--medium"
                  >
                    <span
                      className="panel-title"
                    >
                      Spans
                    </span>
                    <span
                      className="panel-title-count"
                    >
                       (0)
                    </span>
                  </div>
                </EuiText>
              </PanelTitle>
            </div>
          </EuiFlexItem>
          <EuiFlexItem
            grow={false}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrowZero"
            >
              <EuiButtonGroup
                idSelected="timeline"
                legend="Select view of spans"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "id": "timeline",
                      "label": "Timeline",
                    },
                    Object {
                      "id": "span_list",
                      "label": "Span list",
                    },
                  ]
                }
              >
                <fieldset
                  className="euiButtonGroup__fieldset"
                >
                  <EuiScreenReaderOnly>
                    <legend
                      className="euiScreenReaderOnly"
                    >
                      Select view of spans
                    </legend>
                  </EuiScreenReaderOnly>
                  <div
                    className="euiButtonGroup euiButtonGroup--s"
                  >
                    <EuiButtonToggle
                      className="euiButtonGroup__button euiButtonGroup__button--selected"
                      color="text"
                      fill={true}
                      id="timeline"
                      isSelected={true}
                      key="0"
                      label="Timeline"
                      onChange={[Function]}
                      size="s"
                      toggleClassName="euiButtonGroup__toggle"
                      type="single"
                    >
                      <EuiToggle
                        checked={true}
                        className="euiButtonToggle__wrapper euiButtonGroup__toggle"
                        inputClassName="euiButtonToggle__input"
                        label="Timeline"
                        onChange={[Function]}
                        title="Timeline"
                        type="single"
                      >
                        <div
                          className="euiToggle euiToggle--checked euiButtonToggle__wrapper euiButtonGroup__toggle"
                        >
                          <input
                            aria-label="Timeline"
                            checked={true}
                            className="euiToggle__input euiButtonToggle__input"
                            onChange={[Function]}
                            title="Timeline"
                            type="radio"
                          />
                          <EuiButton
                            className="euiButtonToggle euiButtonGroup__button euiButtonGroup__button--selected"
                            color="text"
                            fill={true}
                            id="timeline"
                            size="s"
                            tabIndex={-1}
                          >
                            <EuiButtonDisplay
                              className="euiButtonToggle euiButtonGroup__button euiButtonGroup__button--selected"
                              color="text"
                              disabled={false}
                              element="button"
                              fill={true}
                              id="timeline"
                              isDisabled={false}
                              size="s"
                              tabIndex={-1}
                              type="button"
                            >
                              <button
                                className="euiButton euiButton--text euiButton--small euiButtonToggle euiButtonGroup__button euiButtonGroup__button--selected euiButton--fill"
                                disabled={false}
                                id="timeline"
                                tabIndex={-1}
                                type="button"
                              >
                                <EuiButtonContent
                                  className="euiButton__content"
                                  iconSide="left"
                                  textProps={
                                    Object {
                                      "className": "euiButton__text",
                                    }
                                  }
                                >
                                  <span
                                    className="euiButtonContent euiButton__content"
                                  >
                                    <span
                                      className="euiButton__text"
                                    >
                                      Timeline
                                    </span>
                                  </span>
                                </EuiButtonContent>
                              </button>
                            </EuiButtonDisplay>
                          </EuiButton>
                        </div>
                      </EuiToggle>
                    </EuiButtonToggle>
                    <EuiButtonToggle
                      className="euiButtonGroup__button"
                      color="text"
                      fill={false}
                      id="span_list"
                      isSelected={false}
                      key="1"
                      label="Span list"
                      onChange={[Function]}
                      size="s"
                      toggleClassName="euiButtonGroup__toggle"
                      type="single"
                    >
                      <EuiToggle
                        checked={false}
                        className="euiButtonToggle__wrapper euiButtonGroup__toggle"
                        inputClassName="euiButtonToggle__input"
                        label="Span list"
                        onChange={[Function]}
                        title="Span list"
                        type="single"
                      >
                        <div
                          className="euiToggle euiButtonToggle__wrapper euiButtonGroup__toggle"
                        >
                          <input
                            aria-label="Span list"
                            checked={false}
                            className="euiToggle__input euiButtonToggle__input"
                            onChange={[Function]}
                            title="Span list"
                            type="radio"
                          />
                          <EuiButton
                            className="euiButtonToggle euiButtonGroup__button"
                            color="text"
                            fill={false}
                            id="span_list"
                            size="s"
                            tabIndex={-1}
                          >
                            <EuiButtonDisplay
                              className="euiButtonToggle euiButtonGroup__button"
                              color="text"
                              disabled={false}
                              element="button"
                              fill={false}
                              id="span_list"
                              isDisabled={false}
                              size="s"
                              tabIndex={-1}
                              type="button"
                            >
                              <button
                                className="euiButton euiButton--text euiButton--small euiButtonToggle euiButtonGroup__button"
                                disabled={false}
                                id="span_list"
                                tabIndex={-1}
                                type="button"
                              >
                                <EuiButtonContent
                                  className="euiButton__content"
                                  iconSide="left"
                                  textProps={
                                    Object {
                                      "className": "euiButton__text",
                                    }
                                  }
                                >
                                  <span
                                    className="euiButtonContent euiButton__content"
                                  >
                                    <span
                                      className="euiButton__text"
                                    >
                                      Span list
                                    </span>
                                  </span>
                                </EuiButtonContent>
                              </button>
                            </EuiButtonDisplay>
                          </EuiButton>
                        </div>
                      </EuiToggle>
                    </EuiButtonToggle>
                  </div>
                </fieldset>
              </EuiButtonGroup>
            </div>
          </EuiFlexItem>
        </div>
      </EuiFlexGroup>
      <EuiHorizontalRule
        margin="m"
      >
        <hr
          className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
        />
      </EuiHorizontalRule>
      <div
        style={
          Object {
            "maxHeight": 500,
            "overflowY": "auto",
          }
        }
      >
        <Plt
          data={Array []}
          layout={
            Object {
              "height": 60,
              "margin": Object {
                "b": 30,
                "l": 260,
                "r": 5,
                "t": 30,
              },
              "width": 800,
              "xaxis": Object {
                "color": "#91989c",
                "range": Array [
                  0,
                  0,
                ],
                "showline": true,
                "side": "top",
                "ticksuffix": " ms",
              },
              "yaxis": Object {
                "showgrid": false,
                "ticktext": Array [],
                "tickvals": Array [],
              },
            }
          }
          onClickHandler={[Function]}
          onHoverHandler={[Function]}
          onUnhoverHandler={[Function]}
        >
          <PlotlyComponent
            config={
              Object {
                "displayModeBar": false,
              }
            }
            data={Array []}
            debug={false}
            layout={
              Object {
                "autosize": true,
                "barmode": "stack",
                "height": 60,
                "hovermode": "closest",
                "legend": Object {
                  "orientation": "h",
                  "traceorder": "normal",
                },
                "margin": Object {
                  "b": 30,
                  "l": 260,
                  "r": 5,
                  "t": 30,
                },
                "showlegend": false,
                "width": 800,
                "xaxis": Object {
                  "color": "#91989c",
                  "range": Array [
                    0,
                    0,
                  ],
                  "showline": true,
                  "side": "top",
                  "ticksuffix": " ms",
                },
                "yaxis": Object {
                  "showgrid": false,
                  "ticktext": Array [],
                  "tickvals": Array [],
                },
              }
            }
            onClick={[Function]}
            onHover={[Function]}
            onUnhover={[Function]}
            style={
              Object {
                "height": "100%",
                "width": "100%",
              }
            }
            useResizeHandler={true}
          >
            <div
              style={
                Object {
                  "height": "100%",
                  "width": "100%",
                }
              }
            />
          </PlotlyComponent>
        </Plt>
      </div>
    </div>
  </EuiPanel>
</SpanDetailPanel>
`;
