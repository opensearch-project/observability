// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Visualization chart switch components Renders workspace with bar component 1`] = `
<ChartSwitch
  setVis={[MockFunction]}
  vis={
    Object {
      "chart": [Function],
      "fullLabel": "Bar",
      "icon": [Function],
      "id": "bar",
      "label": "bar",
      "selection": Object {
        "dataLoss": "nothing",
      },
      "visualizationId": "vis-bar-6636",
    }
  }
  visualizationTypes={
    Array [
      Object {
        "chart": [Function],
        "fullLabel": "Bar",
        "icon": [Function],
        "id": "bar",
        "label": "bar",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6636",
      },
      Object {
        "chart": [Function],
        "fullLabel": "H. Bar",
        "icon": [Function],
        "id": "horizontal_bar",
        "label": "H. Bar",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6637",
      },
      Object {
        "chart": [Function],
        "fullLabel": "Line",
        "icon": [Function],
        "id": "line",
        "label": "line",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6638",
      },
    ]
  }
>
  <div
    className="lnsChartSwitch__header"
  >
    <EuiPopover
      anchorPosition="downLeft"
      button={
        <ToolbarButton
          data-test-subj="lnsChartSwitchPopover"
          fontWeight="bold"
          onClick={[Function]}
        >
          <VisualizationSummary
            chart={[Function]}
            fullLabel="Bar"
            icon={[Function]}
            id="bar"
            label="bar"
            selection={
              Object {
                "dataLoss": "nothing",
              }
            }
            visualizationId="vis-bar-6636"
          />
        </ToolbarButton>
      }
      closePopover={[Function]}
      display="inlineBlock"
      hasArrow={true}
      id="lnsChartSwitchPopover"
      initialFocus=".lnsChartSwitch__popoverPanel"
      isOpen={false}
      ownFocus={true}
      panelClassName="lnsChartSwitch__popoverPanel"
      panelPaddingSize="s"
    >
      <EuiOutsideClickDetector
        isDisabled={true}
        onOutsideClick={[Function]}
      >
        <div
          className="euiPopover euiPopover--anchorDownLeft"
          id="lnsChartSwitchPopover"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
        >
          <div
            className="euiPopover__anchor"
          >
            <ToolbarButton
              data-test-subj="lnsChartSwitchPopover"
              fontWeight="bold"
              onClick={[Function]}
            >
              <EuiButton
                className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                color="text"
                contentProps={
                  Object {
                    "className": "lnsToolbarButton__content",
                  }
                }
                data-test-subj="lnsChartSwitchPopover"
                iconSide="right"
                iconType="arrowDown"
                onClick={[Function]}
                size="s"
                textProps={
                  Object {
                    "className": "lnsToolbarButton__text",
                  }
                }
              >
                <EuiButtonDisplay
                  className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                  color="text"
                  contentProps={
                    Object {
                      "className": "lnsToolbarButton__content",
                    }
                  }
                  data-test-subj="lnsChartSwitchPopover"
                  disabled={false}
                  element="button"
                  iconSide="right"
                  iconType="arrowDown"
                  isDisabled={false}
                  onClick={[Function]}
                  size="s"
                  textProps={
                    Object {
                      "className": "lnsToolbarButton__text",
                    }
                  }
                  type="button"
                >
                  <button
                    className="euiButton euiButton--text euiButton--small lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                    data-test-subj="lnsChartSwitchPopover"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <EuiButtonContent
                      className="euiButton__content lnsToolbarButton__content"
                      iconSide="right"
                      iconType="arrowDown"
                      textProps={
                        Object {
                          "className": "euiButton__text lnsToolbarButton__text",
                        }
                      }
                    >
                      <span
                        className="euiButtonContent euiButtonContent--iconRight euiButton__content lnsToolbarButton__content"
                      >
                        <EuiIcon
                          className="euiButtonContent__icon"
                          size="m"
                          type="arrowDown"
                        >
                          <EuiIconEmpty
                            aria-hidden={true}
                            className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonContent__icon"
                            focusable="false"
                            role="img"
                            style={null}
                          >
                            <svg
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonContent__icon"
                              focusable="false"
                              height={16}
                              role="img"
                              style={null}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            />
                          </EuiIconEmpty>
                        </EuiIcon>
                        <span
                          className="euiButton__text lnsToolbarButton__text"
                        >
                          <VisualizationSummary
                            chart={[Function]}
                            fullLabel="Bar"
                            icon={[Function]}
                            id="bar"
                            label="bar"
                            selection={
                              Object {
                                "dataLoss": "nothing",
                              }
                            }
                            visualizationId="vis-bar-6636"
                          >
                            <EuiIcon
                              className="lnsChartSwitch__summaryIcon"
                              size="l"
                              type={[Function]}
                            >
                              <Component
                                aria-hidden={true}
                                className="euiIcon euiIcon--large lnsChartSwitch__summaryIcon"
                                focusable="false"
                                role="img"
                                style={null}
                              >
                                <LensIconChartBar>
                                  <svg
                                    fill="none"
                                    height={22}
                                    viewBox="0 0 30 22"
                                    width={30}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      className="lensChartIcon__subdued"
                                      d="M5 7a1 1 0 011 1v13a1 1 0 01-1 1H1a1 1 0 01-1-1V8a1 1 0 011-1h4zm16-7a1 1 0 011 1v20a1 1 0 01-1 1h-4a1 1 0 01-1-1V1a1 1 0 011-1h4z"
                                    />
                                    <path
                                      className="lensChartIcon__accent"
                                      d="M13 11a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1v-9a1 1 0 011-1h4zm16-7a1 1 0 011 1v16a1 1 0 01-1 1h-4a1 1 0 01-1-1V5a1 1 0 011-1h4z"
                                    />
                                  </svg>
                                </LensIconChartBar>
                              </Component>
                            </EuiIcon>
                            bar
                          </VisualizationSummary>
                        </span>
                      </span>
                    </EuiButtonContent>
                  </button>
                </EuiButtonDisplay>
              </EuiButton>
            </ToolbarButton>
          </div>
        </div>
      </EuiOutsideClickDetector>
    </EuiPopover>
  </div>
</ChartSwitch>
`;

exports[`Visualization chart switch components Renders workspace with horionzontal bar component 1`] = `
<ChartSwitch
  setVis={[MockFunction]}
  vis={
    Object {
      "chart": [Function],
      "fullLabel": "H. Bar",
      "icon": [Function],
      "id": "horizontal_bar",
      "label": "H. Bar",
      "selection": Object {
        "dataLoss": "nothing",
      },
      "visualizationId": "vis-bar-6637",
    }
  }
  visualizationTypes={
    Array [
      Object {
        "chart": [Function],
        "fullLabel": "Bar",
        "icon": [Function],
        "id": "bar",
        "label": "bar",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6636",
      },
      Object {
        "chart": [Function],
        "fullLabel": "H. Bar",
        "icon": [Function],
        "id": "horizontal_bar",
        "label": "H. Bar",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6637",
      },
      Object {
        "chart": [Function],
        "fullLabel": "Line",
        "icon": [Function],
        "id": "line",
        "label": "line",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6638",
      },
    ]
  }
>
  <div
    className="lnsChartSwitch__header"
  >
    <EuiPopover
      anchorPosition="downLeft"
      button={
        <ToolbarButton
          data-test-subj="lnsChartSwitchPopover"
          fontWeight="bold"
          onClick={[Function]}
        >
          <VisualizationSummary
            chart={[Function]}
            fullLabel="H. Bar"
            icon={[Function]}
            id="horizontal_bar"
            label="H. Bar"
            selection={
              Object {
                "dataLoss": "nothing",
              }
            }
            visualizationId="vis-bar-6637"
          />
        </ToolbarButton>
      }
      closePopover={[Function]}
      display="inlineBlock"
      hasArrow={true}
      id="lnsChartSwitchPopover"
      initialFocus=".lnsChartSwitch__popoverPanel"
      isOpen={false}
      ownFocus={true}
      panelClassName="lnsChartSwitch__popoverPanel"
      panelPaddingSize="s"
    >
      <EuiOutsideClickDetector
        isDisabled={true}
        onOutsideClick={[Function]}
      >
        <div
          className="euiPopover euiPopover--anchorDownLeft"
          id="lnsChartSwitchPopover"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
        >
          <div
            className="euiPopover__anchor"
          >
            <ToolbarButton
              data-test-subj="lnsChartSwitchPopover"
              fontWeight="bold"
              onClick={[Function]}
            >
              <EuiButton
                className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                color="text"
                contentProps={
                  Object {
                    "className": "lnsToolbarButton__content",
                  }
                }
                data-test-subj="lnsChartSwitchPopover"
                iconSide="right"
                iconType="arrowDown"
                onClick={[Function]}
                size="s"
                textProps={
                  Object {
                    "className": "lnsToolbarButton__text",
                  }
                }
              >
                <EuiButtonDisplay
                  className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                  color="text"
                  contentProps={
                    Object {
                      "className": "lnsToolbarButton__content",
                    }
                  }
                  data-test-subj="lnsChartSwitchPopover"
                  disabled={false}
                  element="button"
                  iconSide="right"
                  iconType="arrowDown"
                  isDisabled={false}
                  onClick={[Function]}
                  size="s"
                  textProps={
                    Object {
                      "className": "lnsToolbarButton__text",
                    }
                  }
                  type="button"
                >
                  <button
                    className="euiButton euiButton--text euiButton--small lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                    data-test-subj="lnsChartSwitchPopover"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <EuiButtonContent
                      className="euiButton__content lnsToolbarButton__content"
                      iconSide="right"
                      iconType="arrowDown"
                      textProps={
                        Object {
                          "className": "euiButton__text lnsToolbarButton__text",
                        }
                      }
                    >
                      <span
                        className="euiButtonContent euiButtonContent--iconRight euiButton__content lnsToolbarButton__content"
                      >
                        <EuiIcon
                          className="euiButtonContent__icon"
                          size="m"
                          type="arrowDown"
                        >
                          <EuiIconArrowDown
                            aria-hidden={true}
                            className="euiIcon euiIcon--medium euiButtonContent__icon"
                            focusable="false"
                            role="img"
                            style={null}
                          >
                            <svg
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiButtonContent__icon"
                              focusable="false"
                              height={16}
                              role="img"
                              style={null}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                fillRule="non-zero"
                              />
                            </svg>
                          </EuiIconArrowDown>
                        </EuiIcon>
                        <span
                          className="euiButton__text lnsToolbarButton__text"
                        >
                          <VisualizationSummary
                            chart={[Function]}
                            fullLabel="H. Bar"
                            icon={[Function]}
                            id="horizontal_bar"
                            label="H. Bar"
                            selection={
                              Object {
                                "dataLoss": "nothing",
                              }
                            }
                            visualizationId="vis-bar-6637"
                          >
                            <EuiIcon
                              className="lnsChartSwitch__summaryIcon"
                              size="l"
                              type={[Function]}
                            >
                              <Component
                                aria-hidden={true}
                                className="euiIcon euiIcon--large lnsChartSwitch__summaryIcon"
                                focusable="false"
                                role="img"
                                style={null}
                              >
                                <LensIconChartBarHorizontal>
                                  <svg
                                    fill="none"
                                    height={22}
                                    viewBox="0 0 30 22"
                                    width={30}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      className="lensChartIcon__subdued"
                                      d="M29 16a1 1 0 011 1v4a1 1 0 01-1 1H1a1 1 0 01-1-1v-4a1 1 0 011-1h28zM22 0a1 1 0 011 1v4a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h21z"
                                    />
                                    <path
                                      className="lensChartIcon__accent"
                                      d="M0 9a1 1 0 011-1h15a1 1 0 011 1v4a1 1 0 01-1 1H1a1 1 0 01-1-1V9z"
                                    />
                                  </svg>
                                </LensIconChartBarHorizontal>
                              </Component>
                            </EuiIcon>
                            H. Bar
                          </VisualizationSummary>
                        </span>
                      </span>
                    </EuiButtonContent>
                  </button>
                </EuiButtonDisplay>
              </EuiButton>
            </ToolbarButton>
          </div>
        </div>
      </EuiOutsideClickDetector>
    </EuiPopover>
  </div>
</ChartSwitch>
`;

exports[`Visualization chart switch components Renders workspace with line bar component 1`] = `
<ChartSwitch
  setVis={[MockFunction]}
  vis={
    Object {
      "chart": [Function],
      "fullLabel": "Line",
      "icon": [Function],
      "id": "line",
      "label": "line",
      "selection": Object {
        "dataLoss": "nothing",
      },
      "visualizationId": "vis-bar-6638",
    }
  }
  visualizationTypes={
    Array [
      Object {
        "chart": [Function],
        "fullLabel": "Bar",
        "icon": [Function],
        "id": "bar",
        "label": "bar",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6636",
      },
      Object {
        "chart": [Function],
        "fullLabel": "H. Bar",
        "icon": [Function],
        "id": "horizontal_bar",
        "label": "H. Bar",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6637",
      },
      Object {
        "chart": [Function],
        "fullLabel": "Line",
        "icon": [Function],
        "id": "line",
        "label": "line",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6638",
      },
    ]
  }
>
  <div
    className="lnsChartSwitch__header"
  >
    <EuiPopover
      anchorPosition="downLeft"
      button={
        <ToolbarButton
          data-test-subj="lnsChartSwitchPopover"
          fontWeight="bold"
          onClick={[Function]}
        >
          <VisualizationSummary
            chart={[Function]}
            fullLabel="Line"
            icon={[Function]}
            id="line"
            label="line"
            selection={
              Object {
                "dataLoss": "nothing",
              }
            }
            visualizationId="vis-bar-6638"
          />
        </ToolbarButton>
      }
      closePopover={[Function]}
      display="inlineBlock"
      hasArrow={true}
      id="lnsChartSwitchPopover"
      initialFocus=".lnsChartSwitch__popoverPanel"
      isOpen={false}
      ownFocus={true}
      panelClassName="lnsChartSwitch__popoverPanel"
      panelPaddingSize="s"
    >
      <EuiOutsideClickDetector
        isDisabled={true}
        onOutsideClick={[Function]}
      >
        <div
          className="euiPopover euiPopover--anchorDownLeft"
          id="lnsChartSwitchPopover"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
        >
          <div
            className="euiPopover__anchor"
          >
            <ToolbarButton
              data-test-subj="lnsChartSwitchPopover"
              fontWeight="bold"
              onClick={[Function]}
            >
              <EuiButton
                className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                color="text"
                contentProps={
                  Object {
                    "className": "lnsToolbarButton__content",
                  }
                }
                data-test-subj="lnsChartSwitchPopover"
                iconSide="right"
                iconType="arrowDown"
                onClick={[Function]}
                size="s"
                textProps={
                  Object {
                    "className": "lnsToolbarButton__text",
                  }
                }
              >
                <EuiButtonDisplay
                  className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                  color="text"
                  contentProps={
                    Object {
                      "className": "lnsToolbarButton__content",
                    }
                  }
                  data-test-subj="lnsChartSwitchPopover"
                  disabled={false}
                  element="button"
                  iconSide="right"
                  iconType="arrowDown"
                  isDisabled={false}
                  onClick={[Function]}
                  size="s"
                  textProps={
                    Object {
                      "className": "lnsToolbarButton__text",
                    }
                  }
                  type="button"
                >
                  <button
                    className="euiButton euiButton--text euiButton--small lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                    data-test-subj="lnsChartSwitchPopover"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <EuiButtonContent
                      className="euiButton__content lnsToolbarButton__content"
                      iconSide="right"
                      iconType="arrowDown"
                      textProps={
                        Object {
                          "className": "euiButton__text lnsToolbarButton__text",
                        }
                      }
                    >
                      <span
                        className="euiButtonContent euiButtonContent--iconRight euiButton__content lnsToolbarButton__content"
                      >
                        <EuiIcon
                          className="euiButtonContent__icon"
                          size="m"
                          type="arrowDown"
                        >
                          <EuiIconArrowDown
                            aria-hidden={true}
                            className="euiIcon euiIcon--medium euiButtonContent__icon"
                            focusable="false"
                            role="img"
                            style={null}
                          >
                            <svg
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiButtonContent__icon"
                              focusable="false"
                              height={16}
                              role="img"
                              style={null}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                fillRule="non-zero"
                              />
                            </svg>
                          </EuiIconArrowDown>
                        </EuiIcon>
                        <span
                          className="euiButton__text lnsToolbarButton__text"
                        >
                          <VisualizationSummary
                            chart={[Function]}
                            fullLabel="Line"
                            icon={[Function]}
                            id="line"
                            label="line"
                            selection={
                              Object {
                                "dataLoss": "nothing",
                              }
                            }
                            visualizationId="vis-bar-6638"
                          >
                            <EuiIcon
                              className="lnsChartSwitch__summaryIcon"
                              size="l"
                              type={[Function]}
                            >
                              <Component
                                aria-hidden={true}
                                className="euiIcon euiIcon--large lnsChartSwitch__summaryIcon"
                                focusable="false"
                                role="img"
                                style={null}
                              >
                                <LensIconChartLine>
                                  <svg
                                    fill="none"
                                    height={22}
                                    viewBox="0 0 30 22"
                                    width={30}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      className="lensChartIcon__subdued"
                                      d="M23.434 16.456c.211.553.406.982.58 1.277l.073.119c.038.058.072.105.101.141.52-.04 1.07-.248 2.13-.77l.235-.117C28.198 16.283 28.953 16 30 16v2c-.507 0-.988.146-1.89.571l-1.209.592C25.621 19.78 24.924 20 24 20l-.174-.005c-1.251-.076-1.805-1.036-2.994-4.993L22.93 15c.18.563.335 1.012.505 1.455zM6 1c1.269 0 1.966.69 3.492 2.939l.774 1.146.272.387.26.358C11.419 6.658 11.788 7 12 7c.466 0 .967-.252 1.99-.997l.891-.659.458-.325C16.424 4.272 17.093 4 18 4c1.377 0 1.925.863 3.168 4.999L19.07 9a26.766 26.766 0 00-.505-1.457c-.24-.631-.46-1.1-.652-1.395l-.051-.074-.045-.06c-.452.064-.988.375-2.007 1.13l-.691.512-.458.325C13.576 8.728 12.907 9 12 9c-1.269 0-1.966-.69-3.492-2.939l-.774-1.146-.272-.387-.26-.358C6.581 3.342 6.213 3 6 3c-.294 0-.885.651-2.017 2.33l-.491.731-.326.475C1.859 8.409 1.175 9 0 9V7c.294 0 .885-.651 2.017-2.33l.491-.731.326-.475C4.141 1.591 4.825 1 6 1z"
                                    />
                                    <path
                                      className="lensChartIcon__accent"
                                      d="M0 21c1.123 0 1.852-.477 3.295-1.885l.758-.75.345-.33C5.208 17.275 5.648 17 6 17c.466 0 .967.252 1.99.997l.891.659.458.325C10.424 19.728 11.093 20 12 20c1.325 0 1.996-.772 3.546-3.444l.593-1.028.385-.646C17.328 13.562 17.796 13 18 13h6c1.333 0 1.978-.795 3.452-3.676l.692-1.37.358-.69C29.333 5.7 29.831 5 30 5V3c-1.333 0-1.978.795-3.452 3.676l-.692 1.37-.358.69C24.667 10.3 24.169 11 24 11h-6c-1.325 0-1.996.772-3.546 3.444l-.593 1.028-.385.646C12.672 17.438 12.204 18 12 18c-.466 0-.967-.252-1.99-.997l-.891-.659-.458-.325C7.576 15.272 6.907 15 6 15c-1.123 0-1.852.477-3.295 1.885l-.758.75-.345.33C.792 18.725.352 19 0 19v2z"
                                    />
                                  </svg>
                                </LensIconChartLine>
                              </Component>
                            </EuiIcon>
                            line
                          </VisualizationSummary>
                        </span>
                      </span>
                    </EuiButtonContent>
                  </button>
                </EuiButtonDisplay>
              </EuiButton>
            </ToolbarButton>
          </div>
        </div>
      </EuiOutsideClickDetector>
    </EuiPopover>
  </div>
</ChartSwitch>
`;

exports[`Visualization workspace panel Renders workspace panel 1`] = `
<WorkspacePanel
  curVisId="bar"
  setCurVisId={[MockFunction]}
  visualizations={
    Object {
      "data": Object {
        "count()": Array [
          2549,
          9337,
          1173,
        ],
        "span(timestamp,1M)": Array [
          "2021-05-01 00:00:00",
          "2021-06-01 00:00:00",
          "2021-07-01 00:00:00",
        ],
      },
      "jsonData": Array [
        Object {
          "count()": 2549,
          "span(timestamp,1M)": "2021-05-01 00:00:00",
        },
        Object {
          "count()": 9337,
          "span(timestamp,1M)": "2021-06-01 00:00:00",
        },
        Object {
          "count()": 2549,
          "span(timestamp,1M)": "2021-07-01 00:00:00",
        },
      ],
      "metadata": Object {
        "fields": Array [
          Object {
            "name": "count()",
            "type": "integer",
          },
          Object {
            "name": "span(timestamp,1M)",
            "type": "timestamp",
          },
        ],
      },
    }
  }
>
  <WorkspacePanelWrapper
    emptyExpression={true}
    handleSavePanelNameChange={[Function]}
    savePanelName=""
    setVis={[MockFunction]}
    title=""
    vis={
      Object {
        "chart": <Bar
          barConfig={
            Object {
              "displaylogo": false,
              "responsive": true,
            }
          }
          layoutConfig={
            Object {
              "height": 500,
              "legend": Object {
                "orientation": "v",
                "traceorder": "normal",
              },
              "margin": Object {
                "b": 30,
                "l": 50,
                "pad": 0,
                "r": 10,
                "t": 30,
              },
              "showlegend": true,
            }
          }
          visualizations={
            Object {
              "data": Object {
                "count()": Array [
                  2549,
                  9337,
                  1173,
                ],
                "span(timestamp,1M)": Array [
                  "2021-05-01 00:00:00",
                  "2021-06-01 00:00:00",
                  "2021-07-01 00:00:00",
                ],
              },
              "jsonData": Array [
                Object {
                  "count()": 2549,
                  "span(timestamp,1M)": "2021-05-01 00:00:00",
                },
                Object {
                  "count()": 9337,
                  "span(timestamp,1M)": "2021-06-01 00:00:00",
                },
                Object {
                  "count()": 2549,
                  "span(timestamp,1M)": "2021-07-01 00:00:00",
                },
              ],
              "metadata": Object {
                "fields": Array [
                  Object {
                    "name": "count()",
                    "type": "integer",
                  },
                  Object {
                    "name": "span(timestamp,1M)",
                    "type": "timestamp",
                  },
                ],
              },
            }
          }
        />,
        "fullLabel": "Bar",
        "icon": [Function],
        "id": "bar",
        "label": "Bar",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-1",
      }
    }
    visualizationTypes={
      Array [
        Object {
          "chart": <Bar
            barConfig={
              Object {
                "displaylogo": false,
                "responsive": true,
              }
            }
            layoutConfig={
              Object {
                "height": 500,
                "legend": Object {
                  "orientation": "v",
                  "traceorder": "normal",
                },
                "margin": Object {
                  "b": 30,
                  "l": 50,
                  "pad": 0,
                  "r": 10,
                  "t": 30,
                },
                "showlegend": true,
              }
            }
            visualizations={
              Object {
                "data": Object {
                  "count()": Array [
                    2549,
                    9337,
                    1173,
                  ],
                  "span(timestamp,1M)": Array [
                    "2021-05-01 00:00:00",
                    "2021-06-01 00:00:00",
                    "2021-07-01 00:00:00",
                  ],
                },
                "jsonData": Array [
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-05-01 00:00:00",
                  },
                  Object {
                    "count()": 9337,
                    "span(timestamp,1M)": "2021-06-01 00:00:00",
                  },
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-07-01 00:00:00",
                  },
                ],
                "metadata": Object {
                  "fields": Array [
                    Object {
                      "name": "count()",
                      "type": "integer",
                    },
                    Object {
                      "name": "span(timestamp,1M)",
                      "type": "timestamp",
                    },
                  ],
                },
              }
            }
          />,
          "fullLabel": "Bar",
          "icon": [Function],
          "id": "bar",
          "label": "Bar",
          "selection": Object {
            "dataLoss": "nothing",
          },
          "visualizationId": "vis-bar-1",
        },
        Object {
          "chart": <HorizontalBar
            horizontalConfig={
              Object {
                "displaylogo": false,
                "responsive": true,
              }
            }
            layoutConfig={
              Object {
                "height": 500,
                "legend": Object {
                  "orientation": "v",
                  "traceorder": "normal",
                },
                "margin": Object {
                  "b": 30,
                  "l": 50,
                  "pad": 0,
                  "r": 10,
                  "t": 30,
                },
                "showlegend": true,
              }
            }
            visualizations={
              Object {
                "data": Object {
                  "count()": Array [
                    2549,
                    9337,
                    1173,
                  ],
                  "span(timestamp,1M)": Array [
                    "2021-05-01 00:00:00",
                    "2021-06-01 00:00:00",
                    "2021-07-01 00:00:00",
                  ],
                },
                "jsonData": Array [
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-05-01 00:00:00",
                  },
                  Object {
                    "count()": 9337,
                    "span(timestamp,1M)": "2021-06-01 00:00:00",
                  },
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-07-01 00:00:00",
                  },
                ],
                "metadata": Object {
                  "fields": Array [
                    Object {
                      "name": "count()",
                      "type": "integer",
                    },
                    Object {
                      "name": "span(timestamp,1M)",
                      "type": "timestamp",
                    },
                  ],
                },
              }
            }
          />,
          "fullLabel": "H. Bar",
          "icon": [Function],
          "id": "horizontal_bar",
          "label": "H. Bar",
          "selection": Object {
            "dataLoss": "nothing",
          },
          "visualizationId": "vis-horizontal-bar-2",
        },
        Object {
          "chart": <Line
            layoutConfig={
              Object {
                "height": 500,
                "legend": Object {
                  "orientation": "v",
                  "traceorder": "normal",
                },
                "margin": Object {
                  "b": 30,
                  "l": 50,
                  "pad": 0,
                  "r": 10,
                  "t": 30,
                },
                "showlegend": true,
              }
            }
            lineConfig={
              Object {
                "displaylogo": false,
                "responsive": true,
              }
            }
            visualizations={
              Object {
                "data": Object {
                  "count()": Array [
                    2549,
                    9337,
                    1173,
                  ],
                  "span(timestamp,1M)": Array [
                    "2021-05-01 00:00:00",
                    "2021-06-01 00:00:00",
                    "2021-07-01 00:00:00",
                  ],
                },
                "jsonData": Array [
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-05-01 00:00:00",
                  },
                  Object {
                    "count()": 9337,
                    "span(timestamp,1M)": "2021-06-01 00:00:00",
                  },
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-07-01 00:00:00",
                  },
                ],
                "metadata": Object {
                  "fields": Array [
                    Object {
                      "name": "count()",
                      "type": "integer",
                    },
                    Object {
                      "name": "span(timestamp,1M)",
                      "type": "timestamp",
                    },
                  ],
                },
              }
            }
          />,
          "fullLabel": "Line",
          "icon": [Function],
          "id": "line",
          "label": "Line",
          "selection": Object {
            "dataLoss": "nothing",
          },
          "visualizationId": "vis-line-3",
        },
      ]
    }
  >
    <div>
      <EuiFlexGroup
        className="lnsWorkspacePanelWrapper__toolbar"
        direction="row"
        gutterSize="m"
        justifyContent="spaceBetween"
        responsive={false}
        wrap={true}
      >
        <div
          className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--wrap lnsWorkspacePanelWrapper__toolbar"
        >
          <EuiFlexItem
            grow={false}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrowZero"
            >
              <ChartSwitch
                data-test-subj="lnsChartSwitcher"
                setVis={[MockFunction]}
                vis={
                  Object {
                    "chart": <Bar
                      barConfig={
                        Object {
                          "displaylogo": false,
                          "responsive": true,
                        }
                      }
                      layoutConfig={
                        Object {
                          "height": 500,
                          "legend": Object {
                            "orientation": "v",
                            "traceorder": "normal",
                          },
                          "margin": Object {
                            "b": 30,
                            "l": 50,
                            "pad": 0,
                            "r": 10,
                            "t": 30,
                          },
                          "showlegend": true,
                        }
                      }
                      visualizations={
                        Object {
                          "data": Object {
                            "count()": Array [
                              2549,
                              9337,
                              1173,
                            ],
                            "span(timestamp,1M)": Array [
                              "2021-05-01 00:00:00",
                              "2021-06-01 00:00:00",
                              "2021-07-01 00:00:00",
                            ],
                          },
                          "jsonData": Array [
                            Object {
                              "count()": 2549,
                              "span(timestamp,1M)": "2021-05-01 00:00:00",
                            },
                            Object {
                              "count()": 9337,
                              "span(timestamp,1M)": "2021-06-01 00:00:00",
                            },
                            Object {
                              "count()": 2549,
                              "span(timestamp,1M)": "2021-07-01 00:00:00",
                            },
                          ],
                          "metadata": Object {
                            "fields": Array [
                              Object {
                                "name": "count()",
                                "type": "integer",
                              },
                              Object {
                                "name": "span(timestamp,1M)",
                                "type": "timestamp",
                              },
                            ],
                          },
                        }
                      }
                    />,
                    "fullLabel": "Bar",
                    "icon": [Function],
                    "id": "bar",
                    "label": "Bar",
                    "selection": Object {
                      "dataLoss": "nothing",
                    },
                    "visualizationId": "vis-bar-1",
                  }
                }
                visualizationTypes={
                  Array [
                    Object {
                      "chart": <Bar
                        barConfig={
                          Object {
                            "displaylogo": false,
                            "responsive": true,
                          }
                        }
                        layoutConfig={
                          Object {
                            "height": 500,
                            "legend": Object {
                              "orientation": "v",
                              "traceorder": "normal",
                            },
                            "margin": Object {
                              "b": 30,
                              "l": 50,
                              "pad": 0,
                              "r": 10,
                              "t": 30,
                            },
                            "showlegend": true,
                          }
                        }
                        visualizations={
                          Object {
                            "data": Object {
                              "count()": Array [
                                2549,
                                9337,
                                1173,
                              ],
                              "span(timestamp,1M)": Array [
                                "2021-05-01 00:00:00",
                                "2021-06-01 00:00:00",
                                "2021-07-01 00:00:00",
                              ],
                            },
                            "jsonData": Array [
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-05-01 00:00:00",
                              },
                              Object {
                                "count()": 9337,
                                "span(timestamp,1M)": "2021-06-01 00:00:00",
                              },
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-07-01 00:00:00",
                              },
                            ],
                            "metadata": Object {
                              "fields": Array [
                                Object {
                                  "name": "count()",
                                  "type": "integer",
                                },
                                Object {
                                  "name": "span(timestamp,1M)",
                                  "type": "timestamp",
                                },
                              ],
                            },
                          }
                        }
                      />,
                      "fullLabel": "Bar",
                      "icon": [Function],
                      "id": "bar",
                      "label": "Bar",
                      "selection": Object {
                        "dataLoss": "nothing",
                      },
                      "visualizationId": "vis-bar-1",
                    },
                    Object {
                      "chart": <HorizontalBar
                        horizontalConfig={
                          Object {
                            "displaylogo": false,
                            "responsive": true,
                          }
                        }
                        layoutConfig={
                          Object {
                            "height": 500,
                            "legend": Object {
                              "orientation": "v",
                              "traceorder": "normal",
                            },
                            "margin": Object {
                              "b": 30,
                              "l": 50,
                              "pad": 0,
                              "r": 10,
                              "t": 30,
                            },
                            "showlegend": true,
                          }
                        }
                        visualizations={
                          Object {
                            "data": Object {
                              "count()": Array [
                                2549,
                                9337,
                                1173,
                              ],
                              "span(timestamp,1M)": Array [
                                "2021-05-01 00:00:00",
                                "2021-06-01 00:00:00",
                                "2021-07-01 00:00:00",
                              ],
                            },
                            "jsonData": Array [
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-05-01 00:00:00",
                              },
                              Object {
                                "count()": 9337,
                                "span(timestamp,1M)": "2021-06-01 00:00:00",
                              },
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-07-01 00:00:00",
                              },
                            ],
                            "metadata": Object {
                              "fields": Array [
                                Object {
                                  "name": "count()",
                                  "type": "integer",
                                },
                                Object {
                                  "name": "span(timestamp,1M)",
                                  "type": "timestamp",
                                },
                              ],
                            },
                          }
                        }
                      />,
                      "fullLabel": "H. Bar",
                      "icon": [Function],
                      "id": "horizontal_bar",
                      "label": "H. Bar",
                      "selection": Object {
                        "dataLoss": "nothing",
                      },
                      "visualizationId": "vis-horizontal-bar-2",
                    },
                    Object {
                      "chart": <Line
                        layoutConfig={
                          Object {
                            "height": 500,
                            "legend": Object {
                              "orientation": "v",
                              "traceorder": "normal",
                            },
                            "margin": Object {
                              "b": 30,
                              "l": 50,
                              "pad": 0,
                              "r": 10,
                              "t": 30,
                            },
                            "showlegend": true,
                          }
                        }
                        lineConfig={
                          Object {
                            "displaylogo": false,
                            "responsive": true,
                          }
                        }
                        visualizations={
                          Object {
                            "data": Object {
                              "count()": Array [
                                2549,
                                9337,
                                1173,
                              ],
                              "span(timestamp,1M)": Array [
                                "2021-05-01 00:00:00",
                                "2021-06-01 00:00:00",
                                "2021-07-01 00:00:00",
                              ],
                            },
                            "jsonData": Array [
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-05-01 00:00:00",
                              },
                              Object {
                                "count()": 9337,
                                "span(timestamp,1M)": "2021-06-01 00:00:00",
                              },
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-07-01 00:00:00",
                              },
                            ],
                            "metadata": Object {
                              "fields": Array [
                                Object {
                                  "name": "count()",
                                  "type": "integer",
                                },
                                Object {
                                  "name": "span(timestamp,1M)",
                                  "type": "timestamp",
                                },
                              ],
                            },
                          }
                        }
                      />,
                      "fullLabel": "Line",
                      "icon": [Function],
                      "id": "line",
                      "label": "Line",
                      "selection": Object {
                        "dataLoss": "nothing",
                      },
                      "visualizationId": "vis-line-3",
                    },
                  ]
                }
              >
                <div
                  className="lnsChartSwitch__header"
                >
                  <EuiPopover
                    anchorPosition="downLeft"
                    button={
                      <ToolbarButton
                        data-test-subj="lnsChartSwitchPopover"
                        fontWeight="bold"
                        onClick={[Function]}
                      >
                        <VisualizationSummary
                          chart={
                            <Bar
                              barConfig={
                                Object {
                                  "displaylogo": false,
                                  "responsive": true,
                                }
                              }
                              layoutConfig={
                                Object {
                                  "height": 500,
                                  "legend": Object {
                                    "orientation": "v",
                                    "traceorder": "normal",
                                  },
                                  "margin": Object {
                                    "b": 30,
                                    "l": 50,
                                    "pad": 0,
                                    "r": 10,
                                    "t": 30,
                                  },
                                  "showlegend": true,
                                }
                              }
                              visualizations={
                                Object {
                                  "data": Object {
                                    "count()": Array [
                                      2549,
                                      9337,
                                      1173,
                                    ],
                                    "span(timestamp,1M)": Array [
                                      "2021-05-01 00:00:00",
                                      "2021-06-01 00:00:00",
                                      "2021-07-01 00:00:00",
                                    ],
                                  },
                                  "jsonData": Array [
                                    Object {
                                      "count()": 2549,
                                      "span(timestamp,1M)": "2021-05-01 00:00:00",
                                    },
                                    Object {
                                      "count()": 9337,
                                      "span(timestamp,1M)": "2021-06-01 00:00:00",
                                    },
                                    Object {
                                      "count()": 2549,
                                      "span(timestamp,1M)": "2021-07-01 00:00:00",
                                    },
                                  ],
                                  "metadata": Object {
                                    "fields": Array [
                                      Object {
                                        "name": "count()",
                                        "type": "integer",
                                      },
                                      Object {
                                        "name": "span(timestamp,1M)",
                                        "type": "timestamp",
                                      },
                                    ],
                                  },
                                }
                              }
                            />
                          }
                          fullLabel="Bar"
                          icon={[Function]}
                          id="bar"
                          label="Bar"
                          selection={
                            Object {
                              "dataLoss": "nothing",
                            }
                          }
                          visualizationId="vis-bar-1"
                        />
                      </ToolbarButton>
                    }
                    closePopover={[Function]}
                    display="inlineBlock"
                    hasArrow={true}
                    id="lnsChartSwitchPopover"
                    initialFocus=".lnsChartSwitch__popoverPanel"
                    isOpen={false}
                    ownFocus={true}
                    panelClassName="lnsChartSwitch__popoverPanel"
                    panelPaddingSize="s"
                  >
                    <EuiOutsideClickDetector
                      isDisabled={true}
                      onOutsideClick={[Function]}
                    >
                      <div
                        className="euiPopover euiPopover--anchorDownLeft"
                        id="lnsChartSwitchPopover"
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchStart={[Function]}
                      >
                        <div
                          className="euiPopover__anchor"
                        >
                          <ToolbarButton
                            data-test-subj="lnsChartSwitchPopover"
                            fontWeight="bold"
                            onClick={[Function]}
                          >
                            <EuiButton
                              className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                              color="text"
                              contentProps={
                                Object {
                                  "className": "lnsToolbarButton__content",
                                }
                              }
                              data-test-subj="lnsChartSwitchPopover"
                              iconSide="right"
                              iconType="arrowDown"
                              onClick={[Function]}
                              size="s"
                              textProps={
                                Object {
                                  "className": "lnsToolbarButton__text",
                                }
                              }
                            >
                              <EuiButtonDisplay
                                className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                                color="text"
                                contentProps={
                                  Object {
                                    "className": "lnsToolbarButton__content",
                                  }
                                }
                                data-test-subj="lnsChartSwitchPopover"
                                disabled={false}
                                element="button"
                                iconSide="right"
                                iconType="arrowDown"
                                isDisabled={false}
                                onClick={[Function]}
                                size="s"
                                textProps={
                                  Object {
                                    "className": "lnsToolbarButton__text",
                                  }
                                }
                                type="button"
                              >
                                <button
                                  className="euiButton euiButton--text euiButton--small lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                                  data-test-subj="lnsChartSwitchPopover"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <EuiButtonContent
                                    className="euiButton__content lnsToolbarButton__content"
                                    iconSide="right"
                                    iconType="arrowDown"
                                    textProps={
                                      Object {
                                        "className": "euiButton__text lnsToolbarButton__text",
                                      }
                                    }
                                  >
                                    <span
                                      className="euiButtonContent euiButtonContent--iconRight euiButton__content lnsToolbarButton__content"
                                    >
                                      <EuiIcon
                                        className="euiButtonContent__icon"
                                        size="m"
                                        type="arrowDown"
                                      >
                                        <EuiIconArrowDown
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiButtonContent__icon"
                                          focusable="false"
                                          role="img"
                                          style={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--medium euiButtonContent__icon"
                                            focusable="false"
                                            height={16}
                                            role="img"
                                            style={null}
                                            viewBox="0 0 16 16"
                                            width={16}
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                              fillRule="non-zero"
                                            />
                                          </svg>
                                        </EuiIconArrowDown>
                                      </EuiIcon>
                                      <span
                                        className="euiButton__text lnsToolbarButton__text"
                                      >
                                        <VisualizationSummary
                                          chart={
                                            <Bar
                                              barConfig={
                                                Object {
                                                  "displaylogo": false,
                                                  "responsive": true,
                                                }
                                              }
                                              layoutConfig={
                                                Object {
                                                  "height": 500,
                                                  "legend": Object {
                                                    "orientation": "v",
                                                    "traceorder": "normal",
                                                  },
                                                  "margin": Object {
                                                    "b": 30,
                                                    "l": 50,
                                                    "pad": 0,
                                                    "r": 10,
                                                    "t": 30,
                                                  },
                                                  "showlegend": true,
                                                }
                                              }
                                              visualizations={
                                                Object {
                                                  "data": Object {
                                                    "count()": Array [
                                                      2549,
                                                      9337,
                                                      1173,
                                                    ],
                                                    "span(timestamp,1M)": Array [
                                                      "2021-05-01 00:00:00",
                                                      "2021-06-01 00:00:00",
                                                      "2021-07-01 00:00:00",
                                                    ],
                                                  },
                                                  "jsonData": Array [
                                                    Object {
                                                      "count()": 2549,
                                                      "span(timestamp,1M)": "2021-05-01 00:00:00",
                                                    },
                                                    Object {
                                                      "count()": 9337,
                                                      "span(timestamp,1M)": "2021-06-01 00:00:00",
                                                    },
                                                    Object {
                                                      "count()": 2549,
                                                      "span(timestamp,1M)": "2021-07-01 00:00:00",
                                                    },
                                                  ],
                                                  "metadata": Object {
                                                    "fields": Array [
                                                      Object {
                                                        "name": "count()",
                                                        "type": "integer",
                                                      },
                                                      Object {
                                                        "name": "span(timestamp,1M)",
                                                        "type": "timestamp",
                                                      },
                                                    ],
                                                  },
                                                }
                                              }
                                            />
                                          }
                                          fullLabel="Bar"
                                          icon={[Function]}
                                          id="bar"
                                          label="Bar"
                                          selection={
                                            Object {
                                              "dataLoss": "nothing",
                                            }
                                          }
                                          visualizationId="vis-bar-1"
                                        >
                                          <EuiIcon
                                            className="lnsChartSwitch__summaryIcon"
                                            size="l"
                                            type={[Function]}
                                          >
                                            <LensIconChartBar
                                              aria-hidden={true}
                                              className="euiIcon euiIcon--large lnsChartSwitch__summaryIcon"
                                              focusable="false"
                                              role="img"
                                              style={null}
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--large lnsChartSwitch__summaryIcon"
                                                fill="none"
                                                focusable="false"
                                                height={22}
                                                role="img"
                                                style={null}
                                                viewBox="0 0 30 22"
                                                width={30}
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  className="lensChartIcon__subdued"
                                                  d="M5 7a1 1 0 011 1v13a1 1 0 01-1 1H1a1 1 0 01-1-1V8a1 1 0 011-1h4zm16-7a1 1 0 011 1v20a1 1 0 01-1 1h-4a1 1 0 01-1-1V1a1 1 0 011-1h4z"
                                                />
                                                <path
                                                  className="lensChartIcon__accent"
                                                  d="M13 11a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1v-9a1 1 0 011-1h4zm16-7a1 1 0 011 1v16a1 1 0 01-1 1h-4a1 1 0 01-1-1V5a1 1 0 011-1h4z"
                                                />
                                              </svg>
                                            </LensIconChartBar>
                                          </EuiIcon>
                                          Bar
                                        </VisualizationSummary>
                                      </span>
                                    </span>
                                  </EuiButtonContent>
                                </button>
                              </EuiButtonDisplay>
                            </EuiButton>
                          </ToolbarButton>
                        </div>
                      </div>
                    </EuiOutsideClickDetector>
                  </EuiPopover>
                </div>
              </ChartSwitch>
            </div>
          </EuiFlexItem>
        </div>
      </EuiFlexGroup>
    </div>
    <EuiPageContent
      className="lnsWorkspacePanelWrapper"
    >
      <EuiPanel
        className="euiPageContent lnsWorkspacePanelWrapper"
        paddingSize="l"
      >
        <div
          className="euiPanel euiPanel--paddingLarge euiPageContent lnsWorkspacePanelWrapper"
        >
          <EuiPageContentBody
            className="lnsWorkspacePanelWrapper__pageContentBody"
          >
            <div
              className="euiPageContentBody lnsWorkspacePanelWrapper__pageContentBody"
            >
              <DragDrop
                className="lnsWorkspacePanel__dragDrop"
                data-test-subj="lnsWorkspace"
                draggable={false}
                droppable={false}
                onDrop={[Function]}
              >
                <Memo(DragDropInner)
                  className="lnsWorkspacePanel__dragDrop"
                  data-test-subj="lnsWorkspace"
                  draggable={false}
                  droppable={false}
                  isDragging={false}
                  isNotDroppable={false}
                  onDrop={[Function]}
                  setDragging={[Function]}
                >
                  <div
                    className="lnsDragDrop lnsDragDrop-isDroppable lnsWorkspacePanel__dragDrop"
                    data-test-subj="lnsWorkspace"
                    draggable={false}
                    onDragEnd={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDragStart={[Function]}
                    onDrop={[Function]}
                  >
                    <Bar
                      barConfig={
                        Object {
                          "displaylogo": false,
                          "responsive": true,
                        }
                      }
                      layoutConfig={
                        Object {
                          "height": 500,
                          "legend": Object {
                            "orientation": "v",
                            "traceorder": "normal",
                          },
                          "margin": Object {
                            "b": 30,
                            "l": 50,
                            "pad": 0,
                            "r": 10,
                            "t": 30,
                          },
                          "showlegend": true,
                        }
                      }
                      visualizations={
                        Object {
                          "data": Object {
                            "count()": Array [
                              2549,
                              9337,
                              1173,
                            ],
                            "span(timestamp,1M)": Array [
                              "2021-05-01 00:00:00",
                              "2021-06-01 00:00:00",
                              "2021-07-01 00:00:00",
                            ],
                          },
                          "jsonData": Array [
                            Object {
                              "count()": 2549,
                              "span(timestamp,1M)": "2021-05-01 00:00:00",
                            },
                            Object {
                              "count()": 9337,
                              "span(timestamp,1M)": "2021-06-01 00:00:00",
                            },
                            Object {
                              "count()": 2549,
                              "span(timestamp,1M)": "2021-07-01 00:00:00",
                            },
                          ],
                          "metadata": Object {
                            "fields": Array [
                              Object {
                                "name": "count()",
                                "type": "integer",
                              },
                              Object {
                                "name": "span(timestamp,1M)",
                                "type": "timestamp",
                              },
                            ],
                          },
                        }
                      }
                    >
                      <Plt
                        config={
                          Object {
                            "displaylogo": false,
                            "responsive": true,
                          }
                        }
                        data={
                          Array [
                            Object {
                              "displaylogo": false,
                              "marker": Object {
                                "color": Array [
                                  "#3CA1C7",
                                  "#8C55A3",
                                  "#DB748A",
                                ],
                              },
                              "name": "count()",
                              "responsive": true,
                              "type": "bar",
                              "x": Array [
                                "2021-05-01 00:00:00",
                                "2021-06-01 00:00:00",
                                "2021-07-01 00:00:00",
                              ],
                              "y": Array [
                                2549,
                                9337,
                                1173,
                              ],
                            },
                          ]
                        }
                        layout={
                          Object {
                            "colorway": Array [
                              "#3CA1C7",
                              "#8C55A3",
                              "#DB748A",
                              "#F2BE4B",
                              "#68CCC2",
                              "#2A7866",
                              "#843769",
                              "#374FB8",
                              "#BD6F26",
                              "#4C636F",
                            ],
                            "height": 500,
                            "legend": Object {
                              "orientation": "v",
                              "traceorder": "normal",
                            },
                            "margin": Object {
                              "b": 30,
                              "l": 50,
                              "pad": 0,
                              "r": 10,
                              "t": 30,
                            },
                            "showlegend": true,
                            "xaxis": Object {
                              "automargin": true,
                            },
                            "yaxis": Object {
                              "automargin": true,
                            },
                          }
                        }
                      >
                        <PlotlyComponent
                          config={
                            Object {
                              "displayModeBar": false,
                              "displaylogo": false,
                              "responsive": true,
                            }
                          }
                          data={
                            Array [
                              Object {
                                "displaylogo": false,
                                "marker": Object {
                                  "color": Array [
                                    "#3CA1C7",
                                    "#8C55A3",
                                    "#DB748A",
                                  ],
                                },
                                "name": "count()",
                                "responsive": true,
                                "type": "bar",
                                "x": Array [
                                  "2021-05-01 00:00:00",
                                  "2021-06-01 00:00:00",
                                  "2021-07-01 00:00:00",
                                ],
                                "y": Array [
                                  2549,
                                  9337,
                                  1173,
                                ],
                              },
                            ]
                          }
                          debug={false}
                          layout={
                            Object {
                              "autosize": true,
                              "barmode": "stack",
                              "colorway": Array [
                                "#3CA1C7",
                                "#8C55A3",
                                "#DB748A",
                                "#F2BE4B",
                                "#68CCC2",
                                "#2A7866",
                                "#843769",
                                "#374FB8",
                                "#BD6F26",
                                "#4C636F",
                              ],
                              "height": 500,
                              "hovermode": "closest",
                              "legend": Object {
                                "orientation": "v",
                                "traceorder": "normal",
                              },
                              "margin": Object {
                                "b": 30,
                                "l": 50,
                                "pad": 0,
                                "r": 10,
                                "t": 30,
                              },
                              "showlegend": true,
                              "xaxis": Object {
                                "automargin": true,
                              },
                              "yaxis": Object {
                                "automargin": true,
                              },
                            }
                          }
                          style={
                            Object {
                              "height": "100%",
                              "width": "100%",
                            }
                          }
                          useResizeHandler={true}
                        >
                          <div
                            style={
                              Object {
                                "height": "100%",
                                "width": "100%",
                              }
                            }
                          />
                        </PlotlyComponent>
                      </Plt>
                    </Bar>
                  </div>
                </Memo(DragDropInner)>
              </DragDrop>
            </div>
          </EuiPageContentBody>
        </div>
      </EuiPanel>
    </EuiPageContent>
  </WorkspacePanelWrapper>
</WorkspacePanel>
`;

exports[`Visualization workspace panel Renders workspace panel 2`] = `
<WorkspacePanel
  curVisId="bar"
  setCurVisId={[MockFunction]}
  visualizations={
    Object {
      "data": Object {
        "count()": Array [
          2549,
          9337,
          1173,
        ],
        "span(timestamp,1M)": Array [
          "2021-05-01 00:00:00",
          "2021-06-01 00:00:00",
          "2021-07-01 00:00:00",
        ],
      },
      "jsonData": Array [
        Object {
          "count()": 2549,
          "span(timestamp,1M)": "2021-05-01 00:00:00",
        },
        Object {
          "count()": 9337,
          "span(timestamp,1M)": "2021-06-01 00:00:00",
        },
        Object {
          "count()": 2549,
          "span(timestamp,1M)": "2021-07-01 00:00:00",
        },
      ],
      "metadata": Object {
        "fields": Array [
          Object {
            "name": "count()",
            "type": "integer",
          },
          Object {
            "name": "span(timestamp,1M)",
            "type": "timestamp",
          },
        ],
      },
    }
  }
>
  <WorkspacePanelWrapper
    emptyExpression={true}
    handleSavePanelNameChange={[Function]}
    savePanelName=""
    setVis={[MockFunction]}
    title=""
    vis={
      Object {
        "chart": <Bar
          barConfig={
            Object {
              "displaylogo": false,
              "responsive": true,
            }
          }
          layoutConfig={
            Object {
              "height": 500,
              "legend": Object {
                "orientation": "v",
                "traceorder": "normal",
              },
              "margin": Object {
                "b": 30,
                "l": 50,
                "pad": 0,
                "r": 10,
                "t": 30,
              },
              "showlegend": true,
            }
          }
          visualizations={
            Object {
              "data": Object {
                "count()": Array [
                  2549,
                  9337,
                  1173,
                ],
                "span(timestamp,1M)": Array [
                  "2021-05-01 00:00:00",
                  "2021-06-01 00:00:00",
                  "2021-07-01 00:00:00",
                ],
              },
              "jsonData": Array [
                Object {
                  "count()": 2549,
                  "span(timestamp,1M)": "2021-05-01 00:00:00",
                },
                Object {
                  "count()": 9337,
                  "span(timestamp,1M)": "2021-06-01 00:00:00",
                },
                Object {
                  "count()": 2549,
                  "span(timestamp,1M)": "2021-07-01 00:00:00",
                },
              ],
              "metadata": Object {
                "fields": Array [
                  Object {
                    "name": "count()",
                    "type": "integer",
                  },
                  Object {
                    "name": "span(timestamp,1M)",
                    "type": "timestamp",
                  },
                ],
              },
            }
          }
        />,
        "fullLabel": "Bar",
        "icon": [Function],
        "id": "bar",
        "label": "Bar",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-1",
      }
    }
    visualizationTypes={
      Array [
        Object {
          "chart": <Bar
            barConfig={
              Object {
                "displaylogo": false,
                "responsive": true,
              }
            }
            layoutConfig={
              Object {
                "height": 500,
                "legend": Object {
                  "orientation": "v",
                  "traceorder": "normal",
                },
                "margin": Object {
                  "b": 30,
                  "l": 50,
                  "pad": 0,
                  "r": 10,
                  "t": 30,
                },
                "showlegend": true,
              }
            }
            visualizations={
              Object {
                "data": Object {
                  "count()": Array [
                    2549,
                    9337,
                    1173,
                  ],
                  "span(timestamp,1M)": Array [
                    "2021-05-01 00:00:00",
                    "2021-06-01 00:00:00",
                    "2021-07-01 00:00:00",
                  ],
                },
                "jsonData": Array [
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-05-01 00:00:00",
                  },
                  Object {
                    "count()": 9337,
                    "span(timestamp,1M)": "2021-06-01 00:00:00",
                  },
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-07-01 00:00:00",
                  },
                ],
                "metadata": Object {
                  "fields": Array [
                    Object {
                      "name": "count()",
                      "type": "integer",
                    },
                    Object {
                      "name": "span(timestamp,1M)",
                      "type": "timestamp",
                    },
                  ],
                },
              }
            }
          />,
          "fullLabel": "Bar",
          "icon": [Function],
          "id": "bar",
          "label": "Bar",
          "selection": Object {
            "dataLoss": "nothing",
          },
          "visualizationId": "vis-bar-1",
        },
        Object {
          "chart": <HorizontalBar
            horizontalConfig={
              Object {
                "displaylogo": false,
                "responsive": true,
              }
            }
            layoutConfig={
              Object {
                "height": 500,
                "legend": Object {
                  "orientation": "v",
                  "traceorder": "normal",
                },
                "margin": Object {
                  "b": 30,
                  "l": 50,
                  "pad": 0,
                  "r": 10,
                  "t": 30,
                },
                "showlegend": true,
              }
            }
            visualizations={
              Object {
                "data": Object {
                  "count()": Array [
                    2549,
                    9337,
                    1173,
                  ],
                  "span(timestamp,1M)": Array [
                    "2021-05-01 00:00:00",
                    "2021-06-01 00:00:00",
                    "2021-07-01 00:00:00",
                  ],
                },
                "jsonData": Array [
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-05-01 00:00:00",
                  },
                  Object {
                    "count()": 9337,
                    "span(timestamp,1M)": "2021-06-01 00:00:00",
                  },
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-07-01 00:00:00",
                  },
                ],
                "metadata": Object {
                  "fields": Array [
                    Object {
                      "name": "count()",
                      "type": "integer",
                    },
                    Object {
                      "name": "span(timestamp,1M)",
                      "type": "timestamp",
                    },
                  ],
                },
              }
            }
          />,
          "fullLabel": "H. Bar",
          "icon": [Function],
          "id": "horizontal_bar",
          "label": "H. Bar",
          "selection": Object {
            "dataLoss": "nothing",
          },
          "visualizationId": "vis-horizontal-bar-2",
        },
        Object {
          "chart": <Line
            layoutConfig={
              Object {
                "height": 500,
                "legend": Object {
                  "orientation": "v",
                  "traceorder": "normal",
                },
                "margin": Object {
                  "b": 30,
                  "l": 50,
                  "pad": 0,
                  "r": 10,
                  "t": 30,
                },
                "showlegend": true,
              }
            }
            lineConfig={
              Object {
                "displaylogo": false,
                "responsive": true,
              }
            }
            visualizations={
              Object {
                "data": Object {
                  "count()": Array [
                    2549,
                    9337,
                    1173,
                  ],
                  "span(timestamp,1M)": Array [
                    "2021-05-01 00:00:00",
                    "2021-06-01 00:00:00",
                    "2021-07-01 00:00:00",
                  ],
                },
                "jsonData": Array [
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-05-01 00:00:00",
                  },
                  Object {
                    "count()": 9337,
                    "span(timestamp,1M)": "2021-06-01 00:00:00",
                  },
                  Object {
                    "count()": 2549,
                    "span(timestamp,1M)": "2021-07-01 00:00:00",
                  },
                ],
                "metadata": Object {
                  "fields": Array [
                    Object {
                      "name": "count()",
                      "type": "integer",
                    },
                    Object {
                      "name": "span(timestamp,1M)",
                      "type": "timestamp",
                    },
                  ],
                },
              }
            }
          />,
          "fullLabel": "Line",
          "icon": [Function],
          "id": "line",
          "label": "Line",
          "selection": Object {
            "dataLoss": "nothing",
          },
          "visualizationId": "vis-line-3",
        },
      ]
    }
  >
    <div>
      <EuiFlexGroup
        className="lnsWorkspacePanelWrapper__toolbar"
        direction="row"
        gutterSize="m"
        justifyContent="spaceBetween"
        responsive={false}
        wrap={true}
      >
        <div
          className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--wrap lnsWorkspacePanelWrapper__toolbar"
        >
          <EuiFlexItem
            grow={false}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrowZero"
            >
              <ChartSwitch
                data-test-subj="lnsChartSwitcher"
                setVis={[MockFunction]}
                vis={
                  Object {
                    "chart": <Bar
                      barConfig={
                        Object {
                          "displaylogo": false,
                          "responsive": true,
                        }
                      }
                      layoutConfig={
                        Object {
                          "height": 500,
                          "legend": Object {
                            "orientation": "v",
                            "traceorder": "normal",
                          },
                          "margin": Object {
                            "b": 30,
                            "l": 50,
                            "pad": 0,
                            "r": 10,
                            "t": 30,
                          },
                          "showlegend": true,
                        }
                      }
                      visualizations={
                        Object {
                          "data": Object {
                            "count()": Array [
                              2549,
                              9337,
                              1173,
                            ],
                            "span(timestamp,1M)": Array [
                              "2021-05-01 00:00:00",
                              "2021-06-01 00:00:00",
                              "2021-07-01 00:00:00",
                            ],
                          },
                          "jsonData": Array [
                            Object {
                              "count()": 2549,
                              "span(timestamp,1M)": "2021-05-01 00:00:00",
                            },
                            Object {
                              "count()": 9337,
                              "span(timestamp,1M)": "2021-06-01 00:00:00",
                            },
                            Object {
                              "count()": 2549,
                              "span(timestamp,1M)": "2021-07-01 00:00:00",
                            },
                          ],
                          "metadata": Object {
                            "fields": Array [
                              Object {
                                "name": "count()",
                                "type": "integer",
                              },
                              Object {
                                "name": "span(timestamp,1M)",
                                "type": "timestamp",
                              },
                            ],
                          },
                        }
                      }
                    />,
                    "fullLabel": "Bar",
                    "icon": [Function],
                    "id": "bar",
                    "label": "Bar",
                    "selection": Object {
                      "dataLoss": "nothing",
                    },
                    "visualizationId": "vis-bar-1",
                  }
                }
                visualizationTypes={
                  Array [
                    Object {
                      "chart": <Bar
                        barConfig={
                          Object {
                            "displaylogo": false,
                            "responsive": true,
                          }
                        }
                        layoutConfig={
                          Object {
                            "height": 500,
                            "legend": Object {
                              "orientation": "v",
                              "traceorder": "normal",
                            },
                            "margin": Object {
                              "b": 30,
                              "l": 50,
                              "pad": 0,
                              "r": 10,
                              "t": 30,
                            },
                            "showlegend": true,
                          }
                        }
                        visualizations={
                          Object {
                            "data": Object {
                              "count()": Array [
                                2549,
                                9337,
                                1173,
                              ],
                              "span(timestamp,1M)": Array [
                                "2021-05-01 00:00:00",
                                "2021-06-01 00:00:00",
                                "2021-07-01 00:00:00",
                              ],
                            },
                            "jsonData": Array [
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-05-01 00:00:00",
                              },
                              Object {
                                "count()": 9337,
                                "span(timestamp,1M)": "2021-06-01 00:00:00",
                              },
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-07-01 00:00:00",
                              },
                            ],
                            "metadata": Object {
                              "fields": Array [
                                Object {
                                  "name": "count()",
                                  "type": "integer",
                                },
                                Object {
                                  "name": "span(timestamp,1M)",
                                  "type": "timestamp",
                                },
                              ],
                            },
                          }
                        }
                      />,
                      "fullLabel": "Bar",
                      "icon": [Function],
                      "id": "bar",
                      "label": "Bar",
                      "selection": Object {
                        "dataLoss": "nothing",
                      },
                      "visualizationId": "vis-bar-1",
                    },
                    Object {
                      "chart": <HorizontalBar
                        horizontalConfig={
                          Object {
                            "displaylogo": false,
                            "responsive": true,
                          }
                        }
                        layoutConfig={
                          Object {
                            "height": 500,
                            "legend": Object {
                              "orientation": "v",
                              "traceorder": "normal",
                            },
                            "margin": Object {
                              "b": 30,
                              "l": 50,
                              "pad": 0,
                              "r": 10,
                              "t": 30,
                            },
                            "showlegend": true,
                          }
                        }
                        visualizations={
                          Object {
                            "data": Object {
                              "count()": Array [
                                2549,
                                9337,
                                1173,
                              ],
                              "span(timestamp,1M)": Array [
                                "2021-05-01 00:00:00",
                                "2021-06-01 00:00:00",
                                "2021-07-01 00:00:00",
                              ],
                            },
                            "jsonData": Array [
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-05-01 00:00:00",
                              },
                              Object {
                                "count()": 9337,
                                "span(timestamp,1M)": "2021-06-01 00:00:00",
                              },
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-07-01 00:00:00",
                              },
                            ],
                            "metadata": Object {
                              "fields": Array [
                                Object {
                                  "name": "count()",
                                  "type": "integer",
                                },
                                Object {
                                  "name": "span(timestamp,1M)",
                                  "type": "timestamp",
                                },
                              ],
                            },
                          }
                        }
                      />,
                      "fullLabel": "H. Bar",
                      "icon": [Function],
                      "id": "horizontal_bar",
                      "label": "H. Bar",
                      "selection": Object {
                        "dataLoss": "nothing",
                      },
                      "visualizationId": "vis-horizontal-bar-2",
                    },
                    Object {
                      "chart": <Line
                        layoutConfig={
                          Object {
                            "height": 500,
                            "legend": Object {
                              "orientation": "v",
                              "traceorder": "normal",
                            },
                            "margin": Object {
                              "b": 30,
                              "l": 50,
                              "pad": 0,
                              "r": 10,
                              "t": 30,
                            },
                            "showlegend": true,
                          }
                        }
                        lineConfig={
                          Object {
                            "displaylogo": false,
                            "responsive": true,
                          }
                        }
                        visualizations={
                          Object {
                            "data": Object {
                              "count()": Array [
                                2549,
                                9337,
                                1173,
                              ],
                              "span(timestamp,1M)": Array [
                                "2021-05-01 00:00:00",
                                "2021-06-01 00:00:00",
                                "2021-07-01 00:00:00",
                              ],
                            },
                            "jsonData": Array [
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-05-01 00:00:00",
                              },
                              Object {
                                "count()": 9337,
                                "span(timestamp,1M)": "2021-06-01 00:00:00",
                              },
                              Object {
                                "count()": 2549,
                                "span(timestamp,1M)": "2021-07-01 00:00:00",
                              },
                            ],
                            "metadata": Object {
                              "fields": Array [
                                Object {
                                  "name": "count()",
                                  "type": "integer",
                                },
                                Object {
                                  "name": "span(timestamp,1M)",
                                  "type": "timestamp",
                                },
                              ],
                            },
                          }
                        }
                      />,
                      "fullLabel": "Line",
                      "icon": [Function],
                      "id": "line",
                      "label": "Line",
                      "selection": Object {
                        "dataLoss": "nothing",
                      },
                      "visualizationId": "vis-line-3",
                    },
                  ]
                }
              >
                <div
                  className="lnsChartSwitch__header"
                >
                  <EuiPopover
                    anchorPosition="downLeft"
                    button={
                      <ToolbarButton
                        data-test-subj="lnsChartSwitchPopover"
                        fontWeight="bold"
                        onClick={[Function]}
                      >
                        <VisualizationSummary
                          chart={
                            <Bar
                              barConfig={
                                Object {
                                  "displaylogo": false,
                                  "responsive": true,
                                }
                              }
                              layoutConfig={
                                Object {
                                  "height": 500,
                                  "legend": Object {
                                    "orientation": "v",
                                    "traceorder": "normal",
                                  },
                                  "margin": Object {
                                    "b": 30,
                                    "l": 50,
                                    "pad": 0,
                                    "r": 10,
                                    "t": 30,
                                  },
                                  "showlegend": true,
                                }
                              }
                              visualizations={
                                Object {
                                  "data": Object {
                                    "count()": Array [
                                      2549,
                                      9337,
                                      1173,
                                    ],
                                    "span(timestamp,1M)": Array [
                                      "2021-05-01 00:00:00",
                                      "2021-06-01 00:00:00",
                                      "2021-07-01 00:00:00",
                                    ],
                                  },
                                  "jsonData": Array [
                                    Object {
                                      "count()": 2549,
                                      "span(timestamp,1M)": "2021-05-01 00:00:00",
                                    },
                                    Object {
                                      "count()": 9337,
                                      "span(timestamp,1M)": "2021-06-01 00:00:00",
                                    },
                                    Object {
                                      "count()": 2549,
                                      "span(timestamp,1M)": "2021-07-01 00:00:00",
                                    },
                                  ],
                                  "metadata": Object {
                                    "fields": Array [
                                      Object {
                                        "name": "count()",
                                        "type": "integer",
                                      },
                                      Object {
                                        "name": "span(timestamp,1M)",
                                        "type": "timestamp",
                                      },
                                    ],
                                  },
                                }
                              }
                            />
                          }
                          fullLabel="Bar"
                          icon={[Function]}
                          id="bar"
                          label="Bar"
                          selection={
                            Object {
                              "dataLoss": "nothing",
                            }
                          }
                          visualizationId="vis-bar-1"
                        />
                      </ToolbarButton>
                    }
                    closePopover={[Function]}
                    display="inlineBlock"
                    hasArrow={true}
                    id="lnsChartSwitchPopover"
                    initialFocus=".lnsChartSwitch__popoverPanel"
                    isOpen={false}
                    ownFocus={true}
                    panelClassName="lnsChartSwitch__popoverPanel"
                    panelPaddingSize="s"
                  >
                    <EuiOutsideClickDetector
                      isDisabled={true}
                      onOutsideClick={[Function]}
                    >
                      <div
                        className="euiPopover euiPopover--anchorDownLeft"
                        id="lnsChartSwitchPopover"
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchStart={[Function]}
                      >
                        <div
                          className="euiPopover__anchor"
                        >
                          <ToolbarButton
                            data-test-subj="lnsChartSwitchPopover"
                            fontWeight="bold"
                            onClick={[Function]}
                          >
                            <EuiButton
                              className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                              color="text"
                              contentProps={
                                Object {
                                  "className": "lnsToolbarButton__content",
                                }
                              }
                              data-test-subj="lnsChartSwitchPopover"
                              iconSide="right"
                              iconType="arrowDown"
                              onClick={[Function]}
                              size="s"
                              textProps={
                                Object {
                                  "className": "lnsToolbarButton__text",
                                }
                              }
                            >
                              <EuiButtonDisplay
                                className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                                color="text"
                                contentProps={
                                  Object {
                                    "className": "lnsToolbarButton__content",
                                  }
                                }
                                data-test-subj="lnsChartSwitchPopover"
                                disabled={false}
                                element="button"
                                iconSide="right"
                                iconType="arrowDown"
                                isDisabled={false}
                                onClick={[Function]}
                                size="s"
                                textProps={
                                  Object {
                                    "className": "lnsToolbarButton__text",
                                  }
                                }
                                type="button"
                              >
                                <button
                                  className="euiButton euiButton--text euiButton--small lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                                  data-test-subj="lnsChartSwitchPopover"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <EuiButtonContent
                                    className="euiButton__content lnsToolbarButton__content"
                                    iconSide="right"
                                    iconType="arrowDown"
                                    textProps={
                                      Object {
                                        "className": "euiButton__text lnsToolbarButton__text",
                                      }
                                    }
                                  >
                                    <span
                                      className="euiButtonContent euiButtonContent--iconRight euiButton__content lnsToolbarButton__content"
                                    >
                                      <EuiIcon
                                        className="euiButtonContent__icon"
                                        size="m"
                                        type="arrowDown"
                                      >
                                        <EuiIconArrowDown
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiButtonContent__icon"
                                          focusable="false"
                                          role="img"
                                          style={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--medium euiButtonContent__icon"
                                            focusable="false"
                                            height={16}
                                            role="img"
                                            style={null}
                                            viewBox="0 0 16 16"
                                            width={16}
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                              fillRule="non-zero"
                                            />
                                          </svg>
                                        </EuiIconArrowDown>
                                      </EuiIcon>
                                      <span
                                        className="euiButton__text lnsToolbarButton__text"
                                      >
                                        <VisualizationSummary
                                          chart={
                                            <Bar
                                              barConfig={
                                                Object {
                                                  "displaylogo": false,
                                                  "responsive": true,
                                                }
                                              }
                                              layoutConfig={
                                                Object {
                                                  "height": 500,
                                                  "legend": Object {
                                                    "orientation": "v",
                                                    "traceorder": "normal",
                                                  },
                                                  "margin": Object {
                                                    "b": 30,
                                                    "l": 50,
                                                    "pad": 0,
                                                    "r": 10,
                                                    "t": 30,
                                                  },
                                                  "showlegend": true,
                                                }
                                              }
                                              visualizations={
                                                Object {
                                                  "data": Object {
                                                    "count()": Array [
                                                      2549,
                                                      9337,
                                                      1173,
                                                    ],
                                                    "span(timestamp,1M)": Array [
                                                      "2021-05-01 00:00:00",
                                                      "2021-06-01 00:00:00",
                                                      "2021-07-01 00:00:00",
                                                    ],
                                                  },
                                                  "jsonData": Array [
                                                    Object {
                                                      "count()": 2549,
                                                      "span(timestamp,1M)": "2021-05-01 00:00:00",
                                                    },
                                                    Object {
                                                      "count()": 9337,
                                                      "span(timestamp,1M)": "2021-06-01 00:00:00",
                                                    },
                                                    Object {
                                                      "count()": 2549,
                                                      "span(timestamp,1M)": "2021-07-01 00:00:00",
                                                    },
                                                  ],
                                                  "metadata": Object {
                                                    "fields": Array [
                                                      Object {
                                                        "name": "count()",
                                                        "type": "integer",
                                                      },
                                                      Object {
                                                        "name": "span(timestamp,1M)",
                                                        "type": "timestamp",
                                                      },
                                                    ],
                                                  },
                                                }
                                              }
                                            />
                                          }
                                          fullLabel="Bar"
                                          icon={[Function]}
                                          id="bar"
                                          label="Bar"
                                          selection={
                                            Object {
                                              "dataLoss": "nothing",
                                            }
                                          }
                                          visualizationId="vis-bar-1"
                                        >
                                          <EuiIcon
                                            className="lnsChartSwitch__summaryIcon"
                                            size="l"
                                            type={[Function]}
                                          >
                                            <LensIconChartBar
                                              aria-hidden={true}
                                              className="euiIcon euiIcon--large lnsChartSwitch__summaryIcon"
                                              focusable="false"
                                              role="img"
                                              style={null}
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--large lnsChartSwitch__summaryIcon"
                                                fill="none"
                                                focusable="false"
                                                height={22}
                                                role="img"
                                                style={null}
                                                viewBox="0 0 30 22"
                                                width={30}
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  className="lensChartIcon__subdued"
                                                  d="M5 7a1 1 0 011 1v13a1 1 0 01-1 1H1a1 1 0 01-1-1V8a1 1 0 011-1h4zm16-7a1 1 0 011 1v20a1 1 0 01-1 1h-4a1 1 0 01-1-1V1a1 1 0 011-1h4z"
                                                />
                                                <path
                                                  className="lensChartIcon__accent"
                                                  d="M13 11a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1v-9a1 1 0 011-1h4zm16-7a1 1 0 011 1v16a1 1 0 01-1 1h-4a1 1 0 01-1-1V5a1 1 0 011-1h4z"
                                                />
                                              </svg>
                                            </LensIconChartBar>
                                          </EuiIcon>
                                          Bar
                                        </VisualizationSummary>
                                      </span>
                                    </span>
                                  </EuiButtonContent>
                                </button>
                              </EuiButtonDisplay>
                            </EuiButton>
                          </ToolbarButton>
                        </div>
                      </div>
                    </EuiOutsideClickDetector>
                  </EuiPopover>
                </div>
              </ChartSwitch>
            </div>
          </EuiFlexItem>
        </div>
      </EuiFlexGroup>
    </div>
    <EuiPageContent
      className="lnsWorkspacePanelWrapper"
    >
      <EuiPanel
        className="euiPageContent lnsWorkspacePanelWrapper"
        paddingSize="l"
      >
        <div
          className="euiPanel euiPanel--paddingLarge euiPageContent lnsWorkspacePanelWrapper"
        >
          <EuiPageContentBody
            className="lnsWorkspacePanelWrapper__pageContentBody"
          >
            <div
              className="euiPageContentBody lnsWorkspacePanelWrapper__pageContentBody"
            >
              <DragDrop
                className="lnsWorkspacePanel__dragDrop"
                data-test-subj="lnsWorkspace"
                draggable={false}
                droppable={false}
                onDrop={[Function]}
              >
                <Memo(DragDropInner)
                  className="lnsWorkspacePanel__dragDrop"
                  data-test-subj="lnsWorkspace"
                  draggable={false}
                  droppable={false}
                  isDragging={false}
                  isNotDroppable={false}
                  onDrop={[Function]}
                  setDragging={[Function]}
                >
                  <div
                    className="lnsDragDrop lnsDragDrop-isDroppable lnsWorkspacePanel__dragDrop"
                    data-test-subj="lnsWorkspace"
                    draggable={false}
                    onDragEnd={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDragStart={[Function]}
                    onDrop={[Function]}
                  >
                    <Bar
                      barConfig={
                        Object {
                          "displaylogo": false,
                          "responsive": true,
                        }
                      }
                      layoutConfig={
                        Object {
                          "height": 500,
                          "legend": Object {
                            "orientation": "v",
                            "traceorder": "normal",
                          },
                          "margin": Object {
                            "b": 30,
                            "l": 50,
                            "pad": 0,
                            "r": 10,
                            "t": 30,
                          },
                          "showlegend": true,
                        }
                      }
                      visualizations={
                        Object {
                          "data": Object {
                            "count()": Array [
                              2549,
                              9337,
                              1173,
                            ],
                            "span(timestamp,1M)": Array [
                              "2021-05-01 00:00:00",
                              "2021-06-01 00:00:00",
                              "2021-07-01 00:00:00",
                            ],
                          },
                          "jsonData": Array [
                            Object {
                              "count()": 2549,
                              "span(timestamp,1M)": "2021-05-01 00:00:00",
                            },
                            Object {
                              "count()": 9337,
                              "span(timestamp,1M)": "2021-06-01 00:00:00",
                            },
                            Object {
                              "count()": 2549,
                              "span(timestamp,1M)": "2021-07-01 00:00:00",
                            },
                          ],
                          "metadata": Object {
                            "fields": Array [
                              Object {
                                "name": "count()",
                                "type": "integer",
                              },
                              Object {
                                "name": "span(timestamp,1M)",
                                "type": "timestamp",
                              },
                            ],
                          },
                        }
                      }
                    >
                      <Plt
                        config={
                          Object {
                            "displaylogo": false,
                            "responsive": true,
                          }
                        }
                        data={
                          Array [
                            Object {
                              "displaylogo": false,
                              "marker": Object {
                                "color": Array [
                                  "#3CA1C7",
                                  "#8C55A3",
                                  "#DB748A",
                                ],
                              },
                              "name": "count()",
                              "responsive": true,
                              "type": "bar",
                              "x": Array [
                                "2021-05-01 00:00:00",
                                "2021-06-01 00:00:00",
                                "2021-07-01 00:00:00",
                              ],
                              "y": Array [
                                2549,
                                9337,
                                1173,
                              ],
                            },
                          ]
                        }
                        layout={
                          Object {
                            "colorway": Array [
                              "#3CA1C7",
                              "#8C55A3",
                              "#DB748A",
                              "#F2BE4B",
                              "#68CCC2",
                              "#2A7866",
                              "#843769",
                              "#374FB8",
                              "#BD6F26",
                              "#4C636F",
                            ],
                            "height": 500,
                            "legend": Object {
                              "orientation": "v",
                              "traceorder": "normal",
                            },
                            "margin": Object {
                              "b": 30,
                              "l": 50,
                              "pad": 0,
                              "r": 10,
                              "t": 30,
                            },
                            "showlegend": true,
                            "xaxis": Object {
                              "automargin": true,
                              "autorange": true,
                              "range": Array [
                                "2021-04-16",
                                "2021-07-16",
                              ],
                              "type": "date",
                            },
                            "yaxis": Object {
                              "automargin": true,
                              "autorange": true,
                              "range": Array [
                                0,
                                9828.421052631578,
                              ],
                              "type": "linear",
                            },
                          }
                        }
                      >
                        <PlotlyComponent
                          config={
                            Object {
                              "displayModeBar": false,
                              "displaylogo": false,
                              "responsive": true,
                            }
                          }
                          data={
                            Array [
                              Object {
                                "displaylogo": false,
                                "marker": Object {
                                  "color": Array [
                                    "#3CA1C7",
                                    "#8C55A3",
                                    "#DB748A",
                                  ],
                                },
                                "name": "count()",
                                "responsive": true,
                                "type": "bar",
                                "x": Array [
                                  "2021-05-01 00:00:00",
                                  "2021-06-01 00:00:00",
                                  "2021-07-01 00:00:00",
                                ],
                                "y": Array [
                                  2549,
                                  9337,
                                  1173,
                                ],
                              },
                            ]
                          }
                          debug={false}
                          layout={
                            Object {
                              "autosize": true,
                              "barmode": "stack",
                              "colorway": Array [
                                "#3CA1C7",
                                "#8C55A3",
                                "#DB748A",
                                "#F2BE4B",
                                "#68CCC2",
                                "#2A7866",
                                "#843769",
                                "#374FB8",
                                "#BD6F26",
                                "#4C636F",
                              ],
                              "height": 500,
                              "hovermode": "closest",
                              "legend": Object {
                                "orientation": "v",
                                "traceorder": "normal",
                              },
                              "margin": Object {
                                "b": 30,
                                "l": 50,
                                "pad": 0,
                                "r": 10,
                                "t": 30,
                              },
                              "showlegend": true,
                              "xaxis": Object {
                                "automargin": true,
                                "autorange": true,
                                "range": Array [
                                  "2021-04-16",
                                  "2021-07-16",
                                ],
                                "type": "date",
                              },
                              "yaxis": Object {
                                "automargin": true,
                                "autorange": true,
                                "range": Array [
                                  0,
                                  9828.421052631578,
                                ],
                                "type": "linear",
                              },
                            }
                          }
                          style={
                            Object {
                              "height": "100%",
                              "width": "100%",
                            }
                          }
                          useResizeHandler={true}
                        >
                          <div
                            style={
                              Object {
                                "height": "100%",
                                "width": "100%",
                              }
                            }
                          />
                        </PlotlyComponent>
                      </Plt>
                    </Bar>
                  </div>
                </Memo(DragDropInner)>
              </DragDrop>
            </div>
          </EuiPageContentBody>
        </div>
      </EuiPanel>
    </EuiPageContent>
  </WorkspacePanelWrapper>
</WorkspacePanel>
`;

exports[`Visualization workspace panel wrapper Renders workspace panel wrapper 1`] = `
<WorkspacePanelWrapper
  curVisId="bar"
  emptyExpression={true}
  title=""
  vis={
    Object {
      "chart": [Function],
      "fullLabel": "H. Bar",
      "icon": [Function],
      "id": "horizontal_bar",
      "label": "H. Bar",
      "selection": Object {
        "dataLoss": "nothing",
      },
      "visualizationId": "vis-bar-6637",
    }
  }
  visualizationTypes={
    Array [
      Object {
        "chart": [Function],
        "fullLabel": "Bar",
        "icon": [Function],
        "id": "bar",
        "label": "bar",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6636",
      },
      Object {
        "chart": [Function],
        "fullLabel": "H. Bar",
        "icon": [Function],
        "id": "horizontal_bar",
        "label": "H. Bar",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6637",
      },
      Object {
        "chart": [Function],
        "fullLabel": "Line",
        "icon": [Function],
        "id": "line",
        "label": "line",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "visualizationId": "vis-bar-6638",
      },
    ]
  }
>
  <div>
    <EuiFlexGroup
      className="lnsWorkspacePanelWrapper__toolbar"
      direction="row"
      gutterSize="m"
      justifyContent="spaceBetween"
      responsive={false}
      wrap={true}
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--wrap lnsWorkspacePanelWrapper__toolbar"
      >
        <EuiFlexItem
          grow={false}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrowZero"
          >
            <ChartSwitch
              data-test-subj="lnsChartSwitcher"
              vis={
                Object {
                  "chart": [Function],
                  "fullLabel": "H. Bar",
                  "icon": [Function],
                  "id": "horizontal_bar",
                  "label": "H. Bar",
                  "selection": Object {
                    "dataLoss": "nothing",
                  },
                  "visualizationId": "vis-bar-6637",
                }
              }
              visualizationTypes={
                Array [
                  Object {
                    "chart": [Function],
                    "fullLabel": "Bar",
                    "icon": [Function],
                    "id": "bar",
                    "label": "bar",
                    "selection": Object {
                      "dataLoss": "nothing",
                    },
                    "visualizationId": "vis-bar-6636",
                  },
                  Object {
                    "chart": [Function],
                    "fullLabel": "H. Bar",
                    "icon": [Function],
                    "id": "horizontal_bar",
                    "label": "H. Bar",
                    "selection": Object {
                      "dataLoss": "nothing",
                    },
                    "visualizationId": "vis-bar-6637",
                  },
                  Object {
                    "chart": [Function],
                    "fullLabel": "Line",
                    "icon": [Function],
                    "id": "line",
                    "label": "line",
                    "selection": Object {
                      "dataLoss": "nothing",
                    },
                    "visualizationId": "vis-bar-6638",
                  },
                ]
              }
            >
              <div
                className="lnsChartSwitch__header"
              >
                <EuiPopover
                  anchorPosition="downLeft"
                  button={
                    <ToolbarButton
                      data-test-subj="lnsChartSwitchPopover"
                      fontWeight="bold"
                      onClick={[Function]}
                    >
                      <VisualizationSummary
                        chart={[Function]}
                        fullLabel="H. Bar"
                        icon={[Function]}
                        id="horizontal_bar"
                        label="H. Bar"
                        selection={
                          Object {
                            "dataLoss": "nothing",
                          }
                        }
                        visualizationId="vis-bar-6637"
                      />
                    </ToolbarButton>
                  }
                  closePopover={[Function]}
                  display="inlineBlock"
                  hasArrow={true}
                  id="lnsChartSwitchPopover"
                  initialFocus=".lnsChartSwitch__popoverPanel"
                  isOpen={false}
                  ownFocus={true}
                  panelClassName="lnsChartSwitch__popoverPanel"
                  panelPaddingSize="s"
                >
                  <EuiOutsideClickDetector
                    isDisabled={true}
                    onOutsideClick={[Function]}
                  >
                    <div
                      className="euiPopover euiPopover--anchorDownLeft"
                      id="lnsChartSwitchPopover"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                    >
                      <div
                        className="euiPopover__anchor"
                      >
                        <ToolbarButton
                          data-test-subj="lnsChartSwitchPopover"
                          fontWeight="bold"
                          onClick={[Function]}
                        >
                          <EuiButton
                            className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                            color="text"
                            contentProps={
                              Object {
                                "className": "lnsToolbarButton__content",
                              }
                            }
                            data-test-subj="lnsChartSwitchPopover"
                            iconSide="right"
                            iconType="arrowDown"
                            onClick={[Function]}
                            size="s"
                            textProps={
                              Object {
                                "className": "lnsToolbarButton__text",
                              }
                            }
                          >
                            <EuiButtonDisplay
                              className="lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                              color="text"
                              contentProps={
                                Object {
                                  "className": "lnsToolbarButton__content",
                                }
                              }
                              data-test-subj="lnsChartSwitchPopover"
                              disabled={false}
                              element="button"
                              iconSide="right"
                              iconType="arrowDown"
                              isDisabled={false}
                              onClick={[Function]}
                              size="s"
                              textProps={
                                Object {
                                  "className": "lnsToolbarButton__text",
                                }
                              }
                              type="button"
                            >
                              <button
                                className="euiButton euiButton--text euiButton--small lnsToolbarButton lnsToolbarButton--bold lnsToolbarButton--s"
                                data-test-subj="lnsChartSwitchPopover"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiButtonContent
                                  className="euiButton__content lnsToolbarButton__content"
                                  iconSide="right"
                                  iconType="arrowDown"
                                  textProps={
                                    Object {
                                      "className": "euiButton__text lnsToolbarButton__text",
                                    }
                                  }
                                >
                                  <span
                                    className="euiButtonContent euiButtonContent--iconRight euiButton__content lnsToolbarButton__content"
                                  >
                                    <EuiIcon
                                      className="euiButtonContent__icon"
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <EuiIconArrowDown
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiButtonContent__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiButtonContent__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                            fillRule="non-zero"
                                          />
                                        </svg>
                                      </EuiIconArrowDown>
                                    </EuiIcon>
                                    <span
                                      className="euiButton__text lnsToolbarButton__text"
                                    >
                                      <VisualizationSummary
                                        chart={[Function]}
                                        fullLabel="H. Bar"
                                        icon={[Function]}
                                        id="horizontal_bar"
                                        label="H. Bar"
                                        selection={
                                          Object {
                                            "dataLoss": "nothing",
                                          }
                                        }
                                        visualizationId="vis-bar-6637"
                                      >
                                        <EuiIcon
                                          className="lnsChartSwitch__summaryIcon"
                                          size="l"
                                          type={[Function]}
                                        >
                                          <Component
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--large lnsChartSwitch__summaryIcon"
                                            focusable="false"
                                            role="img"
                                            style={null}
                                          >
                                            <LensIconChartBarHorizontal>
                                              <svg
                                                fill="none"
                                                height={22}
                                                viewBox="0 0 30 22"
                                                width={30}
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  className="lensChartIcon__subdued"
                                                  d="M29 16a1 1 0 011 1v4a1 1 0 01-1 1H1a1 1 0 01-1-1v-4a1 1 0 011-1h28zM22 0a1 1 0 011 1v4a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h21z"
                                                />
                                                <path
                                                  className="lensChartIcon__accent"
                                                  d="M0 9a1 1 0 011-1h15a1 1 0 011 1v4a1 1 0 01-1 1H1a1 1 0 01-1-1V9z"
                                                />
                                              </svg>
                                            </LensIconChartBarHorizontal>
                                          </Component>
                                        </EuiIcon>
                                        H. Bar
                                      </VisualizationSummary>
                                    </span>
                                  </span>
                                </EuiButtonContent>
                              </button>
                            </EuiButtonDisplay>
                          </EuiButton>
                        </ToolbarButton>
                      </div>
                    </div>
                  </EuiOutsideClickDetector>
                </EuiPopover>
              </div>
            </ChartSwitch>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </div>
  <EuiPageContent
    className="lnsWorkspacePanelWrapper"
  >
    <EuiPanel
      className="euiPageContent lnsWorkspacePanelWrapper"
      paddingSize="l"
    >
      <div
        className="euiPanel euiPanel--paddingLarge euiPageContent lnsWorkspacePanelWrapper"
      >
        <EuiPageContentBody
          className="lnsWorkspacePanelWrapper__pageContentBody"
        >
          <div
            className="euiPageContentBody lnsWorkspacePanelWrapper__pageContentBody"
          />
        </EuiPageContentBody>
      </div>
    </EuiPanel>
  </EuiPageContent>
</WorkspacePanelWrapper>
`;
