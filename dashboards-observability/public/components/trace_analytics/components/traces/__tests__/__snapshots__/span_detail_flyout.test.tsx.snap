// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SpanDetailFlyout /> spec renders the component with data 1`] = `<div />`;

exports[`<SpanDetailFlyout /> spec renders the empty component 1`] = `
<SpanDetailFlyout
  addSpanFilter={[MockFunction]}
  closeFlyout={[MockFunction]}
  http={[MockFunction]}
  isFlyoutVisible={true}
  spanId="test"
>
  <EuiFlyout
    data-test-subj="spanDetailFlyout"
    onClose={[MockFunction]}
    size="s"
  >
    <EuiWindowEvent
      event="keydown"
      handler={[Function]}
    />
    <EuiOverlayMask
      headerZindexLocation="below"
      onClick={[MockFunction]}
    >
      <Portal
        containerInfo={
          <div
            class="euiOverlayMask euiOverlayMask--belowHeader"
          >
            <div
              aria-hidden="true"
              data-aria-hidden="true"
              data-focus-guard="true"
              style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
              tabindex="0"
            />
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="euiFlyout euiFlyout--small euiFlyout--paddingLarge"
                data-test-subj="spanDetailFlyout"
                role="dialog"
                tabindex="-1"
              >
                <button
                  aria-label="Close this dialog"
                  class="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                  data-test-subj="euiFlyoutCloseButton"
                  type="button"
                >
                  <svg
                    aria-hidden="true"
                    class="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                    focusable="false"
                    height="16"
                    role="img"
                    viewBox="0 0 16 16"
                    width="16"
                    xmlns="http://www.w3.org/2000/svg"
                  />
                </button>
                <div
                  class="euiFlyoutHeader euiFlyoutHeader--hasBorder"
                >
                  <h2
                    class="euiTitle euiTitle--medium"
                  >
                    Span detail
                  </h2>
                </div>
                <div
                  class="euiFlyoutBody"
                >
                  <div
                    class="euiFlyoutBody__overflow"
                    tabindex="0"
                  >
                    <div
                      class="euiFlyoutBody__overflowContent"
                    >
                      -
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              aria-hidden="true"
              data-aria-hidden="true"
              data-focus-guard="true"
              style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
              tabindex="0"
            />
          </div>
        }
      >
        <EuiFocusTrap
          clickOutsideDisables={false}
          disabled={false}
          noIsolation={true}
          returnFocus={true}
          scrollLock={false}
        >
          <ForwardRef
            enabled={true}
            noIsolation={true}
            onClickOutside={[Function]}
            returnFocus={true}
            scrollLock={false}
          >
            <ForwardRef
              enabled={true}
              noIsolation={true}
              onClickOutside={[Function]}
              returnFocus={true}
              scrollLock={false}
              sideCar={[Function]}
            >
              <ForwardRef(FocusLockUI)
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "classNames": Object {
                      "fullWidth": "width-before-scroll-bar",
                      "zeroRight": "right-scroll-bar-position",
                    },
                    "defaultProps": Object {
                      "enabled": true,
                      "inert": false,
                      "removeScrollBar": true,
                    },
                    "render": [Function],
                  }
                }
                autoFocus={true}
                crossFrame={true}
                disabled={false}
                lockProps={
                  Object {
                    "allowPinchZoom": undefined,
                    "as": undefined,
                    "enabled": false,
                    "inert": undefined,
                    "onMouseDown": [Function],
                    "onTouchStart": [Function],
                    "shards": undefined,
                    "sideCar": [Function],
                    "style": undefined,
                  }
                }
                noFocusGuards={false}
                onActivation={[Function]}
                onDeactivation={[Function]}
                persistentFocus={false}
                returnFocus={true}
                sideCar={[Function]}
              >
                <div
                  data-focus-guard={true}
                  key="guard-first"
                  style={
                    Object {
                      "height": "0px",
                      "left": "1px",
                      "overflow": "hidden",
                      "padding": 0,
                      "position": "fixed",
                      "top": "1px",
                      "width": "1px",
                    }
                  }
                  tabIndex={0}
                />
                <RequireSideCar
                  autoFocus={true}
                  crossFrame={true}
                  disabled={false}
                  id={Object {}}
                  observed={
                    <div
                      data-focus-lock-disabled="false"
                    >
                      <div
                        class="euiFlyout euiFlyout--small euiFlyout--paddingLarge"
                        data-test-subj="spanDetailFlyout"
                        role="dialog"
                        tabindex="-1"
                      >
                        <button
                          aria-label="Close this dialog"
                          class="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                          data-test-subj="euiFlyoutCloseButton"
                          type="button"
                        >
                          <svg
                            aria-hidden="true"
                            class="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                            focusable="false"
                            height="16"
                            role="img"
                            viewBox="0 0 16 16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          />
                        </button>
                        <div
                          class="euiFlyoutHeader euiFlyoutHeader--hasBorder"
                        >
                          <h2
                            class="euiTitle euiTitle--medium"
                          >
                            Span detail
                          </h2>
                        </div>
                        <div
                          class="euiFlyoutBody"
                        >
                          <div
                            class="euiFlyoutBody__overflow"
                            tabindex="0"
                          >
                            <div
                              class="euiFlyoutBody__overflowContent"
                            >
                              -
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  }
                  onActivation={[Function]}
                  onDeactivation={[Function]}
                  persistentFocus={false}
                  returnFocus={[Function]}
                  shards={Array []}
                  sideCar={
                    Object {
                      "assignMedium": [Function],
                      "assignSyncMedium": [Function],
                      "options": Object {
                        "async": true,
                        "ssr": false,
                      },
                      "read": [Function],
                      "useMedium": [Function],
                    }
                  }
                >
                  <SideCar
                    autoFocus={true}
                    crossFrame={true}
                    disabled={false}
                    id={Object {}}
                    observed={
                      <div
                        data-focus-lock-disabled="false"
                      >
                        <div
                          class="euiFlyout euiFlyout--small euiFlyout--paddingLarge"
                          data-test-subj="spanDetailFlyout"
                          role="dialog"
                          tabindex="-1"
                        >
                          <button
                            aria-label="Close this dialog"
                            class="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                            data-test-subj="euiFlyoutCloseButton"
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              class="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                              focusable="false"
                              height="16"
                              role="img"
                              viewBox="0 0 16 16"
                              width="16"
                              xmlns="http://www.w3.org/2000/svg"
                            />
                          </button>
                          <div
                            class="euiFlyoutHeader euiFlyoutHeader--hasBorder"
                          >
                            <h2
                              class="euiTitle euiTitle--medium"
                            >
                              Span detail
                            </h2>
                          </div>
                          <div
                            class="euiFlyoutBody"
                          >
                            <div
                              class="euiFlyoutBody__overflow"
                              tabindex="0"
                            >
                              <div
                                class="euiFlyoutBody__overflowContent"
                              >
                                -
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                    onActivation={[Function]}
                    onDeactivation={[Function]}
                    persistentFocus={false}
                    returnFocus={[Function]}
                    shards={Array []}
                    sideCar={
                      Object {
                        "assignMedium": [Function],
                        "assignSyncMedium": [Function],
                        "options": Object {
                          "async": true,
                          "ssr": false,
                        },
                        "read": [Function],
                        "useMedium": [Function],
                      }
                    }
                  >
                    <SideEffect(FocusWatcher)
                      autoFocus={true}
                      crossFrame={true}
                      disabled={false}
                      id={Object {}}
                      observed={
                        <div
                          data-focus-lock-disabled="false"
                        >
                          <div
                            class="euiFlyout euiFlyout--small euiFlyout--paddingLarge"
                            data-test-subj="spanDetailFlyout"
                            role="dialog"
                            tabindex="-1"
                          >
                            <button
                              aria-label="Close this dialog"
                              class="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                              data-test-subj="euiFlyoutCloseButton"
                              type="button"
                            >
                              <svg
                                aria-hidden="true"
                                class="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                focusable="false"
                                height="16"
                                role="img"
                                viewBox="0 0 16 16"
                                width="16"
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </button>
                            <div
                              class="euiFlyoutHeader euiFlyoutHeader--hasBorder"
                            >
                              <h2
                                class="euiTitle euiTitle--medium"
                              >
                                Span detail
                              </h2>
                            </div>
                            <div
                              class="euiFlyoutBody"
                            >
                              <div
                                class="euiFlyoutBody__overflow"
                                tabindex="0"
                              >
                                <div
                                  class="euiFlyoutBody__overflowContent"
                                >
                                  -
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      }
                      onActivation={[Function]}
                      onDeactivation={[Function]}
                      persistentFocus={false}
                      returnFocus={[Function]}
                      shards={Array []}
                    >
                      <FocusWatcher
                        autoFocus={true}
                        crossFrame={true}
                        disabled={false}
                        id={Object {}}
                        observed={
                          <div
                            data-focus-lock-disabled="false"
                          >
                            <div
                              class="euiFlyout euiFlyout--small euiFlyout--paddingLarge"
                              data-test-subj="spanDetailFlyout"
                              role="dialog"
                              tabindex="-1"
                            >
                              <button
                                aria-label="Close this dialog"
                                class="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                                data-test-subj="euiFlyoutCloseButton"
                                type="button"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                  focusable="false"
                                  height="16"
                                  role="img"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                />
                              </button>
                              <div
                                class="euiFlyoutHeader euiFlyoutHeader--hasBorder"
                              >
                                <h2
                                  class="euiTitle euiTitle--medium"
                                >
                                  Span detail
                                </h2>
                              </div>
                              <div
                                class="euiFlyoutBody"
                              >
                                <div
                                  class="euiFlyoutBody__overflow"
                                  tabindex="0"
                                >
                                  <div
                                    class="euiFlyoutBody__overflowContent"
                                  >
                                    -
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        }
                        onActivation={[Function]}
                        onDeactivation={[Function]}
                        persistentFocus={false}
                        returnFocus={[Function]}
                        shards={Array []}
                      />
                    </SideEffect(FocusWatcher)>
                  </SideCar>
                </RequireSideCar>
                <ForwardRef
                  data-focus-lock-disabled={false}
                  enabled={false}
                  inert={false}
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseDown={[Function]}
                  onTouchStart={[Function]}
                  removeScrollBar={true}
                  sideCar={[Function]}
                >
                  <div
                    data-focus-lock-disabled={false}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseDown={[Function]}
                    onScrollCapture={[Function]}
                    onTouchMoveCapture={[Function]}
                    onTouchStart={[Function]}
                    onWheelCapture={[Function]}
                  >
                    <EuiOutsideClickDetector
                      isDisabled={true}
                      onOutsideClick={[Function]}
                    >
                      <div
                        className="euiFlyout euiFlyout--small euiFlyout--paddingLarge"
                        data-test-subj="spanDetailFlyout"
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchStart={[Function]}
                        role="dialog"
                        tabIndex={-1}
                      >
                        <EuiI18n
                          default="Close this dialog"
                          token="euiFlyout.closeAriaLabel"
                        >
                          <EuiButtonIcon
                            aria-label="Close this dialog"
                            className="euiFlyout__closeButton euiFlyout__closeButton--inside"
                            color="text"
                            data-test-subj="euiFlyoutCloseButton"
                            display="empty"
                            iconType="cross"
                            onClick={[Function]}
                          >
                            <button
                              aria-label="Close this dialog"
                              className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                              data-test-subj="euiFlyoutCloseButton"
                              disabled={false}
                              onClick={[Function]}
                              type="button"
                            >
                              <EuiIcon
                                aria-hidden="true"
                                className="euiButtonIcon__icon"
                                color="inherit"
                                size="m"
                                type="cross"
                              >
                                <EuiIconEmpty
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                  focusable="false"
                                  role="img"
                                  style={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                    focusable="false"
                                    height={16}
                                    role="img"
                                    style={null}
                                    viewBox="0 0 16 16"
                                    width={16}
                                    xmlns="http://www.w3.org/2000/svg"
                                  />
                                </EuiIconEmpty>
                              </EuiIcon>
                            </button>
                          </EuiButtonIcon>
                        </EuiI18n>
                        <EuiFlyoutHeader
                          hasBorder={true}
                        >
                          <div
                            className="euiFlyoutHeader euiFlyoutHeader--hasBorder"
                          >
                            <EuiTitle>
                              <h2
                                className="euiTitle euiTitle--medium"
                              >
                                Span detail
                              </h2>
                            </EuiTitle>
                          </div>
                        </EuiFlyoutHeader>
                        <EuiFlyoutBody>
                          <div
                            className="euiFlyoutBody"
                          >
                            <div
                              className="euiFlyoutBody__overflow"
                              tabIndex={0}
                            >
                              <div
                                className="euiFlyoutBody__overflowContent"
                              >
                                -
                              </div>
                            </div>
                          </div>
                        </EuiFlyoutBody>
                      </div>
                    </EuiOutsideClickDetector>
                  </div>
                </ForwardRef>
                <div
                  data-focus-guard={true}
                  style={
                    Object {
                      "height": "0px",
                      "left": "1px",
                      "overflow": "hidden",
                      "padding": 0,
                      "position": "fixed",
                      "top": "1px",
                      "width": "1px",
                    }
                  }
                  tabIndex={0}
                />
              </ForwardRef(FocusLockUI)>
              <RequireSideCar
                noIsolation={true}
                onClickOutside={[Function]}
                setLockProps={[Function]}
                sideCar={
                  Object {
                    "assignMedium": [Function],
                    "assignSyncMedium": [Function],
                    "options": Object {
                      "async": true,
                      "ssr": false,
                    },
                    "read": [Function],
                    "useMedium": [Function],
                  }
                }
              >
                <SideCar
                  noIsolation={true}
                  onClickOutside={[Function]}
                  setLockProps={[Function]}
                  sideCar={
                    Object {
                      "assignMedium": [Function],
                      "assignSyncMedium": [Function],
                      "options": Object {
                        "async": true,
                        "ssr": false,
                      },
                      "read": [Function],
                      "useMedium": [Function],
                    }
                  }
                >
                  <Effect
                    noIsolation={true}
                    onClickOutside={[Function]}
                    setLockProps={[Function]}
                  >
                    <Component>
                      <Sheet
                        styles="
 [data-focus-on-hidden] {
   pointer-events: none !important;
 }
"
                      />
                    </Component>
                  </Effect>
                </SideCar>
              </RequireSideCar>
            </ForwardRef>
          </ForwardRef>
        </EuiFocusTrap>
      </Portal>
    </EuiOverlayMask>
  </EuiFlyout>
</SpanDetailFlyout>
`;
