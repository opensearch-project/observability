// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SpanDetailTable /> spec renders the component with data 1`] = `
<div>
  <div
    data-focus-guard="true"
    style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
    tabindex="-1"
  />
  <div
    class="euiDataGrid__focusWrap"
    data-focus-lock-disabled="disabled"
  >
    <div
      class="euiDataGrid euiDataGrid--bordersAll euiDataGrid--headerShade euiDataGrid--footerOverline euiDataGrid--rowHoverHighlight euiDataGrid--stickyFooter"
    />
  </div>
  <div
    data-focus-guard="true"
    style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
    tabindex="-1"
  />
</div>
`;

exports[`<SpanDetailTable /> spec renders the empty component 1`] = `
<SpanDetailTable
  DSL={Object {}}
  hiddenColumns={
    Array [
      "traceId",
      "traceGroup",
    ]
  }
  http={[MockFunction]}
  openFlyout={[Function]}
>
  <EuiDataGrid
    aria-labelledby="span-detail-data-grid"
    columnVisibility={
      Object {
        "setVisibleColumns": [Function],
        "visibleColumns": Array [
          "spanId",
          "parentSpanId",
          "serviceName",
          "name",
          "durationInNanos",
          "startTime",
          "endTime",
          "status.code",
        ],
      }
    }
    columns={
      Array [
        Object {
          "display": "Span ID",
          "id": "spanId",
        },
        Object {
          "display": "Parent span ID",
          "id": "parentSpanId",
        },
        Object {
          "display": "Trace ID",
          "id": "traceId",
        },
        Object {
          "display": "Trace group",
          "id": "traceGroup",
        },
        Object {
          "display": "Service",
          "id": "serviceName",
        },
        Object {
          "display": "Operation",
          "id": "name",
        },
        Object {
          "display": "Duration",
          "id": "durationInNanos",
        },
        Object {
          "display": "Start time",
          "id": "startTime",
        },
        Object {
          "display": "End time",
          "id": "endTime",
        },
        Object {
          "display": "Errors",
          "id": "status.code",
        },
      ]
    }
    pagination={
      Object {
        "onChangeItemsPerPage": [Function],
        "onChangePage": [Function],
        "pageIndex": 0,
        "pageSize": 10,
        "pageSizeOptions": Array [
          10,
          50,
          100,
        ],
      }
    }
    renderCellValue={[Function]}
    rowCount={0}
    sorting={
      Object {
        "columns": Array [],
        "onSort": [Function],
      }
    }
  >
    <EuiFocusTrap
      className="euiDataGrid__focusWrap"
      clickOutsideDisables={false}
      disabled={true}
      noIsolation={true}
      returnFocus={true}
      scrollLock={false}
    >
      <ForwardRef
        className="euiDataGrid__focusWrap"
        enabled={false}
        noIsolation={true}
        onClickOutside={[Function]}
        returnFocus={true}
        scrollLock={false}
      >
        <ForwardRef
          className="euiDataGrid__focusWrap"
          enabled={false}
          noIsolation={true}
          onClickOutside={[Function]}
          returnFocus={true}
          scrollLock={false}
          sideCar={[Function]}
        >
          <ForwardRef(FocusLockUI)
            as={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "classNames": Object {
                  "fullWidth": "width-before-scroll-bar",
                  "zeroRight": "right-scroll-bar-position",
                },
                "defaultProps": Object {
                  "enabled": true,
                  "inert": false,
                  "removeScrollBar": true,
                },
                "render": [Function],
              }
            }
            autoFocus={true}
            className="euiDataGrid__focusWrap"
            crossFrame={true}
            disabled={true}
            lockProps={
              Object {
                "allowPinchZoom": undefined,
                "as": undefined,
                "enabled": false,
                "inert": undefined,
                "shards": undefined,
                "sideCar": [Function],
                "style": undefined,
              }
            }
            noFocusGuards={false}
            persistentFocus={false}
            returnFocus={true}
            sideCar={[Function]}
          >
            <div
              data-focus-guard={true}
              key="guard-first"
              style={
                Object {
                  "height": "0px",
                  "left": "1px",
                  "overflow": "hidden",
                  "padding": 0,
                  "position": "fixed",
                  "top": "1px",
                  "width": "1px",
                }
              }
              tabIndex={-1}
            />
            <ForwardRef
              className="euiDataGrid__focusWrap"
              data-focus-lock-disabled="disabled"
              enabled={false}
              inert={false}
              onBlur={[Function]}
              onFocus={[Function]}
              removeScrollBar={true}
              sideCar={[Function]}
            >
              <div
                className="euiDataGrid__focusWrap"
                data-focus-lock-disabled="disabled"
                onBlur={[Function]}
                onFocus={[Function]}
                onScrollCapture={[Function]}
                onTouchMoveCapture={[Function]}
                onWheelCapture={[Function]}
              >
                <div
                  className="euiDataGrid euiDataGrid--bordersAll euiDataGrid--headerShade euiDataGrid--footerOverline euiDataGrid--rowHoverHighlight euiDataGrid--stickyFooter"
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "height": undefined,
                      "width": undefined,
                    }
                  }
                />
              </div>
            </ForwardRef>
            <div
              data-focus-guard={true}
              style={
                Object {
                  "height": "0px",
                  "left": "1px",
                  "overflow": "hidden",
                  "padding": 0,
                  "position": "fixed",
                  "top": "1px",
                  "width": "1px",
                }
              }
              tabIndex={-1}
            />
          </ForwardRef(FocusLockUI)>
        </ForwardRef>
      </ForwardRef>
    </EuiFocusTrap>
  </EuiDataGrid>
  <NoMatchMessage
    size="xl"
  >
    <EuiSpacer
      size="xl"
    >
      <div
        className="euiSpacer euiSpacer--xl"
      />
    </EuiSpacer>
    <EuiEmptyPrompt
      body={
        <EuiText>
          No data matches the selected filter. Clear the filter and/or increase the time range to see more results.
        </EuiText>
      }
      title={
        <h2>
          No matches
        </h2>
      }
    >
      <div
        className="euiEmptyPrompt"
      >
        <EuiTitle
          size="m"
        >
          <h2
            className="euiTitle euiTitle--medium"
          >
            No matches
          </h2>
        </EuiTitle>
        <EuiTextColor
          color="subdued"
        >
          <span
            className="euiTextColor euiTextColor--subdued"
          >
            <EuiSpacer
              size="m"
            >
              <div
                className="euiSpacer euiSpacer--m"
              />
            </EuiSpacer>
            <EuiText>
              <div
                className="euiText euiText--medium"
              >
                <EuiText>
                  <div
                    className="euiText euiText--medium"
                  >
                    No data matches the selected filter. Clear the filter and/or increase the time range to see more results.
                  </div>
                </EuiText>
              </div>
            </EuiText>
          </span>
        </EuiTextColor>
      </div>
    </EuiEmptyPrompt>
    <EuiSpacer
      size="xl"
    >
      <div
        className="euiSpacer euiSpacer--xl"
      />
    </EuiSpacer>
  </NoMatchMessage>
</SpanDetailTable>
`;
