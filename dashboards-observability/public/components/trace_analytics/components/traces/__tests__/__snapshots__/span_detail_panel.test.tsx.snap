// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Service breakdown panel component renders service breakdown panel 1`] = `
<SpanDetailPanel
  data={
    Object {
      "gantt": Array [
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": "rgba(0, 0, 0, 0)",
          },
          "orientation": "h",
          "showlegend": false,
          "type": "bar",
          "width": 0.4,
          "x": Array [
            0,
          ],
          "y": Array [
            "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
          ],
        },
        Object {
          "hovertemplate": "%{x}<extra></extra>",
          "marker": Object {
            "color": "#7492e7",
          },
          "orientation": "h",
          "text": Array [
            "Error",
          ],
          "textfont": Object {
            "color": Array [
              "#c14125",
            ],
          },
          "textposition": "outside",
          "type": "bar",
          "width": 0.4,
          "x": Array [
            19.91,
          ],
          "y": Array [
            "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
          ],
        },
      ],
      "ganttMaxX": 19.91,
      "table": Array [
        Object {
          "end_time": "2020-11-10T17:55:45.239564396Z",
          "error": "Error",
          "latency": 19.91,
          "service_name": "inventory",
          "span_id": "32c641131b569afa",
          "start_time": "2020-11-10T17:55:45.219652629Z",
          "vs_benchmark": 0,
        },
      ],
    }
  }
  mode="data_prepper"
  setData={[MockFunction]}
>
  <EuiPanel>
    <div
      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
    >
      <EuiFlexGroup>
        <div
          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
        >
          <EuiFlexItem>
            <div
              className="euiFlexItem"
            >
              <PanelTitle
                title="Spans"
                totalItems={1}
              >
                <EuiText
                  size="m"
                >
                  <div
                    className="euiText euiText--medium"
                  >
                    <span
                      className="panel-title"
                    >
                      Spans
                    </span>
                    <span
                      className="panel-title-count"
                    >
                       (1)
                    </span>
                  </div>
                </EuiText>
              </PanelTitle>
            </div>
          </EuiFlexItem>
          <EuiFlexItem
            grow={false}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrowZero"
            >
              <EuiButtonGroup
                idSelected="timeline"
                legend="Select view of spans"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "id": "timeline",
                      "label": "Timeline",
                    },
                    Object {
                      "id": "span_list",
                      "label": "Span list",
                    },
                  ]
                }
              >
                <fieldset
                  className="euiButtonGroup euiButtonGroup--small euiButtonGroup--text"
                  disabled={false}
                >
                  <EuiScreenReaderOnly>
                    <legend
                      className="euiScreenReaderOnly"
                    >
                      Select view of spans
                    </legend>
                  </EuiScreenReaderOnly>
                  <div
                    className="euiButtonGroup__buttons"
                  >
                    <EuiButtonGroupButton
                      color="text"
                      element="label"
                      id="timeline"
                      isDisabled={false}
                      isIconOnly={false}
                      isSelected={true}
                      key="0"
                      label="Timeline"
                      name="random_html_id"
                      onChange={[Function]}
                      size="s"
                    >
                      <EuiButtonDisplay
                        baseClassName="euiButtonGroupButton"
                        className="euiButtonGroupButton-isSelected"
                        color="text"
                        element="label"
                        fill={true}
                        htmlFor="random_html_id"
                        isDisabled={false}
                        onClick={[Function]}
                        size="s"
                        textProps={
                          Object {
                            "className": "euiButtonGroupButton__textShift",
                            "data-text": "Timeline",
                            "ref": [Function],
                            "title": "Timeline",
                          }
                        }
                      >
                        <label
                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton--fill euiButtonGroupButton-isSelected"
                          disabled={false}
                          htmlFor="random_html_id"
                          onClick={[Function]}
                          style={
                            Object {
                              "minWidth": undefined,
                            }
                          }
                        >
                          <EuiButtonContent
                            className="euiButton__content"
                            iconSide="left"
                            textProps={
                              Object {
                                "className": "euiButton__text euiButtonGroupButton__textShift",
                                "data-text": "Timeline",
                                "ref": [Function],
                                "title": "Timeline",
                              }
                            }
                          >
                            <span
                              className="euiButtonContent euiButton__content"
                            >
                              <span
                                className="euiButton__text euiButtonGroupButton__textShift"
                                data-text="Timeline"
                                title="Timeline"
                              >
                                <input
                                  checked={true}
                                  className="euiScreenReaderOnly"
                                  data-test-subj="timeline"
                                  disabled={false}
                                  id="random_html_id"
                                  name="random_html_id"
                                  onChange={[Function]}
                                  type="radio"
                                />
                                Timeline
                              </span>
                            </span>
                          </EuiButtonContent>
                        </label>
                      </EuiButtonDisplay>
                    </EuiButtonGroupButton>
                    <EuiButtonGroupButton
                      color="text"
                      element="label"
                      id="span_list"
                      isDisabled={false}
                      isIconOnly={false}
                      isSelected={false}
                      key="1"
                      label="Span list"
                      name="random_html_id"
                      onChange={[Function]}
                      size="s"
                    >
                      <EuiButtonDisplay
                        baseClassName="euiButtonGroupButton"
                        className=""
                        color="text"
                        element="label"
                        fill={false}
                        htmlFor="random_html_id"
                        isDisabled={false}
                        onClick={[Function]}
                        size="s"
                        textProps={
                          Object {
                            "className": "euiButtonGroupButton__textShift",
                            "data-text": "Span list",
                            "ref": [Function],
                            "title": "Span list",
                          }
                        }
                      >
                        <label
                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                          disabled={false}
                          htmlFor="random_html_id"
                          onClick={[Function]}
                          style={
                            Object {
                              "minWidth": undefined,
                            }
                          }
                        >
                          <EuiButtonContent
                            className="euiButton__content"
                            iconSide="left"
                            textProps={
                              Object {
                                "className": "euiButton__text euiButtonGroupButton__textShift",
                                "data-text": "Span list",
                                "ref": [Function],
                                "title": "Span list",
                              }
                            }
                          >
                            <span
                              className="euiButtonContent euiButton__content"
                            >
                              <span
                                className="euiButton__text euiButtonGroupButton__textShift"
                                data-text="Span list"
                                title="Span list"
                              >
                                <input
                                  checked={false}
                                  className="euiScreenReaderOnly"
                                  data-test-subj="span_list"
                                  disabled={false}
                                  id="random_html_id"
                                  name="random_html_id"
                                  onChange={[Function]}
                                  type="radio"
                                />
                                Span list
                              </span>
                            </span>
                          </EuiButtonContent>
                        </label>
                      </EuiButtonDisplay>
                    </EuiButtonGroupButton>
                  </div>
                </fieldset>
              </EuiButtonGroup>
            </div>
          </EuiFlexItem>
        </div>
      </EuiFlexGroup>
      <EuiHorizontalRule
        margin="m"
      >
        <hr
          className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
        />
      </EuiHorizontalRule>
      <div
        style={
          Object {
            "maxHeight": 500,
            "overflowY": "auto",
          }
        }
      >
        <Plt
          data={
            Array [
              Object {
                "hoverinfo": "none",
                "marker": Object {
                  "color": "rgba(0, 0, 0, 0)",
                },
                "orientation": "h",
                "showlegend": false,
                "type": "bar",
                "width": 0.4,
                "x": Array [
                  0,
                ],
                "y": Array [
                  "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                ],
              },
              Object {
                "hovertemplate": "%{x}<extra></extra>",
                "marker": Object {
                  "color": "#7492e7",
                },
                "orientation": "h",
                "text": Array [
                  "Error",
                ],
                "textfont": Object {
                  "color": Array [
                    "#c14125",
                  ],
                },
                "textposition": "outside",
                "type": "bar",
                "width": 0.4,
                "x": Array [
                  19.91,
                ],
                "y": Array [
                  "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                ],
              },
            ]
          }
          layout={
            Object {
              "height": 110,
              "margin": Object {
                "b": 30,
                "l": 260,
                "r": 5,
                "t": 30,
              },
              "width": 800,
              "xaxis": Object {
                "color": "#91989c",
                "range": Array [
                  0,
                  23.892,
                ],
                "showline": true,
                "side": "top",
                "ticksuffix": " ms",
              },
              "yaxis": Object {
                "showgrid": false,
                "ticktext": Array [
                  "inventory <br>HTTP GET ",
                ],
                "tickvals": Array [
                  "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                ],
              },
            }
          }
          onClickHandler={[Function]}
          onHoverHandler={[Function]}
          onUnhoverHandler={[Function]}
        >
          <PlotlyComponent
            config={
              Object {
                "displayModeBar": false,
              }
            }
            data={
              Array [
                Object {
                  "hoverinfo": "none",
                  "marker": Object {
                    "color": "rgba(0, 0, 0, 0)",
                  },
                  "orientation": "h",
                  "showlegend": false,
                  "type": "bar",
                  "width": 0.4,
                  "x": Array [
                    0,
                  ],
                  "y": Array [
                    "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                  ],
                },
                Object {
                  "hovertemplate": "%{x}<extra></extra>",
                  "marker": Object {
                    "color": "#7492e7",
                  },
                  "orientation": "h",
                  "text": Array [
                    "Error",
                  ],
                  "textfont": Object {
                    "color": Array [
                      "#c14125",
                    ],
                  },
                  "textposition": "outside",
                  "type": "bar",
                  "width": 0.4,
                  "x": Array [
                    19.91,
                  ],
                  "y": Array [
                    "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                  ],
                },
              ]
            }
            debug={false}
            divId="explorerPlotComponent"
            layout={
              Object {
                "autosize": true,
                "barmode": "stack",
                "height": 110,
                "hovermode": "closest",
                "legend": Object {
                  "orientation": "h",
                  "traceorder": "normal",
                },
                "margin": Object {
                  "b": 30,
                  "l": 260,
                  "r": 5,
                  "t": 30,
                },
                "showlegend": false,
                "width": 800,
                "xaxis": Object {
                  "color": "#91989c",
                  "range": Array [
                    0,
                    23.892,
                  ],
                  "showline": true,
                  "side": "top",
                  "ticksuffix": " ms",
                },
                "yaxis": Object {
                  "showgrid": false,
                  "ticktext": Array [
                    "inventory <br>HTTP GET ",
                  ],
                  "tickvals": Array [
                    "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                  ],
                },
              }
            }
            onClick={[Function]}
            onHover={[Function]}
            onUnhover={[Function]}
            style={
              Object {
                "height": "100%",
                "width": "100%",
              }
            }
            useResizeHandler={true}
          >
            <div
              id="explorerPlotComponent"
              style={
                Object {
                  "height": "100%",
                  "width": "100%",
                }
              }
            />
          </PlotlyComponent>
        </Plt>
      </div>
    </div>
  </EuiPanel>
</SpanDetailPanel>
`;
