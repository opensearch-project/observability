// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search bar components renders date picker 1`] = `
<EuiSuperDatePicker
  commonlyUsedRanges={
    Array [
      Object {
        "end": "now/d",
        "label": "Today",
        "start": "now/d",
      },
      Object {
        "end": "now/w",
        "label": "This week",
        "start": "now/w",
      },
      Object {
        "end": "now/M",
        "label": "This month",
        "start": "now/M",
      },
      Object {
        "end": "now/y",
        "label": "This year",
        "start": "now/y",
      },
      Object {
        "end": "now-1d/d",
        "label": "Yesterday",
        "start": "now-1d/d",
      },
      Object {
        "end": "now",
        "label": "Week to date",
        "start": "now/w",
      },
      Object {
        "end": "now",
        "label": "Month to date",
        "start": "now/M",
      },
      Object {
        "end": "now",
        "label": "Year to date",
        "start": "now/y",
      },
    ]
  }
  dateFormat=""
  end="now"
  isAutoRefreshOnly={false}
  isDisabled={false}
  isPaused={true}
  onTimeChange={[Function]}
  recentlyUsedRanges={Array []}
  refreshInterval={0}
  showUpdateButton={false}
  start="now-5m"
  timeFormat="HH:mm"
>
  <EuiFlexGroup
    className="euiSuperDatePicker__flexWrapper euiSuperDatePicker__flexWrapper--noUpdateButton"
    gutterSize="s"
    responsive={false}
  >
    <div
      className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--directionRow euiSuperDatePicker__flexWrapper euiSuperDatePicker__flexWrapper--noUpdateButton"
    >
      <EuiFlexItem>
        <div
          className="euiFlexItem"
        >
          <EuiFormControlLayout
            className="euiSuperDatePicker"
            isDisabled={false}
            prepend={
              <EuiQuickSelectPopover
                applyTime={[Function]}
                commonlyUsedRanges={
                  Array [
                    Object {
                      "end": "now/d",
                      "label": "Today",
                      "start": "now/d",
                    },
                    Object {
                      "end": "now/w",
                      "label": "This week",
                      "start": "now/w",
                    },
                    Object {
                      "end": "now/M",
                      "label": "This month",
                      "start": "now/M",
                    },
                    Object {
                      "end": "now/y",
                      "label": "This year",
                      "start": "now/y",
                    },
                    Object {
                      "end": "now-1d/d",
                      "label": "Yesterday",
                      "start": "now-1d/d",
                    },
                    Object {
                      "end": "now",
                      "label": "Week to date",
                      "start": "now/w",
                    },
                    Object {
                      "end": "now",
                      "label": "Month to date",
                      "start": "now/M",
                    },
                    Object {
                      "end": "now",
                      "label": "Year to date",
                      "start": "now/y",
                    },
                  ]
                }
                dateFormat=""
                end="now"
                isAutoRefreshOnly={false}
                isDisabled={false}
                isPaused={true}
                recentlyUsedRanges={Array []}
                refreshInterval={0}
                start="now-5m"
              />
            }
          >
            <div
              className="euiFormControlLayout euiFormControlLayout--group euiSuperDatePicker"
            >
              <EuiQuickSelectPopover
                applyTime={[Function]}
                className="euiFormControlLayout__prepend"
                commonlyUsedRanges={
                  Array [
                    Object {
                      "end": "now/d",
                      "label": "Today",
                      "start": "now/d",
                    },
                    Object {
                      "end": "now/w",
                      "label": "This week",
                      "start": "now/w",
                    },
                    Object {
                      "end": "now/M",
                      "label": "This month",
                      "start": "now/M",
                    },
                    Object {
                      "end": "now/y",
                      "label": "This year",
                      "start": "now/y",
                    },
                    Object {
                      "end": "now-1d/d",
                      "label": "Yesterday",
                      "start": "now-1d/d",
                    },
                    Object {
                      "end": "now",
                      "label": "Week to date",
                      "start": "now/w",
                    },
                    Object {
                      "end": "now",
                      "label": "Month to date",
                      "start": "now/M",
                    },
                    Object {
                      "end": "now",
                      "label": "Year to date",
                      "start": "now/y",
                    },
                  ]
                }
                dateFormat=""
                end="now"
                isAutoRefreshOnly={false}
                isDisabled={false}
                isPaused={true}
                key="0/.0"
                recentlyUsedRanges={Array []}
                refreshInterval={0}
                start="now-5m"
              >
                <EuiPopover
                  anchorClassName="euiQuickSelectPopover__anchor"
                  anchorPosition="downLeft"
                  button={
                    <EuiButtonEmpty
                      aria-label="Date quick select"
                      className="euiFormControlLayout__prepend"
                      data-test-subj="superDatePickerToggleQuickMenuButton"
                      iconSide="right"
                      iconType="arrowDown"
                      isDisabled={false}
                      onClick={[Function]}
                      size="xs"
                      textProps={
                        Object {
                          "className": "euiQuickSelectPopover__buttonText",
                        }
                      }
                    >
                      <EuiIcon
                        type="calendar"
                      />
                    </EuiButtonEmpty>
                  }
                  closePopover={[Function]}
                  display="inlineBlock"
                  hasArrow={true}
                  isOpen={false}
                  ownFocus={true}
                  panelPaddingSize="m"
                >
                  <div
                    className="euiPopover euiPopover--anchorDownLeft"
                  >
                    <div
                      className="euiPopover__anchor euiQuickSelectPopover__anchor"
                    >
                      <EuiButtonEmpty
                        aria-label="Date quick select"
                        className="euiFormControlLayout__prepend"
                        data-test-subj="superDatePickerToggleQuickMenuButton"
                        iconSide="right"
                        iconType="arrowDown"
                        isDisabled={false}
                        onClick={[Function]}
                        size="xs"
                        textProps={
                          Object {
                            "className": "euiQuickSelectPopover__buttonText",
                          }
                        }
                      >
                        <button
                          aria-label="Date quick select"
                          className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiFormControlLayout__prepend"
                          data-test-subj="superDatePickerToggleQuickMenuButton"
                          disabled={false}
                          onClick={[Function]}
                          type="button"
                        >
                          <EuiButtonContent
                            className="euiButtonEmpty__content"
                            iconSide="right"
                            iconSize="s"
                            iconType="arrowDown"
                            textProps={
                              Object {
                                "className": "euiButtonEmpty__text euiQuickSelectPopover__buttonText",
                              }
                            }
                          >
                            <span
                              className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                            >
                              <EuiIcon
                                className="euiButtonContent__icon"
                                color="inherit"
                                size="s"
                                type="arrowDown"
                              >
                                <EuiIconEmpty
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                  focusable="false"
                                  role="img"
                                  style={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                    focusable="false"
                                    height={16}
                                    role="img"
                                    style={null}
                                    viewBox="0 0 16 16"
                                    width={16}
                                    xmlns="http://www.w3.org/2000/svg"
                                  />
                                </EuiIconEmpty>
                              </EuiIcon>
                              <span
                                className="euiButtonEmpty__text euiQuickSelectPopover__buttonText"
                              >
                                <EuiIcon
                                  type="calendar"
                                >
                                  <EuiIconEmpty
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon-isLoading"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon-isLoading"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    />
                                  </EuiIconEmpty>
                                </EuiIcon>
                              </span>
                            </span>
                          </EuiButtonContent>
                        </button>
                      </EuiButtonEmpty>
                    </div>
                  </div>
                </EuiPopover>
              </EuiQuickSelectPopover>
              <div
                className="euiFormControlLayout__childrenWrapper"
              >
                <EuiDatePickerRange
                  className="euiDatePickerRange--inGroup"
                  endDateControl={<div />}
                  iconType={false}
                  isCustom={true}
                  startDateControl={<div />}
                >
                  <div
                    className="euiDatePickerRange euiDatePickerRange--inGroup"
                  >
                    <button
                      className="euiSuperDatePicker__prettyFormat"
                      data-test-subj="superDatePickerShowDatesButton"
                      disabled={false}
                      onClick={[Function]}
                    >
                      Last 5 minutes
                      <span
                        className="euiSuperDatePicker__prettyFormatLink"
                      >
                        <EuiI18n
                          default="Show dates"
                          token="euiSuperDatePicker.showDatesButtonLabel"
                        >
                          Show dates
                        </EuiI18n>
                      </span>
                    </button>
                  </div>
                </EuiDatePickerRange>
                <EuiFormControlLayoutIcons />
              </div>
            </div>
          </EuiFormControlLayout>
        </div>
      </EuiFlexItem>
    </div>
  </EuiFlexGroup>
</EuiSuperDatePicker>
`;

exports[`Search bar components renders search bar 1`] = `
<SearchBar
  appConfigs={Array []}
  endTime="now"
  filters={Array []}
  page="dashboard"
  query="test"
  refresh={[MockFunction]}
  setEndTime={[MockFunction]}
  setFilters={[MockFunction]}
  setQuery={[MockFunction]}
  setStartTime={[MockFunction]}
  startTime="now-5m"
>
  <EuiFlexGroup
    gutterSize="s"
  >
    <div
      className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--directionRow euiFlexGroup--responsive"
    >
      <EuiFlexItem>
        <div
          className="euiFlexItem"
        >
          <EuiFieldSearch
            compressed={false}
            data-test-subj="search-bar-input-box"
            fullWidth={true}
            incremental={false}
            isClearable={false}
            isLoading={false}
            onChange={[Function]}
            onSearch={[MockFunction]}
            placeholder="Trace ID, trace group name, service name"
            value="test"
          >
            <EuiFormControlLayout
              compressed={false}
              fullWidth={true}
              icon="search"
              isLoading={false}
            >
              <div
                className="euiFormControlLayout euiFormControlLayout--fullWidth"
              >
                <div
                  className="euiFormControlLayout__childrenWrapper"
                >
                  <EuiValidatableControl>
                    <input
                      className="euiFieldSearch euiFieldSearch--fullWidth"
                      data-test-subj="search-bar-input-box"
                      onChange={[Function]}
                      onKeyUp={[Function]}
                      placeholder="Trace ID, trace group name, service name"
                      type="search"
                      value="test"
                    />
                  </EuiValidatableControl>
                  <EuiFormControlLayoutIcons
                    compressed={false}
                    icon="search"
                    isLoading={false}
                  >
                    <div
                      className="euiFormControlLayoutIcons"
                    >
                      <EuiFormControlLayoutCustomIcon
                        size="m"
                        type="search"
                      >
                        <span
                          className="euiFormControlLayoutCustomIcon"
                        >
                          <EuiIcon
                            aria-hidden="true"
                            className="euiFormControlLayoutCustomIcon__icon"
                            size="m"
                            type="search"
                          >
                            <EuiIconEmpty
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                              focusable="false"
                              role="img"
                              style={null}
                            >
                              <svg
                                aria-hidden={true}
                                className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                focusable="false"
                                height={16}
                                role="img"
                                style={null}
                                viewBox="0 0 16 16"
                                width={16}
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </EuiIconEmpty>
                          </EuiIcon>
                        </span>
                      </EuiFormControlLayoutCustomIcon>
                    </div>
                  </EuiFormControlLayoutIcons>
                </div>
              </div>
            </EuiFormControlLayout>
          </EuiFieldSearch>
        </div>
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        style={
          Object {
            "maxWidth": "40vw",
          }
        }
      >
        <div
          className="euiFlexItem euiFlexItem--flexGrowZero"
          style={
            Object {
              "maxWidth": "40vw",
            }
          }
        >
          <EuiSuperDatePicker
            commonlyUsedRanges={
              Array [
                Object {
                  "end": "now/d",
                  "label": "Today",
                  "start": "now/d",
                },
                Object {
                  "end": "now/w",
                  "label": "This week",
                  "start": "now/w",
                },
                Object {
                  "end": "now/M",
                  "label": "This month",
                  "start": "now/M",
                },
                Object {
                  "end": "now/y",
                  "label": "This year",
                  "start": "now/y",
                },
                Object {
                  "end": "now-1d/d",
                  "label": "Yesterday",
                  "start": "now-1d/d",
                },
                Object {
                  "end": "now",
                  "label": "Week to date",
                  "start": "now/w",
                },
                Object {
                  "end": "now",
                  "label": "Month to date",
                  "start": "now/M",
                },
                Object {
                  "end": "now",
                  "label": "Year to date",
                  "start": "now/y",
                },
              ]
            }
            dateFormat=""
            end="now"
            isAutoRefreshOnly={false}
            isDisabled={false}
            isPaused={true}
            onTimeChange={[Function]}
            recentlyUsedRanges={Array []}
            refreshInterval={0}
            showUpdateButton={false}
            start="now-5m"
            timeFormat="HH:mm"
          >
            <EuiFlexGroup
              className="euiSuperDatePicker__flexWrapper euiSuperDatePicker__flexWrapper--noUpdateButton"
              gutterSize="s"
              responsive={false}
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--directionRow euiSuperDatePicker__flexWrapper euiSuperDatePicker__flexWrapper--noUpdateButton"
              >
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiFormControlLayout
                      className="euiSuperDatePicker"
                      isDisabled={false}
                      prepend={
                        <EuiQuickSelectPopover
                          applyTime={[Function]}
                          commonlyUsedRanges={
                            Array [
                              Object {
                                "end": "now/d",
                                "label": "Today",
                                "start": "now/d",
                              },
                              Object {
                                "end": "now/w",
                                "label": "This week",
                                "start": "now/w",
                              },
                              Object {
                                "end": "now/M",
                                "label": "This month",
                                "start": "now/M",
                              },
                              Object {
                                "end": "now/y",
                                "label": "This year",
                                "start": "now/y",
                              },
                              Object {
                                "end": "now-1d/d",
                                "label": "Yesterday",
                                "start": "now-1d/d",
                              },
                              Object {
                                "end": "now",
                                "label": "Week to date",
                                "start": "now/w",
                              },
                              Object {
                                "end": "now",
                                "label": "Month to date",
                                "start": "now/M",
                              },
                              Object {
                                "end": "now",
                                "label": "Year to date",
                                "start": "now/y",
                              },
                            ]
                          }
                          dateFormat=""
                          end="now"
                          isAutoRefreshOnly={false}
                          isDisabled={false}
                          isPaused={true}
                          recentlyUsedRanges={Array []}
                          refreshInterval={0}
                          start="now-5m"
                        />
                      }
                    >
                      <div
                        className="euiFormControlLayout euiFormControlLayout--group euiSuperDatePicker"
                      >
                        <EuiQuickSelectPopover
                          applyTime={[Function]}
                          className="euiFormControlLayout__prepend"
                          commonlyUsedRanges={
                            Array [
                              Object {
                                "end": "now/d",
                                "label": "Today",
                                "start": "now/d",
                              },
                              Object {
                                "end": "now/w",
                                "label": "This week",
                                "start": "now/w",
                              },
                              Object {
                                "end": "now/M",
                                "label": "This month",
                                "start": "now/M",
                              },
                              Object {
                                "end": "now/y",
                                "label": "This year",
                                "start": "now/y",
                              },
                              Object {
                                "end": "now-1d/d",
                                "label": "Yesterday",
                                "start": "now-1d/d",
                              },
                              Object {
                                "end": "now",
                                "label": "Week to date",
                                "start": "now/w",
                              },
                              Object {
                                "end": "now",
                                "label": "Month to date",
                                "start": "now/M",
                              },
                              Object {
                                "end": "now",
                                "label": "Year to date",
                                "start": "now/y",
                              },
                            ]
                          }
                          dateFormat=""
                          end="now"
                          isAutoRefreshOnly={false}
                          isDisabled={false}
                          isPaused={true}
                          key="0/.0"
                          recentlyUsedRanges={Array []}
                          refreshInterval={0}
                          start="now-5m"
                        >
                          <EuiPopover
                            anchorClassName="euiQuickSelectPopover__anchor"
                            anchorPosition="downLeft"
                            button={
                              <EuiButtonEmpty
                                aria-label="Date quick select"
                                className="euiFormControlLayout__prepend"
                                data-test-subj="superDatePickerToggleQuickMenuButton"
                                iconSide="right"
                                iconType="arrowDown"
                                isDisabled={false}
                                onClick={[Function]}
                                size="xs"
                                textProps={
                                  Object {
                                    "className": "euiQuickSelectPopover__buttonText",
                                  }
                                }
                              >
                                <EuiIcon
                                  type="calendar"
                                />
                              </EuiButtonEmpty>
                            }
                            closePopover={[Function]}
                            display="inlineBlock"
                            hasArrow={true}
                            isOpen={false}
                            ownFocus={true}
                            panelPaddingSize="m"
                          >
                            <div
                              className="euiPopover euiPopover--anchorDownLeft"
                            >
                              <div
                                className="euiPopover__anchor euiQuickSelectPopover__anchor"
                              >
                                <EuiButtonEmpty
                                  aria-label="Date quick select"
                                  className="euiFormControlLayout__prepend"
                                  data-test-subj="superDatePickerToggleQuickMenuButton"
                                  iconSide="right"
                                  iconType="arrowDown"
                                  isDisabled={false}
                                  onClick={[Function]}
                                  size="xs"
                                  textProps={
                                    Object {
                                      "className": "euiQuickSelectPopover__buttonText",
                                    }
                                  }
                                >
                                  <button
                                    aria-label="Date quick select"
                                    className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiFormControlLayout__prepend"
                                    data-test-subj="superDatePickerToggleQuickMenuButton"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <EuiButtonContent
                                      className="euiButtonEmpty__content"
                                      iconSide="right"
                                      iconSize="s"
                                      iconType="arrowDown"
                                      textProps={
                                        Object {
                                          "className": "euiButtonEmpty__text euiQuickSelectPopover__buttonText",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                      >
                                        <EuiIcon
                                          className="euiButtonContent__icon"
                                          color="inherit"
                                          size="s"
                                          type="arrowDown"
                                        >
                                          <EuiIconArrowDown
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--small euiIcon--inherit euiButtonContent__icon"
                                            focusable="false"
                                            role="img"
                                            style={null}
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="euiIcon euiIcon--small euiIcon--inherit euiButtonContent__icon"
                                              focusable="false"
                                              height={16}
                                              role="img"
                                              style={null}
                                              viewBox="0 0 16 16"
                                              width={16}
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                fillRule="non-zero"
                                              />
                                            </svg>
                                          </EuiIconArrowDown>
                                        </EuiIcon>
                                        <span
                                          className="euiButtonEmpty__text euiQuickSelectPopover__buttonText"
                                        >
                                          <EuiIcon
                                            type="calendar"
                                          >
                                            <EuiIconCalendar
                                              aria-hidden={true}
                                              className="euiIcon euiIcon--medium"
                                              focusable="false"
                                              role="img"
                                              style={null}
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium"
                                                focusable="false"
                                                height={16}
                                                role="img"
                                                style={null}
                                                viewBox="0 0 16 16"
                                                width={16}
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M14 4v-.994C14 2.45 13.55 2 12.994 2H11v1h-1V2H6v1H5V2H3.006C2.45 2 2 2.45 2 3.006v9.988C2 13.55 2.45 14 3.006 14h9.988C13.55 14 14 13.55 14 12.994V5H2V4h12zm-3-3h1.994C14.102 1 15 1.897 15 3.006v9.988A2.005 2.005 0 0112.994 15H3.006A2.005 2.005 0 011 12.994V3.006C1 1.898 1.897 1 3.006 1H5V0h1v1h4V0h1v1zM4 7h2v1H4V7zm3 0h2v1H7V7zm3 0h2v1h-2V7zM4 9h2v1H4V9zm3 0h2v1H7V9zm3 0h2v1h-2V9zm-6 2h2v1H4v-1zm3 0h2v1H7v-1zm3 0h2v1h-2v-1z"
                                                  fillRule="evenodd"
                                                />
                                              </svg>
                                            </EuiIconCalendar>
                                          </EuiIcon>
                                        </span>
                                      </span>
                                    </EuiButtonContent>
                                  </button>
                                </EuiButtonEmpty>
                              </div>
                            </div>
                          </EuiPopover>
                        </EuiQuickSelectPopover>
                        <div
                          className="euiFormControlLayout__childrenWrapper"
                        >
                          <EuiDatePickerRange
                            className="euiDatePickerRange--inGroup"
                            endDateControl={<div />}
                            iconType={false}
                            isCustom={true}
                            startDateControl={<div />}
                          >
                            <div
                              className="euiDatePickerRange euiDatePickerRange--inGroup"
                            >
                              <button
                                className="euiSuperDatePicker__prettyFormat"
                                data-test-subj="superDatePickerShowDatesButton"
                                disabled={false}
                                onClick={[Function]}
                              >
                                Last 5 minutes
                                <span
                                  className="euiSuperDatePicker__prettyFormatLink"
                                >
                                  <EuiI18n
                                    default="Show dates"
                                    token="euiSuperDatePicker.showDatesButtonLabel"
                                  >
                                    Show dates
                                  </EuiI18n>
                                </span>
                              </button>
                            </div>
                          </EuiDatePickerRange>
                          <EuiFormControlLayoutIcons />
                        </div>
                      </div>
                    </EuiFormControlLayout>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
          </EuiSuperDatePicker>
        </div>
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
      >
        <div
          className="euiFlexItem euiFlexItem--flexGrowZero"
        >
          <EuiButton
            data-click-metric-element="trace_analytics.refresh_button"
            data-test-subj="superDatePickerApplyTimeButton"
            iconType="refresh"
            onClick={[MockFunction]}
          >
            <EuiButtonDisplay
              baseClassName="euiButton"
              data-click-metric-element="trace_analytics.refresh_button"
              data-test-subj="superDatePickerApplyTimeButton"
              disabled={false}
              element="button"
              iconType="refresh"
              isDisabled={false}
              onClick={[MockFunction]}
              type="button"
            >
              <button
                className="euiButton euiButton--primary"
                data-click-metric-element="trace_analytics.refresh_button"
                data-test-subj="superDatePickerApplyTimeButton"
                disabled={false}
                onClick={[MockFunction]}
                style={
                  Object {
                    "minWidth": undefined,
                  }
                }
                type="button"
              >
                <EuiButtonContent
                  className="euiButton__content"
                  iconSide="left"
                  iconType="refresh"
                  textProps={
                    Object {
                      "className": "euiButton__text",
                    }
                  }
                >
                  <span
                    className="euiButtonContent euiButton__content"
                  >
                    <EuiIcon
                      className="euiButtonContent__icon"
                      color="inherit"
                      size="m"
                      type="refresh"
                    >
                      <EuiIconEmpty
                        aria-hidden={true}
                        className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                        focusable="false"
                        role="img"
                        style={null}
                      >
                        <svg
                          aria-hidden={true}
                          className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                          focusable="false"
                          height={16}
                          role="img"
                          style={null}
                          viewBox="0 0 16 16"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        />
                      </EuiIconEmpty>
                    </EuiIcon>
                    <span
                      className="euiButton__text"
                    >
                      Refresh
                    </span>
                  </span>
                </EuiButtonContent>
              </button>
            </EuiButtonDisplay>
          </EuiButton>
        </div>
      </EuiFlexItem>
    </div>
  </EuiFlexGroup>
  <EuiSpacer
    size="s"
  >
    <div
      className="euiSpacer euiSpacer--s"
    />
  </EuiSpacer>
  <Filters
    appConfigs={Array []}
    filters={Array []}
    page="dashboard"
    setFilters={[MockFunction]}
  >
    <EuiFlexGroup
      alignItems="center"
      gutterSize="xs"
      responsive={false}
      style={
        Object {
          "minHeight": 32,
        }
      }
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterExtraSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow"
        style={
          Object {
            "minHeight": 32,
          }
        }
      >
        <EuiFlexItem
          grow={false}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrowZero"
          >
            <GlobalFilterButton>
              <EuiPopover
                anchorPosition="rightUp"
                button={
                  <EuiButtonIcon
                    aria-label="Change all filters"
                    iconType="filter"
                    onClick={[Function]}
                    title="Change all filters"
                  />
                }
                closePopover={[Function]}
                display="inlineBlock"
                hasArrow={true}
                isOpen={false}
                ownFocus={true}
                panelPaddingSize="none"
                withTitle={true}
              >
                <div
                  className="euiPopover euiPopover--anchorRightUp"
                  withTitle={true}
                >
                  <div
                    className="euiPopover__anchor"
                  >
                    <EuiButtonIcon
                      aria-label="Change all filters"
                      iconType="filter"
                      onClick={[Function]}
                      title="Change all filters"
                    >
                      <button
                        aria-label="Change all filters"
                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall"
                        disabled={false}
                        onClick={[Function]}
                        title="Change all filters"
                        type="button"
                      >
                        <EuiIcon
                          aria-hidden="true"
                          className="euiButtonIcon__icon"
                          color="inherit"
                          size="m"
                          type="filter"
                        >
                          <EuiIconEmpty
                            aria-hidden={true}
                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                            focusable="false"
                            role="img"
                            style={null}
                          >
                            <svg
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                              focusable="false"
                              height={16}
                              role="img"
                              style={null}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            />
                          </EuiIconEmpty>
                        </EuiIcon>
                      </button>
                    </EuiButtonIcon>
                  </div>
                </div>
              </EuiPopover>
            </GlobalFilterButton>
          </div>
        </EuiFlexItem>
        <EuiFlexItem
          grow={false}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrowZero"
          >
            <AddFilterButton>
              <EuiPopover
                anchorPosition="downLeft"
                button={
                  <EuiButtonEmpty
                    onClick={[Function]}
                    size="xs"
                  >
                    + Add filter
                  </EuiButtonEmpty>
                }
                closePopover={[Function]}
                display="inlineBlock"
                hasArrow={true}
                isOpen={false}
                ownFocus={true}
                panelPaddingSize="m"
                withTitle={true}
              >
                <div
                  className="euiPopover euiPopover--anchorDownLeft"
                  withTitle={true}
                >
                  <div
                    className="euiPopover__anchor"
                  >
                    <EuiButtonEmpty
                      onClick={[Function]}
                      size="xs"
                    >
                      <button
                        className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <EuiButtonContent
                          className="euiButtonEmpty__content"
                          iconSide="left"
                          iconSize="s"
                          textProps={
                            Object {
                              "className": "euiButtonEmpty__text",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButtonEmpty__content"
                          >
                            <span
                              className="euiButtonEmpty__text"
                            >
                              + Add filter
                            </span>
                          </span>
                        </EuiButtonContent>
                      </button>
                    </EuiButtonEmpty>
                  </div>
                </div>
              </EuiPopover>
            </AddFilterButton>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </Filters>
</SearchBar>
`;
