// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Config panel component Renders config panel wrapper component with fields 1`] = `
<Memo(ConfigPanelWrapper)
  explorerFields={
    Object {
      "availableFields": Array [
        Object {
          "name": "agent",
          "type": "string",
        },
        Object {
          "name": "bytes",
          "type": "long",
        },
        Object {
          "name": "clientip",
          "type": "ip",
        },
        Object {
          "name": "event",
          "type": "struct",
        },
        Object {
          "name": "extension",
          "type": "string",
        },
        Object {
          "name": "geo",
          "type": "struct",
        },
        Object {
          "name": "host",
          "type": "string",
        },
        Object {
          "name": "index",
          "type": "string",
        },
        Object {
          "name": "ip",
          "type": "ip",
        },
        Object {
          "name": "machine",
          "type": "struct",
        },
        Object {
          "name": "memory",
          "type": "double",
        },
        Object {
          "name": "message",
          "type": "string",
        },
        Object {
          "name": "phpmemory",
          "type": "long",
        },
        Object {
          "name": "referer",
          "type": "string",
        },
        Object {
          "name": "request",
          "type": "string",
        },
        Object {
          "name": "response",
          "type": "string",
        },
        Object {
          "name": "tags",
          "type": "string",
        },
        Object {
          "name": "timestamp",
          "type": "timestamp",
        },
        Object {
          "name": "url",
          "type": "string",
        },
        Object {
          "name": "utc_time",
          "type": "timestamp",
        },
      ],
      "queriedFields": Array [
        Object {
          "name": "double_per_ip_bytes",
          "type": "long",
        },
        Object {
          "name": "host",
          "type": "text",
        },
        Object {
          "name": "ip_count",
          "type": "integer",
        },
        Object {
          "name": "per_ip_bytes",
          "type": "long",
        },
        Object {
          "name": "resp_code",
          "type": "text",
        },
        Object {
          "name": "sum_bytes",
          "type": "long",
        },
      ],
      "selectedFields": Array [],
      "unselectedFields": Array [],
    }
  }
>
  <LayerPanels
    explorerFields={
      Object {
        "availableFields": Array [
          Object {
            "name": "agent",
            "type": "string",
          },
          Object {
            "name": "bytes",
            "type": "long",
          },
          Object {
            "name": "clientip",
            "type": "ip",
          },
          Object {
            "name": "event",
            "type": "struct",
          },
          Object {
            "name": "extension",
            "type": "string",
          },
          Object {
            "name": "geo",
            "type": "struct",
          },
          Object {
            "name": "host",
            "type": "string",
          },
          Object {
            "name": "index",
            "type": "string",
          },
          Object {
            "name": "ip",
            "type": "ip",
          },
          Object {
            "name": "machine",
            "type": "struct",
          },
          Object {
            "name": "memory",
            "type": "double",
          },
          Object {
            "name": "message",
            "type": "string",
          },
          Object {
            "name": "phpmemory",
            "type": "long",
          },
          Object {
            "name": "referer",
            "type": "string",
          },
          Object {
            "name": "request",
            "type": "string",
          },
          Object {
            "name": "response",
            "type": "string",
          },
          Object {
            "name": "tags",
            "type": "string",
          },
          Object {
            "name": "timestamp",
            "type": "timestamp",
          },
          Object {
            "name": "url",
            "type": "string",
          },
          Object {
            "name": "utc_time",
            "type": "timestamp",
          },
        ],
        "queriedFields": Array [
          Object {
            "name": "double_per_ip_bytes",
            "type": "long",
          },
          Object {
            "name": "host",
            "type": "text",
          },
          Object {
            "name": "ip_count",
            "type": "integer",
          },
          Object {
            "name": "per_ip_bytes",
            "type": "long",
          },
          Object {
            "name": "resp_code",
            "type": "text",
          },
          Object {
            "name": "sum_bytes",
            "type": "long",
          },
        ],
        "selectedFields": Array [],
        "unselectedFields": Array [],
      }
    }
  >
    <EuiTabbedContent
      autoFocus="selected"
      id="vis-config-tabs"
      tabs={
        Array [
          Object {
            "content": <ConfigPanelItems
              panelItems={
                Array [
                  Object {
                    "advancedTitle": "Advanced",
                    "dropdownList": Array [
                      Object {
                        "name": "agent",
                        "type": "string",
                      },
                      Object {
                        "name": "bytes",
                        "type": "long",
                      },
                      Object {
                        "name": "clientip",
                        "type": "ip",
                      },
                      Object {
                        "name": "event",
                        "type": "struct",
                      },
                      Object {
                        "name": "extension",
                        "type": "string",
                      },
                      Object {
                        "name": "geo",
                        "type": "struct",
                      },
                      Object {
                        "name": "host",
                        "type": "string",
                      },
                      Object {
                        "name": "index",
                        "type": "string",
                      },
                      Object {
                        "name": "ip",
                        "type": "ip",
                      },
                      Object {
                        "name": "machine",
                        "type": "struct",
                      },
                      Object {
                        "name": "memory",
                        "type": "double",
                      },
                      Object {
                        "name": "message",
                        "type": "string",
                      },
                      Object {
                        "name": "phpmemory",
                        "type": "long",
                      },
                      Object {
                        "name": "referer",
                        "type": "string",
                      },
                      Object {
                        "name": "request",
                        "type": "string",
                      },
                      Object {
                        "name": "response",
                        "type": "string",
                      },
                      Object {
                        "name": "tags",
                        "type": "string",
                      },
                      Object {
                        "name": "timestamp",
                        "type": "timestamp",
                      },
                      Object {
                        "name": "url",
                        "type": "string",
                      },
                      Object {
                        "name": "utc_time",
                        "type": "timestamp",
                      },
                    ],
                    "paddingTitle": "X-axis",
                  },
                  Object {
                    "advancedTitle": "Advanced",
                    "dropdownList": Array [],
                    "paddingTitle": "Y-axis",
                  },
                ]
              }
            />,
            "id": "setting-panel",
            "name": "Settings",
          },
        ]
      }
    >
      <div
        id="vis-config-tabs"
      >
        <EuiTabs
          onFocus={[Function]}
        >
          <div
            className="euiTabs"
            onFocus={[Function]}
            role="tablist"
          >
            <EuiTab
              aria-controls="random_html_id"
              id="setting-panel"
              isSelected={true}
              key="setting-panel"
              onClick={[Function]}
            >
              <button
                aria-controls="random_html_id"
                aria-selected={true}
                className="euiTab euiTab-isSelected"
                disabled={false}
                id="setting-panel"
                onClick={[Function]}
                role="tab"
                type="button"
              >
                <span
                  className="euiTab__content"
                >
                  Settings
                </span>
              </button>
            </EuiTab>
          </div>
        </EuiTabs>
        <div
          aria-labelledby="setting-panel"
          id="random_html_id"
          role="tabpanel"
        >
          <ConfigPanelItems
            panelItems={
              Array [
                Object {
                  "advancedTitle": "Advanced",
                  "dropdownList": Array [
                    Object {
                      "name": "agent",
                      "type": "string",
                    },
                    Object {
                      "name": "bytes",
                      "type": "long",
                    },
                    Object {
                      "name": "clientip",
                      "type": "ip",
                    },
                    Object {
                      "name": "event",
                      "type": "struct",
                    },
                    Object {
                      "name": "extension",
                      "type": "string",
                    },
                    Object {
                      "name": "geo",
                      "type": "struct",
                    },
                    Object {
                      "name": "host",
                      "type": "string",
                    },
                    Object {
                      "name": "index",
                      "type": "string",
                    },
                    Object {
                      "name": "ip",
                      "type": "ip",
                    },
                    Object {
                      "name": "machine",
                      "type": "struct",
                    },
                    Object {
                      "name": "memory",
                      "type": "double",
                    },
                    Object {
                      "name": "message",
                      "type": "string",
                    },
                    Object {
                      "name": "phpmemory",
                      "type": "long",
                    },
                    Object {
                      "name": "referer",
                      "type": "string",
                    },
                    Object {
                      "name": "request",
                      "type": "string",
                    },
                    Object {
                      "name": "response",
                      "type": "string",
                    },
                    Object {
                      "name": "tags",
                      "type": "string",
                    },
                    Object {
                      "name": "timestamp",
                      "type": "timestamp",
                    },
                    Object {
                      "name": "url",
                      "type": "string",
                    },
                    Object {
                      "name": "utc_time",
                      "type": "timestamp",
                    },
                  ],
                  "paddingTitle": "X-axis",
                },
                Object {
                  "advancedTitle": "Advanced",
                  "dropdownList": Array [],
                  "paddingTitle": "Y-axis",
                },
              ]
            }
          >
            <EuiForm
              className="lnsConfigPanel"
            >
              <div
                className="euiForm lnsConfigPanel"
              >
                <section
                  key="vis-conf-panel-5"
                >
                  <PanelItem
                    advancedTitle="Advanced"
                    dropdownList={
                      Array [
                        Object {
                          "name": "agent",
                          "type": "string",
                        },
                        Object {
                          "name": "bytes",
                          "type": "long",
                        },
                        Object {
                          "name": "clientip",
                          "type": "ip",
                        },
                        Object {
                          "name": "event",
                          "type": "struct",
                        },
                        Object {
                          "name": "extension",
                          "type": "string",
                        },
                        Object {
                          "name": "geo",
                          "type": "struct",
                        },
                        Object {
                          "name": "host",
                          "type": "string",
                        },
                        Object {
                          "name": "index",
                          "type": "string",
                        },
                        Object {
                          "name": "ip",
                          "type": "ip",
                        },
                        Object {
                          "name": "machine",
                          "type": "struct",
                        },
                        Object {
                          "name": "memory",
                          "type": "double",
                        },
                        Object {
                          "name": "message",
                          "type": "string",
                        },
                        Object {
                          "name": "phpmemory",
                          "type": "long",
                        },
                        Object {
                          "name": "referer",
                          "type": "string",
                        },
                        Object {
                          "name": "request",
                          "type": "string",
                        },
                        Object {
                          "name": "response",
                          "type": "string",
                        },
                        Object {
                          "name": "tags",
                          "type": "string",
                        },
                        Object {
                          "name": "timestamp",
                          "type": "timestamp",
                        },
                        Object {
                          "name": "url",
                          "type": "string",
                        },
                        Object {
                          "name": "utc_time",
                          "type": "timestamp",
                        },
                      ]
                    }
                    paddingTitle="X-axis"
                  >
                    <EuiPanel
                      paddingSize="m"
                    >
                      <div
                        className="euiPanel euiPanel--paddingMedium"
                      >
                        <EuiTitle
                          size="xxs"
                        >
                          <h3
                            className="euiTitle euiTitle--xxsmall"
                          >
                            X-axis
                          </h3>
                        </EuiTitle>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiComboBox
                          aria-label="Use aria labels when no actual label is in use"
                          async={false}
                          compressed={false}
                          fullWidth={false}
                          id="axis-select-7"
                          isClearable={true}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "agent",
                              },
                              Object {
                                "label": "bytes",
                              },
                              Object {
                                "label": "clientip",
                              },
                              Object {
                                "label": "event",
                              },
                              Object {
                                "label": "extension",
                              },
                              Object {
                                "label": "geo",
                              },
                              Object {
                                "label": "host",
                              },
                              Object {
                                "label": "index",
                              },
                              Object {
                                "label": "ip",
                              },
                              Object {
                                "label": "machine",
                              },
                              Object {
                                "label": "memory",
                              },
                              Object {
                                "label": "message",
                              },
                              Object {
                                "label": "phpmemory",
                              },
                              Object {
                                "label": "referer",
                              },
                              Object {
                                "label": "request",
                              },
                              Object {
                                "label": "response",
                              },
                              Object {
                                "label": "tags",
                              },
                              Object {
                                "label": "timestamp",
                              },
                              Object {
                                "label": "url",
                              },
                              Object {
                                "label": "utc_time",
                              },
                            ]
                          }
                          placeholder="Select a field"
                          selectedOptions={
                            Array [
                              Object {
                                "label": "agent",
                              },
                            ]
                          }
                          singleSelection={
                            Object {
                              "asPlainText": true,
                            }
                          }
                          sortMatchesBy="none"
                        >
                          <div
                            aria-expanded={false}
                            aria-haspopup="listbox"
                            aria-label="Use aria labels when no actual label is in use"
                            className="euiComboBox"
                            onKeyDown={[Function]}
                            role="combobox"
                          >
                            <EuiComboBoxInput
                              autoSizeInputRef={[Function]}
                              compressed={false}
                              fullWidth={false}
                              hasSelectedOptions={true}
                              id="axis-select-7"
                              inputRef={[Function]}
                              isListOpen={false}
                              noIcon={false}
                              onChange={[Function]}
                              onClear={[Function]}
                              onClick={[Function]}
                              onCloseListClick={[Function]}
                              onFocus={[Function]}
                              onOpenListClick={[Function]}
                              onRemoveOption={[Function]}
                              placeholder="Select a field"
                              rootId={[Function]}
                              searchValue=""
                              selectedOptions={
                                Array [
                                  Object {
                                    "label": "agent",
                                  },
                                ]
                              }
                              singleSelection={
                                Object {
                                  "asPlainText": true,
                                }
                              }
                              toggleButtonRef={[Function]}
                              updatePosition={[Function]}
                              value="agent"
                            >
                              <EuiFormControlLayout
                                clear={
                                  Object {
                                    "data-test-subj": "comboBoxClearButton",
                                    "onClick": [Function],
                                  }
                                }
                                compressed={false}
                                fullWidth={false}
                                icon={
                                  Object {
                                    "aria-label": "Open list of options",
                                    "data-test-subj": "comboBoxToggleListButton",
                                    "disabled": undefined,
                                    "onClick": [Function],
                                    "ref": [Function],
                                    "side": "right",
                                    "type": "arrowDown",
                                  }
                                }
                              >
                                <div
                                  className="euiFormControlLayout"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <div
                                      className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                      data-test-subj="comboBoxInput"
                                      onClick={[Function]}
                                      tabIndex={-1}
                                    >
                                      <EuiComboBoxPill
                                        asPlainText={true}
                                        color="hollow"
                                        key="agent"
                                        option={
                                          Object {
                                            "label": "agent",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiComboBoxPill euiComboBoxPill--plainText"
                                        >
                                          agent
                                        </span>
                                      </EuiComboBoxPill>
                                      <AutosizeInput
                                        aria-controls=""
                                        className="euiComboBox__input"
                                        data-test-subj="comboBoxSearchInput"
                                        id="axis-select-7"
                                        injectStyles={true}
                                        inputRef={[Function]}
                                        minWidth={1}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        role="textbox"
                                        style={
                                          Object {
                                            "fontSize": 14,
                                          }
                                        }
                                        value=""
                                      >
                                        <div
                                          className="euiComboBox__input"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                              "fontSize": 14,
                                            }
                                          }
                                        >
                                          <input
                                            aria-controls=""
                                            data-test-subj="comboBoxSearchInput"
                                            id="axis-select-7"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            role="textbox"
                                            style={
                                              Object {
                                                "boxSizing": "content-box",
                                                "width": "2px",
                                              }
                                            }
                                            value=""
                                          />
                                          <div
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": 0,
                                                "visibility": "hidden",
                                                "whiteSpace": "pre",
                                              }
                                            }
                                          />
                                        </div>
                                      </AutosizeInput>
                                    </div>
                                    <EuiFormControlLayoutIcons
                                      clear={
                                        Object {
                                          "data-test-subj": "comboBoxClearButton",
                                          "onClick": [Function],
                                        }
                                      }
                                      icon={
                                        Object {
                                          "aria-label": "Open list of options",
                                          "data-test-subj": "comboBoxToggleListButton",
                                          "disabled": undefined,
                                          "onClick": [Function],
                                          "ref": [Function],
                                          "side": "right",
                                          "type": "arrowDown",
                                        }
                                      }
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                      >
                                        <EuiFormControlLayoutClearButton
                                          data-test-subj="comboBoxClearButton"
                                          onClick={[Function]}
                                        >
                                          <EuiI18n
                                            default="Clear input"
                                            token="euiFormControlLayoutClearButton.label"
                                          >
                                            <button
                                              aria-label="Clear input"
                                              className="euiFormControlLayoutClearButton"
                                              data-test-subj="comboBoxClearButton"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <EuiIcon
                                                className="euiFormControlLayoutClearButton__icon"
                                                type="cross"
                                              >
                                                <EuiIconEmpty
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutClearButton__icon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutClearButton__icon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  />
                                                </EuiIconEmpty>
                                              </EuiIcon>
                                            </button>
                                          </EuiI18n>
                                        </EuiFormControlLayoutClearButton>
                                        <EuiFormControlLayoutCustomIcon
                                          aria-label="Open list of options"
                                          data-test-subj="comboBoxToggleListButton"
                                          iconRef={[Function]}
                                          onClick={[Function]}
                                          type="arrowDown"
                                        >
                                          <button
                                            aria-label="Open list of options"
                                            className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                            data-test-subj="comboBoxToggleListButton"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              type="arrowDown"
                                            >
                                              <EuiIconArrowDown
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                    fillRule="non-zero"
                                                  />
                                                </svg>
                                              </EuiIconArrowDown>
                                            </EuiIcon>
                                          </button>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiComboBoxInput>
                          </div>
                        </EuiComboBox>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiAccordion
                          arrowDisplay="left"
                          buttonContent="Advanced"
                          id="accordion1"
                          initialIsOpen={false}
                          isLoading={false}
                          isLoadingMessage={false}
                          paddingSize="none"
                        >
                          <div
                            className="euiAccordion"
                          >
                            <div
                              className="euiAccordion__triggerWrapper"
                            >
                              <button
                                aria-controls="accordion1"
                                aria-expanded={false}
                                className="euiAccordion__button"
                                id="random_html_id"
                                onClick={[Function]}
                                type="button"
                              >
                                <span
                                  className="euiAccordion__iconWrapper"
                                >
                                  <EuiIcon
                                    className="euiAccordion__icon"
                                    size="m"
                                    type="arrowRight"
                                  >
                                    <EuiIconArrowRight
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiAccordion__icon"
                                      focusable="false"
                                      role="img"
                                      style={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiAccordion__icon"
                                        focusable="false"
                                        height={16}
                                        role="img"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width={16}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5.157 13.069l4.611-4.685a.546.546 0 000-.768L5.158 2.93a.552.552 0 010-.771.53.53 0 01.759 0l4.61 4.684c.631.641.63 1.672 0 2.312l-4.61 4.684a.53.53 0 01-.76 0 .552.552 0 010-.771z"
                                          fillRule="nonzero"
                                        />
                                      </svg>
                                    </EuiIconArrowRight>
                                  </EuiIcon>
                                </span>
                                <span
                                  className="euiIEFlexWrapFix"
                                >
                                  Advanced
                                </span>
                              </button>
                            </div>
                            <div
                              className="euiAccordion__childWrapper"
                              id="accordion1"
                            >
                              <EuiResizeObserver
                                onResize={[Function]}
                              >
                                <div>
                                  <div
                                    className=""
                                  >
                                    <EuiPanel
                                      color="subdued"
                                    >
                                      <div
                                        className="euiPanel euiPanel--paddingMedium"
                                        color="subdued"
                                      >
                                        here goes advanced setting
                                      </div>
                                    </EuiPanel>
                                  </div>
                                </div>
                              </EuiResizeObserver>
                            </div>
                          </div>
                        </EuiAccordion>
                      </div>
                    </EuiPanel>
                  </PanelItem>
                  <EuiSpacer
                    size="s"
                  >
                    <div
                      className="euiSpacer euiSpacer--s"
                    />
                  </EuiSpacer>
                </section>
                <section
                  key="vis-conf-panel-6"
                >
                  <PanelItem
                    advancedTitle="Advanced"
                    dropdownList={Array []}
                    paddingTitle="Y-axis"
                  >
                    <EuiPanel
                      paddingSize="m"
                    >
                      <div
                        className="euiPanel euiPanel--paddingMedium"
                      >
                        <EuiTitle
                          size="xxs"
                        >
                          <h3
                            className="euiTitle euiTitle--xxsmall"
                          >
                            Y-axis
                          </h3>
                        </EuiTitle>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiComboBox
                          aria-label="Use aria labels when no actual label is in use"
                          async={false}
                          compressed={false}
                          fullWidth={false}
                          id="axis-select-8"
                          isClearable={true}
                          onChange={[Function]}
                          options={Array []}
                          placeholder="Select a field"
                          selectedOptions={Array []}
                          singleSelection={
                            Object {
                              "asPlainText": true,
                            }
                          }
                          sortMatchesBy="none"
                        >
                          <div
                            aria-expanded={false}
                            aria-haspopup="listbox"
                            aria-label="Use aria labels when no actual label is in use"
                            className="euiComboBox"
                            onKeyDown={[Function]}
                            role="combobox"
                          >
                            <EuiComboBoxInput
                              autoSizeInputRef={[Function]}
                              compressed={false}
                              fullWidth={false}
                              hasSelectedOptions={false}
                              id="axis-select-8"
                              inputRef={[Function]}
                              isListOpen={false}
                              noIcon={false}
                              onChange={[Function]}
                              onClear={[Function]}
                              onClick={[Function]}
                              onCloseListClick={[Function]}
                              onFocus={[Function]}
                              onOpenListClick={[Function]}
                              onRemoveOption={[Function]}
                              placeholder="Select a field"
                              rootId={[Function]}
                              searchValue=""
                              selectedOptions={Array []}
                              singleSelection={
                                Object {
                                  "asPlainText": true,
                                }
                              }
                              toggleButtonRef={[Function]}
                              updatePosition={[Function]}
                              value=""
                            >
                              <EuiFormControlLayout
                                compressed={false}
                                fullWidth={false}
                                icon={
                                  Object {
                                    "aria-label": "Open list of options",
                                    "data-test-subj": "comboBoxToggleListButton",
                                    "disabled": undefined,
                                    "onClick": [Function],
                                    "ref": [Function],
                                    "side": "right",
                                    "type": "arrowDown",
                                  }
                                }
                              >
                                <div
                                  className="euiFormControlLayout"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <div
                                      className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                      data-test-subj="comboBoxInput"
                                      onClick={[Function]}
                                      tabIndex={-1}
                                    >
                                      <p
                                        className="euiComboBoxPlaceholder"
                                      >
                                        Select a field
                                      </p>
                                      <AutosizeInput
                                        aria-controls=""
                                        className="euiComboBox__input"
                                        data-test-subj="comboBoxSearchInput"
                                        id="axis-select-8"
                                        injectStyles={true}
                                        inputRef={[Function]}
                                        minWidth={1}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        role="textbox"
                                        style={
                                          Object {
                                            "fontSize": 14,
                                          }
                                        }
                                        value=""
                                      >
                                        <div
                                          className="euiComboBox__input"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                              "fontSize": 14,
                                            }
                                          }
                                        >
                                          <input
                                            aria-controls=""
                                            data-test-subj="comboBoxSearchInput"
                                            id="axis-select-8"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            role="textbox"
                                            style={
                                              Object {
                                                "boxSizing": "content-box",
                                                "width": "2px",
                                              }
                                            }
                                            value=""
                                          />
                                          <div
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": 0,
                                                "visibility": "hidden",
                                                "whiteSpace": "pre",
                                              }
                                            }
                                          />
                                        </div>
                                      </AutosizeInput>
                                    </div>
                                    <EuiFormControlLayoutIcons
                                      icon={
                                        Object {
                                          "aria-label": "Open list of options",
                                          "data-test-subj": "comboBoxToggleListButton",
                                          "disabled": undefined,
                                          "onClick": [Function],
                                          "ref": [Function],
                                          "side": "right",
                                          "type": "arrowDown",
                                        }
                                      }
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                      >
                                        <EuiFormControlLayoutCustomIcon
                                          aria-label="Open list of options"
                                          data-test-subj="comboBoxToggleListButton"
                                          iconRef={[Function]}
                                          onClick={[Function]}
                                          type="arrowDown"
                                        >
                                          <button
                                            aria-label="Open list of options"
                                            className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                            data-test-subj="comboBoxToggleListButton"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              type="arrowDown"
                                            >
                                              <EuiIconArrowDown
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                    fillRule="non-zero"
                                                  />
                                                </svg>
                                              </EuiIconArrowDown>
                                            </EuiIcon>
                                          </button>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiComboBoxInput>
                          </div>
                        </EuiComboBox>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiAccordion
                          arrowDisplay="left"
                          buttonContent="Advanced"
                          id="accordion1"
                          initialIsOpen={false}
                          isLoading={false}
                          isLoadingMessage={false}
                          paddingSize="none"
                        >
                          <div
                            className="euiAccordion"
                          >
                            <div
                              className="euiAccordion__triggerWrapper"
                            >
                              <button
                                aria-controls="accordion1"
                                aria-expanded={false}
                                className="euiAccordion__button"
                                id="random_html_id"
                                onClick={[Function]}
                                type="button"
                              >
                                <span
                                  className="euiAccordion__iconWrapper"
                                >
                                  <EuiIcon
                                    className="euiAccordion__icon"
                                    size="m"
                                    type="arrowRight"
                                  >
                                    <EuiIconArrowRight
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiAccordion__icon"
                                      focusable="false"
                                      role="img"
                                      style={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiAccordion__icon"
                                        focusable="false"
                                        height={16}
                                        role="img"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width={16}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5.157 13.069l4.611-4.685a.546.546 0 000-.768L5.158 2.93a.552.552 0 010-.771.53.53 0 01.759 0l4.61 4.684c.631.641.63 1.672 0 2.312l-4.61 4.684a.53.53 0 01-.76 0 .552.552 0 010-.771z"
                                          fillRule="nonzero"
                                        />
                                      </svg>
                                    </EuiIconArrowRight>
                                  </EuiIcon>
                                </span>
                                <span
                                  className="euiIEFlexWrapFix"
                                >
                                  Advanced
                                </span>
                              </button>
                            </div>
                            <div
                              className="euiAccordion__childWrapper"
                              id="accordion1"
                            >
                              <EuiResizeObserver
                                onResize={[Function]}
                              >
                                <div>
                                  <div
                                    className=""
                                  >
                                    <EuiPanel
                                      color="subdued"
                                    >
                                      <div
                                        className="euiPanel euiPanel--paddingMedium"
                                        color="subdued"
                                      >
                                        here goes advanced setting
                                      </div>
                                    </EuiPanel>
                                  </div>
                                </div>
                              </EuiResizeObserver>
                            </div>
                          </div>
                        </EuiAccordion>
                      </div>
                    </EuiPanel>
                  </PanelItem>
                  <EuiSpacer
                    size="s"
                  >
                    <div
                      className="euiSpacer euiSpacer--s"
                    />
                  </EuiSpacer>
                </section>
              </div>
            </EuiForm>
          </ConfigPanelItems>
        </div>
      </div>
    </EuiTabbedContent>
  </LayerPanels>
</Memo(ConfigPanelWrapper)>
`;

exports[`Config panel component Renders empty config panel wrapper component 1`] = `
<Memo(ConfigPanelWrapper)>
  <LayerPanels>
    <EuiTabbedContent
      autoFocus="selected"
      id="vis-config-tabs"
      tabs={
        Array [
          Object {
            "content": <ConfigPanelItems
              panelItems={
                Array [
                  Object {
                    "advancedTitle": "Advanced",
                    "dropdownList": Array [],
                    "paddingTitle": "X-axis",
                  },
                  Object {
                    "advancedTitle": "Advanced",
                    "dropdownList": Array [],
                    "paddingTitle": "Y-axis",
                  },
                ]
              }
            />,
            "id": "setting-panel",
            "name": "Settings",
          },
        ]
      }
    >
      <div
        id="vis-config-tabs"
      >
        <EuiTabs
          onFocus={[Function]}
        >
          <div
            className="euiTabs"
            onFocus={[Function]}
            role="tablist"
          >
            <EuiTab
              aria-controls="random_html_id"
              id="setting-panel"
              isSelected={true}
              key="setting-panel"
              onClick={[Function]}
            >
              <button
                aria-controls="random_html_id"
                aria-selected={true}
                className="euiTab euiTab-isSelected"
                disabled={false}
                id="setting-panel"
                onClick={[Function]}
                role="tab"
                type="button"
              >
                <span
                  className="euiTab__content"
                >
                  Settings
                </span>
              </button>
            </EuiTab>
          </div>
        </EuiTabs>
        <div
          aria-labelledby="setting-panel"
          id="random_html_id"
          role="tabpanel"
        >
          <ConfigPanelItems
            panelItems={
              Array [
                Object {
                  "advancedTitle": "Advanced",
                  "dropdownList": Array [],
                  "paddingTitle": "X-axis",
                },
                Object {
                  "advancedTitle": "Advanced",
                  "dropdownList": Array [],
                  "paddingTitle": "Y-axis",
                },
              ]
            }
          >
            <EuiForm
              className="lnsConfigPanel"
            >
              <div
                className="euiForm lnsConfigPanel"
              >
                <section
                  key="vis-conf-panel-1"
                >
                  <PanelItem
                    advancedTitle="Advanced"
                    dropdownList={Array []}
                    paddingTitle="X-axis"
                  >
                    <EuiPanel
                      paddingSize="m"
                    >
                      <div
                        className="euiPanel euiPanel--paddingMedium"
                      >
                        <EuiTitle
                          size="xxs"
                        >
                          <h3
                            className="euiTitle euiTitle--xxsmall"
                          >
                            X-axis
                          </h3>
                        </EuiTitle>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiComboBox
                          aria-label="Use aria labels when no actual label is in use"
                          async={false}
                          compressed={false}
                          fullWidth={false}
                          id="axis-select-3"
                          isClearable={true}
                          onChange={[Function]}
                          options={Array []}
                          placeholder="Select a field"
                          selectedOptions={Array []}
                          singleSelection={
                            Object {
                              "asPlainText": true,
                            }
                          }
                          sortMatchesBy="none"
                        >
                          <div
                            aria-expanded={false}
                            aria-haspopup="listbox"
                            aria-label="Use aria labels when no actual label is in use"
                            className="euiComboBox"
                            onKeyDown={[Function]}
                            role="combobox"
                          >
                            <EuiComboBoxInput
                              autoSizeInputRef={[Function]}
                              compressed={false}
                              fullWidth={false}
                              hasSelectedOptions={false}
                              id="axis-select-3"
                              inputRef={[Function]}
                              isListOpen={false}
                              noIcon={false}
                              onChange={[Function]}
                              onClear={[Function]}
                              onClick={[Function]}
                              onCloseListClick={[Function]}
                              onFocus={[Function]}
                              onOpenListClick={[Function]}
                              onRemoveOption={[Function]}
                              placeholder="Select a field"
                              rootId={[Function]}
                              searchValue=""
                              selectedOptions={Array []}
                              singleSelection={
                                Object {
                                  "asPlainText": true,
                                }
                              }
                              toggleButtonRef={[Function]}
                              updatePosition={[Function]}
                              value=""
                            >
                              <EuiFormControlLayout
                                compressed={false}
                                fullWidth={false}
                                icon={
                                  Object {
                                    "aria-label": "Open list of options",
                                    "data-test-subj": "comboBoxToggleListButton",
                                    "disabled": undefined,
                                    "onClick": [Function],
                                    "ref": [Function],
                                    "side": "right",
                                    "type": "arrowDown",
                                  }
                                }
                              >
                                <div
                                  className="euiFormControlLayout"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <div
                                      className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                      data-test-subj="comboBoxInput"
                                      onClick={[Function]}
                                      tabIndex={-1}
                                    >
                                      <p
                                        className="euiComboBoxPlaceholder"
                                      >
                                        Select a field
                                      </p>
                                      <AutosizeInput
                                        aria-controls=""
                                        className="euiComboBox__input"
                                        data-test-subj="comboBoxSearchInput"
                                        id="axis-select-3"
                                        injectStyles={true}
                                        inputRef={[Function]}
                                        minWidth={1}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        role="textbox"
                                        style={
                                          Object {
                                            "fontSize": 14,
                                          }
                                        }
                                        value=""
                                      >
                                        <div
                                          className="euiComboBox__input"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                              "fontSize": 14,
                                            }
                                          }
                                        >
                                          <input
                                            aria-controls=""
                                            data-test-subj="comboBoxSearchInput"
                                            id="axis-select-3"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            role="textbox"
                                            style={
                                              Object {
                                                "boxSizing": "content-box",
                                                "width": "2px",
                                              }
                                            }
                                            value=""
                                          />
                                          <div
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": 0,
                                                "visibility": "hidden",
                                                "whiteSpace": "pre",
                                              }
                                            }
                                          />
                                        </div>
                                      </AutosizeInput>
                                    </div>
                                    <EuiFormControlLayoutIcons
                                      icon={
                                        Object {
                                          "aria-label": "Open list of options",
                                          "data-test-subj": "comboBoxToggleListButton",
                                          "disabled": undefined,
                                          "onClick": [Function],
                                          "ref": [Function],
                                          "side": "right",
                                          "type": "arrowDown",
                                        }
                                      }
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                      >
                                        <EuiFormControlLayoutCustomIcon
                                          aria-label="Open list of options"
                                          data-test-subj="comboBoxToggleListButton"
                                          iconRef={[Function]}
                                          onClick={[Function]}
                                          type="arrowDown"
                                        >
                                          <button
                                            aria-label="Open list of options"
                                            className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                            data-test-subj="comboBoxToggleListButton"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              type="arrowDown"
                                            >
                                              <EuiIconEmpty
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                />
                                              </EuiIconEmpty>
                                            </EuiIcon>
                                          </button>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiComboBoxInput>
                          </div>
                        </EuiComboBox>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiAccordion
                          arrowDisplay="left"
                          buttonContent="Advanced"
                          id="accordion1"
                          initialIsOpen={false}
                          isLoading={false}
                          isLoadingMessage={false}
                          paddingSize="none"
                        >
                          <div
                            className="euiAccordion"
                          >
                            <div
                              className="euiAccordion__triggerWrapper"
                            >
                              <button
                                aria-controls="accordion1"
                                aria-expanded={false}
                                className="euiAccordion__button"
                                id="random_html_id"
                                onClick={[Function]}
                                type="button"
                              >
                                <span
                                  className="euiAccordion__iconWrapper"
                                >
                                  <EuiIcon
                                    className="euiAccordion__icon"
                                    size="m"
                                    type="arrowRight"
                                  >
                                    <EuiIconEmpty
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon"
                                      focusable="false"
                                      role="img"
                                      style={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon"
                                        focusable="false"
                                        height={16}
                                        role="img"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width={16}
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </EuiIconEmpty>
                                  </EuiIcon>
                                </span>
                                <span
                                  className="euiIEFlexWrapFix"
                                >
                                  Advanced
                                </span>
                              </button>
                            </div>
                            <div
                              className="euiAccordion__childWrapper"
                              id="accordion1"
                            >
                              <EuiResizeObserver
                                onResize={[Function]}
                              >
                                <div>
                                  <div
                                    className=""
                                  >
                                    <EuiPanel
                                      color="subdued"
                                    >
                                      <div
                                        className="euiPanel euiPanel--paddingMedium"
                                        color="subdued"
                                      >
                                        here goes advanced setting
                                      </div>
                                    </EuiPanel>
                                  </div>
                                </div>
                              </EuiResizeObserver>
                            </div>
                          </div>
                        </EuiAccordion>
                      </div>
                    </EuiPanel>
                  </PanelItem>
                  <EuiSpacer
                    size="s"
                  >
                    <div
                      className="euiSpacer euiSpacer--s"
                    />
                  </EuiSpacer>
                </section>
                <section
                  key="vis-conf-panel-2"
                >
                  <PanelItem
                    advancedTitle="Advanced"
                    dropdownList={Array []}
                    paddingTitle="Y-axis"
                  >
                    <EuiPanel
                      paddingSize="m"
                    >
                      <div
                        className="euiPanel euiPanel--paddingMedium"
                      >
                        <EuiTitle
                          size="xxs"
                        >
                          <h3
                            className="euiTitle euiTitle--xxsmall"
                          >
                            Y-axis
                          </h3>
                        </EuiTitle>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiComboBox
                          aria-label="Use aria labels when no actual label is in use"
                          async={false}
                          compressed={false}
                          fullWidth={false}
                          id="axis-select-4"
                          isClearable={true}
                          onChange={[Function]}
                          options={Array []}
                          placeholder="Select a field"
                          selectedOptions={Array []}
                          singleSelection={
                            Object {
                              "asPlainText": true,
                            }
                          }
                          sortMatchesBy="none"
                        >
                          <div
                            aria-expanded={false}
                            aria-haspopup="listbox"
                            aria-label="Use aria labels when no actual label is in use"
                            className="euiComboBox"
                            onKeyDown={[Function]}
                            role="combobox"
                          >
                            <EuiComboBoxInput
                              autoSizeInputRef={[Function]}
                              compressed={false}
                              fullWidth={false}
                              hasSelectedOptions={false}
                              id="axis-select-4"
                              inputRef={[Function]}
                              isListOpen={false}
                              noIcon={false}
                              onChange={[Function]}
                              onClear={[Function]}
                              onClick={[Function]}
                              onCloseListClick={[Function]}
                              onFocus={[Function]}
                              onOpenListClick={[Function]}
                              onRemoveOption={[Function]}
                              placeholder="Select a field"
                              rootId={[Function]}
                              searchValue=""
                              selectedOptions={Array []}
                              singleSelection={
                                Object {
                                  "asPlainText": true,
                                }
                              }
                              toggleButtonRef={[Function]}
                              updatePosition={[Function]}
                              value=""
                            >
                              <EuiFormControlLayout
                                compressed={false}
                                fullWidth={false}
                                icon={
                                  Object {
                                    "aria-label": "Open list of options",
                                    "data-test-subj": "comboBoxToggleListButton",
                                    "disabled": undefined,
                                    "onClick": [Function],
                                    "ref": [Function],
                                    "side": "right",
                                    "type": "arrowDown",
                                  }
                                }
                              >
                                <div
                                  className="euiFormControlLayout"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <div
                                      className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                      data-test-subj="comboBoxInput"
                                      onClick={[Function]}
                                      tabIndex={-1}
                                    >
                                      <p
                                        className="euiComboBoxPlaceholder"
                                      >
                                        Select a field
                                      </p>
                                      <AutosizeInput
                                        aria-controls=""
                                        className="euiComboBox__input"
                                        data-test-subj="comboBoxSearchInput"
                                        id="axis-select-4"
                                        injectStyles={true}
                                        inputRef={[Function]}
                                        minWidth={1}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        role="textbox"
                                        style={
                                          Object {
                                            "fontSize": 14,
                                          }
                                        }
                                        value=""
                                      >
                                        <div
                                          className="euiComboBox__input"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                              "fontSize": 14,
                                            }
                                          }
                                        >
                                          <input
                                            aria-controls=""
                                            data-test-subj="comboBoxSearchInput"
                                            id="axis-select-4"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            role="textbox"
                                            style={
                                              Object {
                                                "boxSizing": "content-box",
                                                "width": "2px",
                                              }
                                            }
                                            value=""
                                          />
                                          <div
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": 0,
                                                "visibility": "hidden",
                                                "whiteSpace": "pre",
                                              }
                                            }
                                          />
                                        </div>
                                      </AutosizeInput>
                                    </div>
                                    <EuiFormControlLayoutIcons
                                      icon={
                                        Object {
                                          "aria-label": "Open list of options",
                                          "data-test-subj": "comboBoxToggleListButton",
                                          "disabled": undefined,
                                          "onClick": [Function],
                                          "ref": [Function],
                                          "side": "right",
                                          "type": "arrowDown",
                                        }
                                      }
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                      >
                                        <EuiFormControlLayoutCustomIcon
                                          aria-label="Open list of options"
                                          data-test-subj="comboBoxToggleListButton"
                                          iconRef={[Function]}
                                          onClick={[Function]}
                                          type="arrowDown"
                                        >
                                          <button
                                            aria-label="Open list of options"
                                            className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                            data-test-subj="comboBoxToggleListButton"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              type="arrowDown"
                                            >
                                              <EuiIconEmpty
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                />
                                              </EuiIconEmpty>
                                            </EuiIcon>
                                          </button>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiComboBoxInput>
                          </div>
                        </EuiComboBox>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiAccordion
                          arrowDisplay="left"
                          buttonContent="Advanced"
                          id="accordion1"
                          initialIsOpen={false}
                          isLoading={false}
                          isLoadingMessage={false}
                          paddingSize="none"
                        >
                          <div
                            className="euiAccordion"
                          >
                            <div
                              className="euiAccordion__triggerWrapper"
                            >
                              <button
                                aria-controls="accordion1"
                                aria-expanded={false}
                                className="euiAccordion__button"
                                id="random_html_id"
                                onClick={[Function]}
                                type="button"
                              >
                                <span
                                  className="euiAccordion__iconWrapper"
                                >
                                  <EuiIcon
                                    className="euiAccordion__icon"
                                    size="m"
                                    type="arrowRight"
                                  >
                                    <EuiIconEmpty
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon"
                                      focusable="false"
                                      role="img"
                                      style={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon"
                                        focusable="false"
                                        height={16}
                                        role="img"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width={16}
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </EuiIconEmpty>
                                  </EuiIcon>
                                </span>
                                <span
                                  className="euiIEFlexWrapFix"
                                >
                                  Advanced
                                </span>
                              </button>
                            </div>
                            <div
                              className="euiAccordion__childWrapper"
                              id="accordion1"
                            >
                              <EuiResizeObserver
                                onResize={[Function]}
                              >
                                <div>
                                  <div
                                    className=""
                                  >
                                    <EuiPanel
                                      color="subdued"
                                    >
                                      <div
                                        className="euiPanel euiPanel--paddingMedium"
                                        color="subdued"
                                      >
                                        here goes advanced setting
                                      </div>
                                    </EuiPanel>
                                  </div>
                                </div>
                              </EuiResizeObserver>
                            </div>
                          </div>
                        </EuiAccordion>
                      </div>
                    </EuiPanel>
                  </PanelItem>
                  <EuiSpacer
                    size="s"
                  >
                    <div
                      className="euiSpacer euiSpacer--s"
                    />
                  </EuiSpacer>
                </section>
              </div>
            </EuiForm>
          </ConfigPanelItems>
        </div>
      </div>
    </EuiTabbedContent>
  </LayerPanels>
</Memo(ConfigPanelWrapper)>
`;

exports[`Config panel component Renders panel item component 1`] = `
<Memo(ConfigPanelWrapper)
  explorerFields={
    Object {
      "availableFields": Array [
        Object {
          "name": "agent",
          "type": "string",
        },
        Object {
          "name": "bytes",
          "type": "long",
        },
        Object {
          "name": "clientip",
          "type": "ip",
        },
        Object {
          "name": "event",
          "type": "struct",
        },
        Object {
          "name": "extension",
          "type": "string",
        },
        Object {
          "name": "geo",
          "type": "struct",
        },
        Object {
          "name": "host",
          "type": "string",
        },
        Object {
          "name": "index",
          "type": "string",
        },
        Object {
          "name": "ip",
          "type": "ip",
        },
        Object {
          "name": "machine",
          "type": "struct",
        },
        Object {
          "name": "memory",
          "type": "double",
        },
        Object {
          "name": "message",
          "type": "string",
        },
        Object {
          "name": "phpmemory",
          "type": "long",
        },
        Object {
          "name": "referer",
          "type": "string",
        },
        Object {
          "name": "request",
          "type": "string",
        },
        Object {
          "name": "response",
          "type": "string",
        },
        Object {
          "name": "tags",
          "type": "string",
        },
        Object {
          "name": "timestamp",
          "type": "timestamp",
        },
        Object {
          "name": "url",
          "type": "string",
        },
        Object {
          "name": "utc_time",
          "type": "timestamp",
        },
      ],
      "queriedFields": Array [
        Object {
          "name": "double_per_ip_bytes",
          "type": "long",
        },
        Object {
          "name": "host",
          "type": "text",
        },
        Object {
          "name": "ip_count",
          "type": "integer",
        },
        Object {
          "name": "per_ip_bytes",
          "type": "long",
        },
        Object {
          "name": "resp_code",
          "type": "text",
        },
        Object {
          "name": "sum_bytes",
          "type": "long",
        },
      ],
      "selectedFields": Array [],
      "unselectedFields": Array [],
    }
  }
>
  <LayerPanels
    explorerFields={
      Object {
        "availableFields": Array [
          Object {
            "name": "agent",
            "type": "string",
          },
          Object {
            "name": "bytes",
            "type": "long",
          },
          Object {
            "name": "clientip",
            "type": "ip",
          },
          Object {
            "name": "event",
            "type": "struct",
          },
          Object {
            "name": "extension",
            "type": "string",
          },
          Object {
            "name": "geo",
            "type": "struct",
          },
          Object {
            "name": "host",
            "type": "string",
          },
          Object {
            "name": "index",
            "type": "string",
          },
          Object {
            "name": "ip",
            "type": "ip",
          },
          Object {
            "name": "machine",
            "type": "struct",
          },
          Object {
            "name": "memory",
            "type": "double",
          },
          Object {
            "name": "message",
            "type": "string",
          },
          Object {
            "name": "phpmemory",
            "type": "long",
          },
          Object {
            "name": "referer",
            "type": "string",
          },
          Object {
            "name": "request",
            "type": "string",
          },
          Object {
            "name": "response",
            "type": "string",
          },
          Object {
            "name": "tags",
            "type": "string",
          },
          Object {
            "name": "timestamp",
            "type": "timestamp",
          },
          Object {
            "name": "url",
            "type": "string",
          },
          Object {
            "name": "utc_time",
            "type": "timestamp",
          },
        ],
        "queriedFields": Array [
          Object {
            "name": "double_per_ip_bytes",
            "type": "long",
          },
          Object {
            "name": "host",
            "type": "text",
          },
          Object {
            "name": "ip_count",
            "type": "integer",
          },
          Object {
            "name": "per_ip_bytes",
            "type": "long",
          },
          Object {
            "name": "resp_code",
            "type": "text",
          },
          Object {
            "name": "sum_bytes",
            "type": "long",
          },
        ],
        "selectedFields": Array [],
        "unselectedFields": Array [],
      }
    }
  >
    <EuiTabbedContent
      autoFocus="selected"
      id="vis-config-tabs"
      tabs={
        Array [
          Object {
            "content": <ConfigPanelItems
              panelItems={
                Array [
                  Object {
                    "advancedTitle": "Advanced",
                    "dropdownList": Array [
                      Object {
                        "name": "agent",
                        "type": "string",
                      },
                      Object {
                        "name": "bytes",
                        "type": "long",
                      },
                      Object {
                        "name": "clientip",
                        "type": "ip",
                      },
                      Object {
                        "name": "event",
                        "type": "struct",
                      },
                      Object {
                        "name": "extension",
                        "type": "string",
                      },
                      Object {
                        "name": "geo",
                        "type": "struct",
                      },
                      Object {
                        "name": "host",
                        "type": "string",
                      },
                      Object {
                        "name": "index",
                        "type": "string",
                      },
                      Object {
                        "name": "ip",
                        "type": "ip",
                      },
                      Object {
                        "name": "machine",
                        "type": "struct",
                      },
                      Object {
                        "name": "memory",
                        "type": "double",
                      },
                      Object {
                        "name": "message",
                        "type": "string",
                      },
                      Object {
                        "name": "phpmemory",
                        "type": "long",
                      },
                      Object {
                        "name": "referer",
                        "type": "string",
                      },
                      Object {
                        "name": "request",
                        "type": "string",
                      },
                      Object {
                        "name": "response",
                        "type": "string",
                      },
                      Object {
                        "name": "tags",
                        "type": "string",
                      },
                      Object {
                        "name": "timestamp",
                        "type": "timestamp",
                      },
                      Object {
                        "name": "url",
                        "type": "string",
                      },
                      Object {
                        "name": "utc_time",
                        "type": "timestamp",
                      },
                    ],
                    "paddingTitle": "X-axis",
                  },
                  Object {
                    "advancedTitle": "Advanced",
                    "dropdownList": Array [],
                    "paddingTitle": "Y-axis",
                  },
                ]
              }
            />,
            "id": "setting-panel",
            "name": "Settings",
          },
        ]
      }
    >
      <div
        id="vis-config-tabs"
      >
        <EuiTabs
          onFocus={[Function]}
        >
          <div
            className="euiTabs"
            onFocus={[Function]}
            role="tablist"
          >
            <EuiTab
              aria-controls="random_html_id"
              id="setting-panel"
              isSelected={true}
              key="setting-panel"
              onClick={[Function]}
            >
              <button
                aria-controls="random_html_id"
                aria-selected={true}
                className="euiTab euiTab-isSelected"
                disabled={false}
                id="setting-panel"
                onClick={[Function]}
                role="tab"
                type="button"
              >
                <span
                  className="euiTab__content"
                >
                  Settings
                </span>
              </button>
            </EuiTab>
          </div>
        </EuiTabs>
        <div
          aria-labelledby="setting-panel"
          id="random_html_id"
          role="tabpanel"
        >
          <ConfigPanelItems
            panelItems={
              Array [
                Object {
                  "advancedTitle": "Advanced",
                  "dropdownList": Array [
                    Object {
                      "name": "agent",
                      "type": "string",
                    },
                    Object {
                      "name": "bytes",
                      "type": "long",
                    },
                    Object {
                      "name": "clientip",
                      "type": "ip",
                    },
                    Object {
                      "name": "event",
                      "type": "struct",
                    },
                    Object {
                      "name": "extension",
                      "type": "string",
                    },
                    Object {
                      "name": "geo",
                      "type": "struct",
                    },
                    Object {
                      "name": "host",
                      "type": "string",
                    },
                    Object {
                      "name": "index",
                      "type": "string",
                    },
                    Object {
                      "name": "ip",
                      "type": "ip",
                    },
                    Object {
                      "name": "machine",
                      "type": "struct",
                    },
                    Object {
                      "name": "memory",
                      "type": "double",
                    },
                    Object {
                      "name": "message",
                      "type": "string",
                    },
                    Object {
                      "name": "phpmemory",
                      "type": "long",
                    },
                    Object {
                      "name": "referer",
                      "type": "string",
                    },
                    Object {
                      "name": "request",
                      "type": "string",
                    },
                    Object {
                      "name": "response",
                      "type": "string",
                    },
                    Object {
                      "name": "tags",
                      "type": "string",
                    },
                    Object {
                      "name": "timestamp",
                      "type": "timestamp",
                    },
                    Object {
                      "name": "url",
                      "type": "string",
                    },
                    Object {
                      "name": "utc_time",
                      "type": "timestamp",
                    },
                  ],
                  "paddingTitle": "X-axis",
                },
                Object {
                  "advancedTitle": "Advanced",
                  "dropdownList": Array [],
                  "paddingTitle": "Y-axis",
                },
              ]
            }
          >
            <EuiForm
              className="lnsConfigPanel"
            >
              <div
                className="euiForm lnsConfigPanel"
              >
                <section
                  key="vis-conf-panel-9"
                >
                  <PanelItem
                    advancedTitle="Advanced"
                    dropdownList={
                      Array [
                        Object {
                          "name": "agent",
                          "type": "string",
                        },
                        Object {
                          "name": "bytes",
                          "type": "long",
                        },
                        Object {
                          "name": "clientip",
                          "type": "ip",
                        },
                        Object {
                          "name": "event",
                          "type": "struct",
                        },
                        Object {
                          "name": "extension",
                          "type": "string",
                        },
                        Object {
                          "name": "geo",
                          "type": "struct",
                        },
                        Object {
                          "name": "host",
                          "type": "string",
                        },
                        Object {
                          "name": "index",
                          "type": "string",
                        },
                        Object {
                          "name": "ip",
                          "type": "ip",
                        },
                        Object {
                          "name": "machine",
                          "type": "struct",
                        },
                        Object {
                          "name": "memory",
                          "type": "double",
                        },
                        Object {
                          "name": "message",
                          "type": "string",
                        },
                        Object {
                          "name": "phpmemory",
                          "type": "long",
                        },
                        Object {
                          "name": "referer",
                          "type": "string",
                        },
                        Object {
                          "name": "request",
                          "type": "string",
                        },
                        Object {
                          "name": "response",
                          "type": "string",
                        },
                        Object {
                          "name": "tags",
                          "type": "string",
                        },
                        Object {
                          "name": "timestamp",
                          "type": "timestamp",
                        },
                        Object {
                          "name": "url",
                          "type": "string",
                        },
                        Object {
                          "name": "utc_time",
                          "type": "timestamp",
                        },
                      ]
                    }
                    paddingTitle="X-axis"
                  >
                    <EuiPanel
                      paddingSize="m"
                    >
                      <div
                        className="euiPanel euiPanel--paddingMedium"
                      >
                        <EuiTitle
                          size="xxs"
                        >
                          <h3
                            className="euiTitle euiTitle--xxsmall"
                          >
                            X-axis
                          </h3>
                        </EuiTitle>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiComboBox
                          aria-label="Use aria labels when no actual label is in use"
                          async={false}
                          compressed={false}
                          fullWidth={false}
                          id="axis-select-11"
                          isClearable={true}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "agent",
                              },
                              Object {
                                "label": "bytes",
                              },
                              Object {
                                "label": "clientip",
                              },
                              Object {
                                "label": "event",
                              },
                              Object {
                                "label": "extension",
                              },
                              Object {
                                "label": "geo",
                              },
                              Object {
                                "label": "host",
                              },
                              Object {
                                "label": "index",
                              },
                              Object {
                                "label": "ip",
                              },
                              Object {
                                "label": "machine",
                              },
                              Object {
                                "label": "memory",
                              },
                              Object {
                                "label": "message",
                              },
                              Object {
                                "label": "phpmemory",
                              },
                              Object {
                                "label": "referer",
                              },
                              Object {
                                "label": "request",
                              },
                              Object {
                                "label": "response",
                              },
                              Object {
                                "label": "tags",
                              },
                              Object {
                                "label": "timestamp",
                              },
                              Object {
                                "label": "url",
                              },
                              Object {
                                "label": "utc_time",
                              },
                            ]
                          }
                          placeholder="Select a field"
                          selectedOptions={
                            Array [
                              Object {
                                "label": "agent",
                              },
                            ]
                          }
                          singleSelection={
                            Object {
                              "asPlainText": true,
                            }
                          }
                          sortMatchesBy="none"
                        >
                          <div
                            aria-expanded={false}
                            aria-haspopup="listbox"
                            aria-label="Use aria labels when no actual label is in use"
                            className="euiComboBox"
                            onKeyDown={[Function]}
                            role="combobox"
                          >
                            <EuiComboBoxInput
                              autoSizeInputRef={[Function]}
                              compressed={false}
                              fullWidth={false}
                              hasSelectedOptions={true}
                              id="axis-select-11"
                              inputRef={[Function]}
                              isListOpen={false}
                              noIcon={false}
                              onChange={[Function]}
                              onClear={[Function]}
                              onClick={[Function]}
                              onCloseListClick={[Function]}
                              onFocus={[Function]}
                              onOpenListClick={[Function]}
                              onRemoveOption={[Function]}
                              placeholder="Select a field"
                              rootId={[Function]}
                              searchValue=""
                              selectedOptions={
                                Array [
                                  Object {
                                    "label": "agent",
                                  },
                                ]
                              }
                              singleSelection={
                                Object {
                                  "asPlainText": true,
                                }
                              }
                              toggleButtonRef={[Function]}
                              updatePosition={[Function]}
                              value="agent"
                            >
                              <EuiFormControlLayout
                                clear={
                                  Object {
                                    "data-test-subj": "comboBoxClearButton",
                                    "onClick": [Function],
                                  }
                                }
                                compressed={false}
                                fullWidth={false}
                                icon={
                                  Object {
                                    "aria-label": "Open list of options",
                                    "data-test-subj": "comboBoxToggleListButton",
                                    "disabled": undefined,
                                    "onClick": [Function],
                                    "ref": [Function],
                                    "side": "right",
                                    "type": "arrowDown",
                                  }
                                }
                              >
                                <div
                                  className="euiFormControlLayout"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <div
                                      className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                      data-test-subj="comboBoxInput"
                                      onClick={[Function]}
                                      tabIndex={-1}
                                    >
                                      <EuiComboBoxPill
                                        asPlainText={true}
                                        color="hollow"
                                        key="agent"
                                        option={
                                          Object {
                                            "label": "agent",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiComboBoxPill euiComboBoxPill--plainText"
                                        >
                                          agent
                                        </span>
                                      </EuiComboBoxPill>
                                      <AutosizeInput
                                        aria-controls=""
                                        className="euiComboBox__input"
                                        data-test-subj="comboBoxSearchInput"
                                        id="axis-select-11"
                                        injectStyles={true}
                                        inputRef={[Function]}
                                        minWidth={1}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        role="textbox"
                                        style={
                                          Object {
                                            "fontSize": 14,
                                          }
                                        }
                                        value=""
                                      >
                                        <div
                                          className="euiComboBox__input"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                              "fontSize": 14,
                                            }
                                          }
                                        >
                                          <input
                                            aria-controls=""
                                            data-test-subj="comboBoxSearchInput"
                                            id="axis-select-11"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            role="textbox"
                                            style={
                                              Object {
                                                "boxSizing": "content-box",
                                                "width": "2px",
                                              }
                                            }
                                            value=""
                                          />
                                          <div
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": 0,
                                                "visibility": "hidden",
                                                "whiteSpace": "pre",
                                              }
                                            }
                                          />
                                        </div>
                                      </AutosizeInput>
                                    </div>
                                    <EuiFormControlLayoutIcons
                                      clear={
                                        Object {
                                          "data-test-subj": "comboBoxClearButton",
                                          "onClick": [Function],
                                        }
                                      }
                                      icon={
                                        Object {
                                          "aria-label": "Open list of options",
                                          "data-test-subj": "comboBoxToggleListButton",
                                          "disabled": undefined,
                                          "onClick": [Function],
                                          "ref": [Function],
                                          "side": "right",
                                          "type": "arrowDown",
                                        }
                                      }
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                      >
                                        <EuiFormControlLayoutClearButton
                                          data-test-subj="comboBoxClearButton"
                                          onClick={[Function]}
                                        >
                                          <EuiI18n
                                            default="Clear input"
                                            token="euiFormControlLayoutClearButton.label"
                                          >
                                            <button
                                              aria-label="Clear input"
                                              className="euiFormControlLayoutClearButton"
                                              data-test-subj="comboBoxClearButton"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <EuiIcon
                                                className="euiFormControlLayoutClearButton__icon"
                                                type="cross"
                                              >
                                                <EuiIconCross
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiFormControlLayoutClearButton__icon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiFormControlLayoutClearButton__icon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M7.293 8L3.146 3.854a.5.5 0 11.708-.708L8 7.293l4.146-4.147a.5.5 0 01.708.708L8.707 8l4.147 4.146a.5.5 0 01-.708.708L8 8.707l-4.146 4.147a.5.5 0 01-.708-.708L7.293 8z"
                                                    />
                                                  </svg>
                                                </EuiIconCross>
                                              </EuiIcon>
                                            </button>
                                          </EuiI18n>
                                        </EuiFormControlLayoutClearButton>
                                        <EuiFormControlLayoutCustomIcon
                                          aria-label="Open list of options"
                                          data-test-subj="comboBoxToggleListButton"
                                          iconRef={[Function]}
                                          onClick={[Function]}
                                          type="arrowDown"
                                        >
                                          <button
                                            aria-label="Open list of options"
                                            className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                            data-test-subj="comboBoxToggleListButton"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              type="arrowDown"
                                            >
                                              <EuiIconArrowDown
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                    fillRule="non-zero"
                                                  />
                                                </svg>
                                              </EuiIconArrowDown>
                                            </EuiIcon>
                                          </button>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiComboBoxInput>
                          </div>
                        </EuiComboBox>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiAccordion
                          arrowDisplay="left"
                          buttonContent="Advanced"
                          id="accordion1"
                          initialIsOpen={false}
                          isLoading={false}
                          isLoadingMessage={false}
                          paddingSize="none"
                        >
                          <div
                            className="euiAccordion"
                          >
                            <div
                              className="euiAccordion__triggerWrapper"
                            >
                              <button
                                aria-controls="accordion1"
                                aria-expanded={false}
                                className="euiAccordion__button"
                                id="random_html_id"
                                onClick={[Function]}
                                type="button"
                              >
                                <span
                                  className="euiAccordion__iconWrapper"
                                >
                                  <EuiIcon
                                    className="euiAccordion__icon"
                                    size="m"
                                    type="arrowRight"
                                  >
                                    <EuiIconArrowRight
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiAccordion__icon"
                                      focusable="false"
                                      role="img"
                                      style={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiAccordion__icon"
                                        focusable="false"
                                        height={16}
                                        role="img"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width={16}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5.157 13.069l4.611-4.685a.546.546 0 000-.768L5.158 2.93a.552.552 0 010-.771.53.53 0 01.759 0l4.61 4.684c.631.641.63 1.672 0 2.312l-4.61 4.684a.53.53 0 01-.76 0 .552.552 0 010-.771z"
                                          fillRule="nonzero"
                                        />
                                      </svg>
                                    </EuiIconArrowRight>
                                  </EuiIcon>
                                </span>
                                <span
                                  className="euiIEFlexWrapFix"
                                >
                                  Advanced
                                </span>
                              </button>
                            </div>
                            <div
                              className="euiAccordion__childWrapper"
                              id="accordion1"
                            >
                              <EuiResizeObserver
                                onResize={[Function]}
                              >
                                <div>
                                  <div
                                    className=""
                                  >
                                    <EuiPanel
                                      color="subdued"
                                    >
                                      <div
                                        className="euiPanel euiPanel--paddingMedium"
                                        color="subdued"
                                      >
                                        here goes advanced setting
                                      </div>
                                    </EuiPanel>
                                  </div>
                                </div>
                              </EuiResizeObserver>
                            </div>
                          </div>
                        </EuiAccordion>
                      </div>
                    </EuiPanel>
                  </PanelItem>
                  <EuiSpacer
                    size="s"
                  >
                    <div
                      className="euiSpacer euiSpacer--s"
                    />
                  </EuiSpacer>
                </section>
                <section
                  key="vis-conf-panel-10"
                >
                  <PanelItem
                    advancedTitle="Advanced"
                    dropdownList={Array []}
                    paddingTitle="Y-axis"
                  >
                    <EuiPanel
                      paddingSize="m"
                    >
                      <div
                        className="euiPanel euiPanel--paddingMedium"
                      >
                        <EuiTitle
                          size="xxs"
                        >
                          <h3
                            className="euiTitle euiTitle--xxsmall"
                          >
                            Y-axis
                          </h3>
                        </EuiTitle>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiComboBox
                          aria-label="Use aria labels when no actual label is in use"
                          async={false}
                          compressed={false}
                          fullWidth={false}
                          id="axis-select-12"
                          isClearable={true}
                          onChange={[Function]}
                          options={Array []}
                          placeholder="Select a field"
                          selectedOptions={Array []}
                          singleSelection={
                            Object {
                              "asPlainText": true,
                            }
                          }
                          sortMatchesBy="none"
                        >
                          <div
                            aria-expanded={false}
                            aria-haspopup="listbox"
                            aria-label="Use aria labels when no actual label is in use"
                            className="euiComboBox"
                            onKeyDown={[Function]}
                            role="combobox"
                          >
                            <EuiComboBoxInput
                              autoSizeInputRef={[Function]}
                              compressed={false}
                              fullWidth={false}
                              hasSelectedOptions={false}
                              id="axis-select-12"
                              inputRef={[Function]}
                              isListOpen={false}
                              noIcon={false}
                              onChange={[Function]}
                              onClear={[Function]}
                              onClick={[Function]}
                              onCloseListClick={[Function]}
                              onFocus={[Function]}
                              onOpenListClick={[Function]}
                              onRemoveOption={[Function]}
                              placeholder="Select a field"
                              rootId={[Function]}
                              searchValue=""
                              selectedOptions={Array []}
                              singleSelection={
                                Object {
                                  "asPlainText": true,
                                }
                              }
                              toggleButtonRef={[Function]}
                              updatePosition={[Function]}
                              value=""
                            >
                              <EuiFormControlLayout
                                compressed={false}
                                fullWidth={false}
                                icon={
                                  Object {
                                    "aria-label": "Open list of options",
                                    "data-test-subj": "comboBoxToggleListButton",
                                    "disabled": undefined,
                                    "onClick": [Function],
                                    "ref": [Function],
                                    "side": "right",
                                    "type": "arrowDown",
                                  }
                                }
                              >
                                <div
                                  className="euiFormControlLayout"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <div
                                      className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                      data-test-subj="comboBoxInput"
                                      onClick={[Function]}
                                      tabIndex={-1}
                                    >
                                      <p
                                        className="euiComboBoxPlaceholder"
                                      >
                                        Select a field
                                      </p>
                                      <AutosizeInput
                                        aria-controls=""
                                        className="euiComboBox__input"
                                        data-test-subj="comboBoxSearchInput"
                                        id="axis-select-12"
                                        injectStyles={true}
                                        inputRef={[Function]}
                                        minWidth={1}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        role="textbox"
                                        style={
                                          Object {
                                            "fontSize": 14,
                                          }
                                        }
                                        value=""
                                      >
                                        <div
                                          className="euiComboBox__input"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                              "fontSize": 14,
                                            }
                                          }
                                        >
                                          <input
                                            aria-controls=""
                                            data-test-subj="comboBoxSearchInput"
                                            id="axis-select-12"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            role="textbox"
                                            style={
                                              Object {
                                                "boxSizing": "content-box",
                                                "width": "2px",
                                              }
                                            }
                                            value=""
                                          />
                                          <div
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": 0,
                                                "visibility": "hidden",
                                                "whiteSpace": "pre",
                                              }
                                            }
                                          />
                                        </div>
                                      </AutosizeInput>
                                    </div>
                                    <EuiFormControlLayoutIcons
                                      icon={
                                        Object {
                                          "aria-label": "Open list of options",
                                          "data-test-subj": "comboBoxToggleListButton",
                                          "disabled": undefined,
                                          "onClick": [Function],
                                          "ref": [Function],
                                          "side": "right",
                                          "type": "arrowDown",
                                        }
                                      }
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                      >
                                        <EuiFormControlLayoutCustomIcon
                                          aria-label="Open list of options"
                                          data-test-subj="comboBoxToggleListButton"
                                          iconRef={[Function]}
                                          onClick={[Function]}
                                          type="arrowDown"
                                        >
                                          <button
                                            aria-label="Open list of options"
                                            className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                            data-test-subj="comboBoxToggleListButton"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              type="arrowDown"
                                            >
                                              <EuiIconArrowDown
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                    fillRule="non-zero"
                                                  />
                                                </svg>
                                              </EuiIconArrowDown>
                                            </EuiIcon>
                                          </button>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiComboBoxInput>
                          </div>
                        </EuiComboBox>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiAccordion
                          arrowDisplay="left"
                          buttonContent="Advanced"
                          id="accordion1"
                          initialIsOpen={false}
                          isLoading={false}
                          isLoadingMessage={false}
                          paddingSize="none"
                        >
                          <div
                            className="euiAccordion"
                          >
                            <div
                              className="euiAccordion__triggerWrapper"
                            >
                              <button
                                aria-controls="accordion1"
                                aria-expanded={false}
                                className="euiAccordion__button"
                                id="random_html_id"
                                onClick={[Function]}
                                type="button"
                              >
                                <span
                                  className="euiAccordion__iconWrapper"
                                >
                                  <EuiIcon
                                    className="euiAccordion__icon"
                                    size="m"
                                    type="arrowRight"
                                  >
                                    <EuiIconArrowRight
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiAccordion__icon"
                                      focusable="false"
                                      role="img"
                                      style={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiAccordion__icon"
                                        focusable="false"
                                        height={16}
                                        role="img"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width={16}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5.157 13.069l4.611-4.685a.546.546 0 000-.768L5.158 2.93a.552.552 0 010-.771.53.53 0 01.759 0l4.61 4.684c.631.641.63 1.672 0 2.312l-4.61 4.684a.53.53 0 01-.76 0 .552.552 0 010-.771z"
                                          fillRule="nonzero"
                                        />
                                      </svg>
                                    </EuiIconArrowRight>
                                  </EuiIcon>
                                </span>
                                <span
                                  className="euiIEFlexWrapFix"
                                >
                                  Advanced
                                </span>
                              </button>
                            </div>
                            <div
                              className="euiAccordion__childWrapper"
                              id="accordion1"
                            >
                              <EuiResizeObserver
                                onResize={[Function]}
                              >
                                <div>
                                  <div
                                    className=""
                                  >
                                    <EuiPanel
                                      color="subdued"
                                    >
                                      <div
                                        className="euiPanel euiPanel--paddingMedium"
                                        color="subdued"
                                      >
                                        here goes advanced setting
                                      </div>
                                    </EuiPanel>
                                  </div>
                                </div>
                              </EuiResizeObserver>
                            </div>
                          </div>
                        </EuiAccordion>
                      </div>
                    </EuiPanel>
                  </PanelItem>
                  <EuiSpacer
                    size="s"
                  >
                    <div
                      className="euiSpacer euiSpacer--s"
                    />
                  </EuiSpacer>
                </section>
              </div>
            </EuiForm>
          </ConfigPanelItems>
        </div>
      </div>
    </EuiTabbedContent>
  </LayerPanels>
</Memo(ConfigPanelWrapper)>
`;
