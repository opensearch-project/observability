// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Config panel component Renders config panel with visualization data 1`] = `
<ConfigPanel
  changeIsValidConfigOptionState={[MockFunction]}
  setCurVisId={[MockFunction]}
  visualizations={
    Object {
      "data": Object {
        "appData": Object {
          "fromApp": false,
        },
        "defaultAxes": Object {},
        "indexFields": Object {
          "availableFields": Array [
            Object {
              "name": "agent",
              "type": "string",
            },
            Object {
              "name": "bytes",
              "type": "long",
            },
            Object {
              "name": "clientip",
              "type": "ip",
            },
            Object {
              "name": "event",
              "type": "struct",
            },
            Object {
              "name": "extension",
              "type": "string",
            },
            Object {
              "name": "geo",
              "type": "struct",
            },
            Object {
              "name": "host",
              "type": "string",
            },
            Object {
              "name": "index",
              "type": "string",
            },
            Object {
              "name": "ip",
              "type": "ip",
            },
            Object {
              "name": "machine",
              "type": "struct",
            },
            Object {
              "name": "memory",
              "type": "double",
            },
            Object {
              "name": "message",
              "type": "string",
            },
            Object {
              "name": "phpmemory",
              "type": "long",
            },
            Object {
              "name": "referer",
              "type": "string",
            },
            Object {
              "name": "request",
              "type": "string",
            },
            Object {
              "name": "response",
              "type": "string",
            },
            Object {
              "name": "tags",
              "type": "string",
            },
            Object {
              "name": "timestamp",
              "type": "timestamp",
            },
            Object {
              "name": "url",
              "type": "string",
            },
            Object {
              "name": "utc_time",
              "type": "timestamp",
            },
          ],
          "queriedFields": Array [
            Object {
              "name": "double_per_ip_bytes",
              "type": "long",
            },
            Object {
              "name": "host",
              "type": "text",
            },
            Object {
              "name": "ip_count",
              "type": "integer",
            },
            Object {
              "name": "per_ip_bytes",
              "type": "long",
            },
            Object {
              "name": "resp_code",
              "type": "text",
            },
            Object {
              "name": "sum_bytes",
              "type": "long",
            },
          ],
          "selectedFields": Array [],
          "unselectedFields": Array [],
        },
        "query": Object {},
        "rawVizData": Object {
          "data": Object {
            "count()": Array [
              154,
              1753,
              116,
              468,
              1964,
              219,
            ],
            "tags": Array [
              "error",
              "info",
              "login",
              "security",
              "success",
              "warning",
            ],
          },
          "jsonData": Array [
            Object {
              "count()": 154,
              "tags": "error",
            },
            Object {
              "count()": 1753,
              "tags": "info",
            },
            Object {
              "count()": 116,
              "tags": "login",
            },
            Object {
              "count()": 468,
              "tags": "security",
            },
            Object {
              "count()": 1964,
              "tags": "success",
            },
            Object {
              "count()": 219,
              "tags": "warning",
            },
          ],
          "metadata": Object {
            "fields": Array [
              Object {
                "name": "count()",
                "type": "integer",
              },
              Object {
                "name": "tags",
                "type": "text",
              },
            ],
            "size": 6,
            "status": 200,
          },
        },
        "userConfigs": Object {
          "dataConfig": Object {
            "valueOptions": Object {
              "dimensions": Array [
                Object {
                  "label": "tags",
                  "name": "tags",
                  "type": "text",
                },
              ],
              "metrics": Array [
                Object {
                  "label": "count()",
                  "name": "count()",
                  "side": "left",
                  "type": "integer",
                },
              ],
            },
          },
        },
      },
      "vis": Object {
        "barwidth": 0.97,
        "category": "Visualizations",
        "categoryaxis": "xaxis",
        "component": [Function],
        "editorconfig": Object {
          "panelTabs": Array [
            Object {
              "editor": [Function],
              "id": "data-panel",
              "mapTo": "dataConfig",
              "name": "Style",
              "sections": Array [
                Object {
                  "editor": [Function],
                  "id": "tooltip_options",
                  "mapTo": "tooltipOptions",
                  "name": "Tooltip options",
                  "schemas": Array [
                    Object {
                      "component": null,
                      "mapTo": "tooltipMode",
                      "name": "Tooltip mode",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                          Object {
                            "id": "hidden",
                            "name": "Hidden",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": null,
                      "mapTo": "tooltipText",
                      "name": "Tooltip text",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "all",
                            "name": "All",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "all",
                            "name": "All",
                          },
                          Object {
                            "id": "x",
                            "name": "Dimension",
                          },
                          Object {
                            "id": "y",
                            "name": "Series",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "editor": [Function],
                  "id": "legend",
                  "mapTo": "legend",
                  "name": "Legend",
                  "schemas": Array [
                    Object {
                      "component": null,
                      "mapTo": "showLegend",
                      "name": "Show legend",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                          Object {
                            "id": "hidden",
                            "name": "Hidden",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": null,
                      "mapTo": "position",
                      "name": "Position",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "v",
                            "name": "Right",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "v",
                            "name": "Right",
                          },
                          Object {
                            "id": "h",
                            "name": "Bottom",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": [Function],
                      "eleType": "input",
                      "mapTo": "legendSize",
                      "name": "Legend size",
                      "title": "Legend size",
                    },
                  ],
                },
                Object {
                  "editor": [Function],
                  "id": "chart_styles",
                  "mapTo": "chartStyles",
                  "name": "Chart styles",
                  "schemas": Array [
                    Object {
                      "component": [Function],
                      "eleType": "buttons",
                      "mapTo": "mode",
                      "name": "Mode",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "group",
                            "name": "Group",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "group",
                            "name": "Group",
                          },
                          Object {
                            "id": "stack",
                            "name": "Stack",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": [Function],
                      "eleType": "input",
                      "mapTo": "labelSize",
                      "name": "Label size",
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 0,
                      "eleType": "slider",
                      "mapTo": "rotateBarLabels",
                      "name": "Rotate bar labels",
                      "props": Object {
                        "max": 90,
                        "min": -90,
                        "showTicks": true,
                        "ticks": Array [
                          Object {
                            "label": "-90°",
                            "value": -90,
                          },
                          Object {
                            "label": "-45°",
                            "value": -45,
                          },
                          Object {
                            "label": "0°",
                            "value": 0,
                          },
                          Object {
                            "label": "45°",
                            "value": 45,
                          },
                          Object {
                            "label": "90°",
                            "value": 90,
                          },
                        ],
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 0.7,
                      "eleType": "slider",
                      "mapTo": "groupWidth",
                      "name": "Group width",
                      "props": Object {
                        "max": 1,
                        "step": 0.01,
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 0.97,
                      "eleType": "slider",
                      "mapTo": "barWidth",
                      "name": "Bar width",
                      "props": Object {
                        "max": 1,
                        "step": 0.01,
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 2,
                      "eleType": "slider",
                      "mapTo": "lineWidth",
                      "name": "Line width",
                      "props": Object {
                        "max": 10,
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 70,
                      "eleType": "slider",
                      "mapTo": "fillOpacity",
                      "name": "Fill opacity",
                      "props": Object {
                        "max": 100,
                      },
                    },
                  ],
                },
              ],
            },
            Object {
              "editor": [Function],
              "id": "availability-panel",
              "mapTo": "availabilityConfig",
              "name": "Availability",
            },
          ],
        },
        "fillopacity": 70,
        "fulllabel": "Vertical bar",
        "groupwidth": 0.7,
        "icon": [Function],
        "icontype": "visBarVerticalStacked",
        "id": "bar",
        "label": "Vertical bar",
        "labelangle": 0,
        "legendposition": "v",
        "linewidth": 2,
        "mode": "group",
        "name": "bar",
        "orientation": "v",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "seriesaxis": "yaxis",
        "showlegend": "show",
        "type": "bar",
        "visconfig": Object {
          "config": Object {
            "displaylogo": false,
            "responsive": true,
          },
          "isUniColor": false,
          "layout": Object {
            "height": 1180,
            "legend": Object {
              "orientation": "v",
              "traceorder": "normal",
            },
            "margin": Object {
              "b": 30,
              "l": 60,
              "pad": 0,
              "r": 30,
              "t": 50,
            },
            "showlegend": true,
          },
        },
      },
    }
  }
>
  <div
    className="cp__rightContainer"
  >
    <div
      className="cp__rightHeader"
    >
      <EuiComboBox
        aria-label="config chart selector"
        async={false}
        compressed={false}
        fullWidth={true}
        isClearable={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "barwidth": 0.97,
              "category": "Visualizations",
              "categoryaxis": "xaxis",
              "component": [Function],
              "editorconfig": Object {
                "panelTabs": Array [
                  Object {
                    "editor": [Function],
                    "id": "data-panel",
                    "mapTo": "dataConfig",
                    "name": "Style",
                    "sections": Array [
                      Object {
                        "editor": [Function],
                        "id": "tooltip_options",
                        "mapTo": "tooltipOptions",
                        "name": "Tooltip options",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "tooltipMode",
                            "name": "Tooltip mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "tooltipText",
                            "name": "Tooltip text",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                                Object {
                                  "id": "x",
                                  "name": "Dimension",
                                },
                                Object {
                                  "id": "y",
                                  "name": "Series",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "legend",
                        "mapTo": "legend",
                        "name": "Legend",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "showLegend",
                            "name": "Show legend",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "position",
                            "name": "Position",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                                Object {
                                  "id": "h",
                                  "name": "Bottom",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "legendSize",
                            "name": "Legend size",
                            "title": "Legend size",
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "chart_styles",
                        "mapTo": "chartStyles",
                        "name": "Chart styles",
                        "schemas": Array [
                          Object {
                            "component": [Function],
                            "eleType": "buttons",
                            "mapTo": "mode",
                            "name": "Mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "group",
                                  "name": "Group",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "group",
                                  "name": "Group",
                                },
                                Object {
                                  "id": "stack",
                                  "name": "Stack",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "labelSize",
                            "name": "Label size",
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0,
                            "eleType": "slider",
                            "mapTo": "rotateBarLabels",
                            "name": "Rotate bar labels",
                            "props": Object {
                              "max": 90,
                              "min": -90,
                              "showTicks": true,
                              "ticks": Array [
                                Object {
                                  "label": "-90°",
                                  "value": -90,
                                },
                                Object {
                                  "label": "-45°",
                                  "value": -45,
                                },
                                Object {
                                  "label": "0°",
                                  "value": 0,
                                },
                                Object {
                                  "label": "45°",
                                  "value": 45,
                                },
                                Object {
                                  "label": "90°",
                                  "value": 90,
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0.7,
                            "eleType": "slider",
                            "mapTo": "groupWidth",
                            "name": "Group width",
                            "props": Object {
                              "max": 1,
                              "step": 0.01,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0.97,
                            "eleType": "slider",
                            "mapTo": "barWidth",
                            "name": "Bar width",
                            "props": Object {
                              "max": 1,
                              "step": 0.01,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 2,
                            "eleType": "slider",
                            "mapTo": "lineWidth",
                            "name": "Line width",
                            "props": Object {
                              "max": 10,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 70,
                            "eleType": "slider",
                            "mapTo": "fillOpacity",
                            "name": "Fill opacity",
                            "props": Object {
                              "max": 100,
                            },
                          },
                        ],
                      },
                    ],
                  },
                  Object {
                    "editor": [Function],
                    "id": "availability-panel",
                    "mapTo": "availabilityConfig",
                    "name": "Availability",
                  },
                ],
              },
              "fillopacity": 70,
              "fulllabel": "Vertical bar",
              "groupwidth": 0.7,
              "icon": [Function],
              "iconType": "visBarVerticalStacked",
              "icontype": "visBarVerticalStacked",
              "id": "bar",
              "label": "Vertical bar",
              "labelangle": 0,
              "legendposition": "v",
              "linewidth": 2,
              "mode": "group",
              "name": "bar",
              "orientation": "v",
              "selection": Object {
                "dataLoss": "nothing",
              },
              "seriesaxis": "yaxis",
              "showlegend": "show",
              "type": "bar",
              "visconfig": Object {
                "config": Object {
                  "displaylogo": false,
                  "responsive": true,
                },
                "isUniColor": false,
                "layout": Object {
                  "height": 1180,
                  "legend": Object {
                    "orientation": "v",
                    "traceorder": "normal",
                  },
                  "margin": Object {
                    "b": 30,
                    "l": 60,
                    "pad": 0,
                    "r": 30,
                    "t": 50,
                  },
                  "showlegend": true,
                },
              },
            },
            Object {
              "barwidth": 0.97,
              "category": "Visualizations",
              "categoryaxis": "xaxis",
              "component": [Function],
              "editorconfig": Object {
                "panelTabs": Array [
                  Object {
                    "editor": [Function],
                    "id": "data-panel",
                    "mapTo": "dataConfig",
                    "name": "Style",
                    "sections": Array [
                      Object {
                        "editor": [Function],
                        "id": "tooltip_options",
                        "mapTo": "tooltipOptions",
                        "name": "Tooltip options",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "tooltipMode",
                            "name": "Tooltip mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "tooltipText",
                            "name": "Tooltip text",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                                Object {
                                  "id": "x",
                                  "name": "Dimension",
                                },
                                Object {
                                  "id": "y",
                                  "name": "Series",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "legend",
                        "mapTo": "legend",
                        "name": "Legend",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "showLegend",
                            "name": "Show legend",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "position",
                            "name": "Position",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                                Object {
                                  "id": "h",
                                  "name": "Bottom",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "legendSize",
                            "name": "Legend size",
                            "title": "Legend size",
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "chart_styles",
                        "mapTo": "chartStyles",
                        "name": "Chart styles",
                        "schemas": Array [
                          Object {
                            "component": [Function],
                            "eleType": "buttons",
                            "mapTo": "mode",
                            "name": "Mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "group",
                                  "name": "Group",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "group",
                                  "name": "Group",
                                },
                                Object {
                                  "id": "stack",
                                  "name": "Stack",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "labelSize",
                            "name": "Label size",
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0,
                            "eleType": "slider",
                            "mapTo": "rotateBarLabels",
                            "name": "Rotate bar labels",
                            "props": Object {
                              "max": 90,
                              "min": -90,
                              "showTicks": true,
                              "ticks": Array [
                                Object {
                                  "label": "-90°",
                                  "value": -90,
                                },
                                Object {
                                  "label": "-45°",
                                  "value": -45,
                                },
                                Object {
                                  "label": "0°",
                                  "value": 0,
                                },
                                Object {
                                  "label": "45°",
                                  "value": 45,
                                },
                                Object {
                                  "label": "90°",
                                  "value": 90,
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0.7,
                            "eleType": "slider",
                            "mapTo": "groupWidth",
                            "name": "Group width",
                            "props": Object {
                              "max": 1,
                              "step": 0.01,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0.97,
                            "eleType": "slider",
                            "mapTo": "barWidth",
                            "name": "Bar width",
                            "props": Object {
                              "max": 1,
                              "step": 0.01,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 2,
                            "eleType": "slider",
                            "mapTo": "lineWidth",
                            "name": "Line width",
                            "props": Object {
                              "max": 10,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 70,
                            "eleType": "slider",
                            "mapTo": "fillOpacity",
                            "name": "Fill opacity",
                            "props": Object {
                              "max": 100,
                            },
                          },
                        ],
                      },
                    ],
                  },
                  Object {
                    "editor": [Function],
                    "id": "availability-panel",
                    "mapTo": "availabilityConfig",
                    "name": "Availability",
                  },
                ],
              },
              "fillopacity": 70,
              "fulllabel": "Horizontal bar",
              "groupwidth": 0.7,
              "icon": [Function],
              "icontype": "visBarHorizontalStacked",
              "id": "horizontal_bar",
              "label": "Horizontal bar",
              "labelangle": 0,
              "legendposition": "v",
              "linewidth": 2,
              "mode": "group",
              "name": "horizontal_bar",
              "orientation": "h",
              "selection": Object {
                "dataLoss": "nothing",
              },
              "seriesaxis": "yaxis",
              "showlegend": "show",
              "type": "bar",
              "visconfig": Object {
                "config": Object {
                  "displaylogo": false,
                  "responsive": true,
                },
                "isUniColor": false,
                "layout": Object {
                  "height": 1180,
                  "legend": Object {
                    "orientation": "v",
                    "traceorder": "normal",
                  },
                  "margin": Object {
                    "b": 30,
                    "l": 60,
                    "pad": 0,
                    "r": 30,
                    "t": 50,
                  },
                  "showlegend": true,
                },
              },
            },
            Object {
              "category": "Visualizations",
              "categoryaxis": "xaxis",
              "component": [Function],
              "editorconfig": Object {
                "panelTabs": Array [
                  Object {
                    "editor": [Function],
                    "id": "data-panel",
                    "mapTo": "dataConfig",
                    "name": "Style",
                    "sections": Array [
                      Object {
                        "editor": [Function],
                        "id": "legend",
                        "mapTo": "legend",
                        "name": "Legend",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "showLegend",
                            "name": "Show legend",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "position",
                            "name": "Position",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                                Object {
                                  "id": "h",
                                  "name": "Bottom",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "legendSize",
                            "name": "Legend size",
                            "title": "Legend size",
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "tooltip_options",
                        "mapTo": "tooltipOptions",
                        "name": "Tooltip options",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "tooltipMode",
                            "name": "Tooltip mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "tooltipText",
                            "name": "Tooltip text",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                                Object {
                                  "id": "x",
                                  "name": "Dimension",
                                },
                                Object {
                                  "id": "y",
                                  "name": "Series",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "chart_styles",
                        "mapTo": "chartStyles",
                        "name": "Chart styles",
                        "schemas": Array [
                          Object {
                            "component": [Function],
                            "eleType": "buttons",
                            "mapTo": "style",
                            "name": "Mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "lines",
                                  "name": "Lines",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "lines",
                                  "name": "Lines",
                                },
                                Object {
                                  "id": "markers",
                                  "name": "Marker",
                                },
                                Object {
                                  "id": "lines+markers",
                                  "name": "Lines + Markers",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "buttons",
                            "mapTo": "interpolation",
                            "name": "Interpolation",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "spline",
                                  "name": "Smooth",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "linear",
                                  "name": "Linear",
                                },
                                Object {
                                  "id": "spline",
                                  "name": "Smooth",
                                },
                                Object {
                                  "id": "hv",
                                  "name": "Step before",
                                },
                                Object {
                                  "id": "vh",
                                  "name": "Step after",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 2,
                            "eleType": "slider",
                            "mapTo": "lineWidth",
                            "name": "Line width",
                            "props": Object {
                              "max": 10,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 70,
                            "eleType": "slider",
                            "mapTo": "fillOpacity",
                            "name": "Fill opacity",
                            "props": Object {
                              "max": 100,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 5,
                            "eleType": "slider",
                            "mapTo": "pointSize",
                            "name": "Point size",
                            "props": Object {
                              "max": 40,
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "labelSize",
                            "name": "Label size",
                            "title": "Label size",
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0,
                            "eleType": "slider",
                            "mapTo": "rotateLabels",
                            "name": "Rotate labels",
                            "props": Object {
                              "max": 90,
                              "min": -90,
                              "showTicks": true,
                              "ticks": Array [
                                Object {
                                  "label": "-90°",
                                  "value": -90,
                                },
                                Object {
                                  "label": "-45°",
                                  "value": -45,
                                },
                                Object {
                                  "label": "0°",
                                  "value": 0,
                                },
                                Object {
                                  "label": "45°",
                                  "value": 45,
                                },
                                Object {
                                  "label": "90°",
                                  "value": 90,
                                },
                              ],
                            },
                          },
                        ],
                      },
                      Object {
                        "defaultState": Array [],
                        "editor": [Function],
                        "id": "thresholds",
                        "mapTo": "thresholds",
                        "name": "Thresholds",
                        "schemas": Array [],
                      },
                    ],
                  },
                  Object {
                    "editor": [Function],
                    "id": "availability-panel",
                    "mapTo": "availabilityConfig",
                    "name": "Availability",
                  },
                ],
              },
              "fulllabel": "Time series",
              "icon": [Function],
              "icontype": "visLine",
              "id": "line",
              "label": "Time series",
              "name": "line",
              "selection": Object {
                "dataLoss": "nothing",
              },
              "seriesaxis": "yaxis",
              "type": "line",
              "visconfig": Object {
                "config": Object {
                  "barmode": "line",
                  "displaylogo": false,
                  "responsive": true,
                  "xaxis": Object {
                    "automargin": true,
                  },
                  "yaxis": Object {
                    "automargin": true,
                  },
                },
                "layout": Object {
                  "colorway": Array [
                    "#3CA1C7",
                    "#8C55A3",
                    "#DB748A",
                    "#F2BE4B",
                    "#68CCC2",
                    "#2A7866",
                    "#843769",
                    "#374FB8",
                    "#BD6F26",
                    "#4C636F",
                  ],
                  "height": 1180,
                  "legend": Object {
                    "orientation": "v",
                    "traceorder": "normal",
                  },
                  "margin": Object {
                    "b": 30,
                    "l": 60,
                    "pad": 0,
                    "r": 30,
                    "t": 50,
                  },
                  "paper_bgcolor": "rgba(0, 0, 0, 0)",
                  "plot_bgcolor": "rgba(0, 0, 0, 0)",
                  "showlegend": true,
                  "xaxis": Object {
                    "fixedrange": true,
                    "showgrid": false,
                    "visible": true,
                  },
                  "yaxis": Object {
                    "fixedrange": true,
                    "showgrid": false,
                    "visible": true,
                  },
                },
              },
            },
            Object {
              "category": "Visualizations",
              "categoryaxis": "xaxis",
              "component": [Function],
              "editorconfig": Object {
                "panelTabs": Array [
                  Object {
                    "editor": [Function],
                    "id": "data-panel",
                    "mapTo": "dataConfig",
                    "name": "Style",
                    "sections": Array [
                      Object {
                        "editor": [Function],
                        "id": "legend",
                        "mapTo": "legend",
                        "name": "Legend",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "showLegend",
                            "name": "Show legend",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "position",
                            "name": "Position",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                                Object {
                                  "id": "h",
                                  "name": "Bottom",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "size",
                            "name": "Legend size",
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "tooltip_options",
                        "mapTo": "tooltipOptions",
                        "name": "Tooltip options",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "tooltipMode",
                            "name": "Tooltip mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "tooltipText",
                            "name": "Tooltip text",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                                Object {
                                  "id": "label",
                                  "name": "Label",
                                },
                                Object {
                                  "id": "value",
                                  "name": "Value",
                                },
                                Object {
                                  "id": "percent",
                                  "name": "Percent",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "chart_styles",
                        "mapTo": "chartStyles",
                        "name": "Chart styles",
                        "schemas": Array [
                          Object {
                            "component": [Function],
                            "eleType": "buttons",
                            "isSingleSelection": true,
                            "mapTo": "mode",
                            "name": "Mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "pie",
                                  "name": "Pie",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "pie",
                                  "name": "Pie",
                                },
                                Object {
                                  "id": "donut",
                                  "name": "Donut",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "labelSize",
                            "name": "Label size",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              "fulllabel": "Pie",
              "icon": [Function],
              "icontype": "visPie",
              "id": "pie",
              "label": "Pie",
              "legendposition": "v",
              "mode": "pie",
              "name": "pie",
              "seriesaxis": "yaxis",
              "showlegend": "show",
              "type": "pie",
              "visconfig": Object {
                "config": Object {
                  "displaylogo": false,
                  "responsive": true,
                },
                "layout": Object {
                  "colorway": Array [
                    "#3CA1C7",
                    "#8C55A3",
                    "#DB748A",
                    "#F2BE4B",
                    "#68CCC2",
                    "#2A7866",
                    "#843769",
                    "#374FB8",
                    "#BD6F26",
                    "#4C636F",
                  ],
                  "height": 1180,
                  "legend": Object {
                    "orientation": "v",
                    "traceorder": "normal",
                  },
                  "margin": Object {
                    "b": 30,
                    "l": 60,
                    "pad": 0,
                    "r": 30,
                    "t": 50,
                  },
                  "paper_bgcolor": "rgba(0, 0, 0, 0)",
                  "plot_bgcolor": "rgba(0, 0, 0, 0)",
                  "showlegend": true,
                  "xaxis": Object {
                    "fixedrange": true,
                    "showgrid": false,
                    "visible": true,
                  },
                  "yaxis": Object {
                    "fixedrange": true,
                    "showgrid": false,
                    "visible": true,
                  },
                },
              },
            },
            Object {
              "category": "Visualizations",
              "component": [Function],
              "editorconfig": Object {
                "panelTabs": Array [
                  Object {
                    "editor": [Function],
                    "id": "data-panel",
                    "mapTo": "dataConfig",
                    "name": "Style",
                    "sections": Array [
                      Object {
                        "editor": [Function],
                        "id": "tooltip_options",
                        "mapTo": "tooltipOptions",
                        "name": "Tooltip options",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "tooltipMode",
                            "name": "Tooltip mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "tooltipText",
                            "name": "Tooltip text",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                                Object {
                                  "id": "x",
                                  "name": "Dim 1",
                                },
                                Object {
                                  "id": "y",
                                  "name": "Dim 2",
                                },
                                Object {
                                  "id": "z",
                                  "name": "Metrics",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "legend",
                        "mapTo": "legend",
                        "name": "Legend",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "showLegend",
                            "name": "Show colorscale",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "chart_styles",
                        "mapTo": "chartStyles",
                        "name": "Chart styles",
                        "schemas": Array [
                          Object {
                            "component": [Function],
                            "defaultState": Array [
                              Object {
                                "label": "spectrum",
                                "name": "spectrum",
                                "value": "spectrum",
                              },
                            ],
                            "eleType": "list",
                            "isSingleSelection": true,
                            "mapTo": "colorMode",
                            "name": "Color mode",
                            "options": Array [
                              Object {
                                "label": "spectrum",
                                "name": "spectrum",
                                "value": "spectrum",
                              },
                              Object {
                                "label": "opacity",
                                "name": "opacity",
                                "value": "opacity",
                              },
                            ],
                            "props": Object {
                              "isClearable": false,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": Object {
                              "color": "Reds",
                              "name": "Reds",
                            },
                            "eleType": "palettePicker",
                            "mapTo": "scheme",
                            "name": "Scheme",
                            "options": Array [
                              Object {
                                "palette": Array [
                                  "#050aac",
                                  "#161cb2",
                                  "#2029ba",
                                  "#2835c2",
                                  "#303fca",
                                  "#384ad3",
                                  "#4054db",
                                  "#495ee2",
                                  "#5368e9",
                                  "#5f72ed",
                                  "#6b7df0",
                                  "#7887f0",
                                  "#8692f0",
                                  "#939cee",
                                  "#a0a6ec",
                                  "#adb1ea",
                                  "#b9bce7",
                                  "#c5c6e3",
                                  "#d1d1e0",
                                  "#dcdcdc",
                                ],
                                "title": "Blues",
                                "type": "gradient",
                                "value": "Blues",
                              },
                              Object {
                                "palette": Array [
                                  "#dcdcdc",
                                  "#e8d0c1",
                                  "#edc6ad",
                                  "#efbb9c",
                                  "#efb18e",
                                  "#eea782",
                                  "#eb9e77",
                                  "#e9946d",
                                  "#e68b64",
                                  "#e2815c",
                                  "#de7854",
                                  "#da6e4c",
                                  "#d56545",
                                  "#d15b3e",
                                  "#cc5138",
                                  "#c74632",
                                  "#c23b2c",
                                  "#bd2f26",
                                  "#b72021",
                                  "#b20a1c",
                                ],
                                "title": "Reds",
                                "type": "gradient",
                                "value": "Reds",
                              },
                              Object {
                                "palette": Array [
                                  "#00441b",
                                  "#014e1f",
                                  "#035825",
                                  "#09622a",
                                  "#116d31",
                                  "#1b7738",
                                  "#25823f",
                                  "#308c48",
                                  "#3c9650",
                                  "#49a15a",
                                  "#57ab64",
                                  "#66b56f",
                                  "#76bf7b",
                                  "#86c888",
                                  "#98d296",
                                  "#aadba6",
                                  "#bde4b8",
                                  "#d0ecca",
                                  "#e3f4df",
                                  "#f7fcf5",
                                ],
                                "title": "Greens",
                                "type": "gradient",
                                "value": "Greens",
                              },
                              Object {
                                "palette": Array [
                                  "#000000",
                                  "#121212",
                                  "#1d1d1d",
                                  "#272727",
                                  "#333333",
                                  "#3e3e3e",
                                  "#4a4a4a",
                                  "#575757",
                                  "#636363",
                                  "#707070",
                                  "#7e7e7e",
                                  "#8b8b8b",
                                  "#999999",
                                  "#a7a7a7",
                                  "#b5b5b5",
                                  "#c3c3c3",
                                  "#d2d2d2",
                                  "#e1e1e1",
                                  "#f0f0f0",
                                  "#ffffff",
                                ],
                                "title": "Greys",
                                "type": "gradient",
                                "value": "Greys",
                              },
                              Object {
                                "palette": Array [
                                  "#0000ff",
                                  "#3e00f7",
                                  "#5800ee",
                                  "#6c00e4",
                                  "#7c00db",
                                  "#8a00d1",
                                  "#9600c6",
                                  "#a200bb",
                                  "#ac00b0",
                                  "#b600a4",
                                  "#bf0098",
                                  "#c8008b",
                                  "#d0007e",
                                  "#d80071",
                                  "#df0062",
                                  "#e60054",
                                  "#ed0045",
                                  "#f30034",
                                  "#f90021",
                                  "#ff0000",
                                ],
                                "title": "Blue-Red",
                                "type": "gradient",
                                "value": "Bluered",
                              },
                              Object {
                                "palette": Array [
                                  "#050aac",
                                  "#2522b6",
                                  "#3835c0",
                                  "#4946c8",
                                  "#5957cf",
                                  "#6967d4",
                                  "#7978d7",
                                  "#8a89d7",
                                  "#9a9bd4",
                                  "#acaccd",
                                  "#df9b70",
                                  "#dd8e62",
                                  "#da8056",
                                  "#d6734c",
                                  "#d16542",
                                  "#cb583a",
                                  "#c54931",
                                  "#bf3a2a",
                                  "#b92723",
                                  "#b20a1c",
                                ],
                                "title": "Red-Blue",
                                "type": "gradient",
                                "value": "RdBu",
                              },
                              Object {
                                "palette": Array [
                                  "#800026",
                                  "#910126",
                                  "#a10526",
                                  "#b10e26",
                                  "#c01b26",
                                  "#cd2926",
                                  "#d83728",
                                  "#e2472a",
                                  "#ea572e",
                                  "#f16732",
                                  "#f67738",
                                  "#fa8740",
                                  "#fd9849",
                                  "#ffa753",
                                  "#ffb760",
                                  "#ffc76f",
                                  "#ffd681",
                                  "#ffe496",
                                  "#fff2af",
                                  "#ffffcc",
                                ],
                                "title": "Yellow-Orange-Red",
                                "type": "gradient",
                                "value": "YlOrRd",
                              },
                              Object {
                                "palette": Array [
                                  "#081d58",
                                  "#11256a",
                                  "#182f79",
                                  "#1e3b86",
                                  "#234791",
                                  "#28539a",
                                  "#2e60a2",
                                  "#346da9",
                                  "#3b7aaf",
                                  "#4488b4",
                                  "#4f95b7",
                                  "#5ba2ba",
                                  "#6aafbc",
                                  "#7bbcbe",
                                  "#8dc8bf",
                                  "#a2d4c1",
                                  "#b7e0c4",
                                  "#ceebc9",
                                  "#e6f5d0",
                                  "#ffffd9",
                                ],
                                "title": "Yellow-Green-Blue",
                                "type": "gradient",
                                "value": "YlGnBu",
                              },
                            ],
                          },
                          Object {
                            "component": [Function],
                            "defaultState": Object {
                              "color": "#000000",
                              "name": "singleColor",
                            },
                            "eleType": "singleColorPicker",
                            "mapTo": "color",
                            "name": "Color",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              "fulllabel": "Hubble",
              "icon": [Function],
              "icontype": "heatmap",
              "id": "heatmap",
              "label": "Heatmap",
              "name": "heatmap",
              "selection": Object {
                "dataLoss": "nothing",
              },
              "type": "heatmap",
              "visconfig": Object {
                "config": Object {
                  "displaylogo": false,
                  "responsive": true,
                },
                "layout": Object {
                  "height": 1180,
                  "legend": Object {
                    "orientation": "v",
                    "traceorder": "normal",
                  },
                  "margin": Object {
                    "left": 60,
                  },
                  "paper_bgcolor": "rgba(0, 0, 0, 0)",
                  "plot_bgcolor": "rgba(0, 0, 0, 0)",
                  "showlegend": true,
                },
              },
            },
            Object {
              "category": "Visualizations",
              "categoryaxis": "xaxis",
              "component": [Function],
              "editorconfig": Object {
                "panelTabs": Array [
                  Object {
                    "editor": [Function],
                    "id": "data-panel",
                    "mapTo": "dataConfig",
                    "name": "Style",
                    "sections": Array [
                      Object {
                        "editor": [Function],
                        "id": "text_editor",
                        "mapTo": "text",
                        "name": "Text",
                        "schemas": Array [],
                      },
                    ],
                  },
                ],
              },
              "fulllabel": "Markdown",
              "icon": [Function],
              "icontype": "visText",
              "id": "text",
              "label": "Markdown",
              "name": "text",
              "selection": Object {
                "dataLoss": "nothing",
              },
              "seriesaxis": "yaxis",
              "type": "text",
              "visconfig": Object {
                "config": Object {
                  "barmode": "line",
                  "displaylogo": false,
                  "responsive": true,
                  "xaxis": Object {
                    "automargin": true,
                  },
                  "yaxis": Object {
                    "automargin": true,
                  },
                },
                "layout": Object {
                  "colorway": Array [
                    "#3CA1C7",
                    "#8C55A3",
                    "#DB748A",
                    "#F2BE4B",
                    "#68CCC2",
                    "#2A7866",
                    "#843769",
                    "#374FB8",
                    "#BD6F26",
                    "#4C636F",
                  ],
                  "height": 1180,
                  "legend": Object {
                    "orientation": "v",
                    "traceorder": "normal",
                  },
                  "margin": Object {
                    "b": 30,
                    "l": 60,
                    "pad": 0,
                    "r": 30,
                    "t": 50,
                  },
                  "paper_bgcolor": "rgba(0, 0, 0, 0)",
                  "plot_bgcolor": "rgba(0, 0, 0, 0)",
                  "showlegend": true,
                  "xaxis": Object {
                    "fixedrange": true,
                    "showgrid": false,
                    "visible": true,
                  },
                  "yaxis": Object {
                    "fixedrange": true,
                    "showgrid": false,
                    "visible": true,
                  },
                },
              },
            },
          ]
        }
        placeholder="Select a chart"
        renderOption={[Function]}
        selectedOptions={
          Array [
            Object {
              "barwidth": 0.97,
              "category": "Visualizations",
              "categoryaxis": "xaxis",
              "component": [Function],
              "editorconfig": Object {
                "panelTabs": Array [
                  Object {
                    "editor": [Function],
                    "id": "data-panel",
                    "mapTo": "dataConfig",
                    "name": "Style",
                    "sections": Array [
                      Object {
                        "editor": [Function],
                        "id": "tooltip_options",
                        "mapTo": "tooltipOptions",
                        "name": "Tooltip options",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "tooltipMode",
                            "name": "Tooltip mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "tooltipText",
                            "name": "Tooltip text",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                                Object {
                                  "id": "x",
                                  "name": "Dimension",
                                },
                                Object {
                                  "id": "y",
                                  "name": "Series",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "legend",
                        "mapTo": "legend",
                        "name": "Legend",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "showLegend",
                            "name": "Show legend",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "position",
                            "name": "Position",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                                Object {
                                  "id": "h",
                                  "name": "Bottom",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "legendSize",
                            "name": "Legend size",
                            "title": "Legend size",
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "chart_styles",
                        "mapTo": "chartStyles",
                        "name": "Chart styles",
                        "schemas": Array [
                          Object {
                            "component": [Function],
                            "eleType": "buttons",
                            "mapTo": "mode",
                            "name": "Mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "group",
                                  "name": "Group",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "group",
                                  "name": "Group",
                                },
                                Object {
                                  "id": "stack",
                                  "name": "Stack",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "labelSize",
                            "name": "Label size",
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0,
                            "eleType": "slider",
                            "mapTo": "rotateBarLabels",
                            "name": "Rotate bar labels",
                            "props": Object {
                              "max": 90,
                              "min": -90,
                              "showTicks": true,
                              "ticks": Array [
                                Object {
                                  "label": "-90°",
                                  "value": -90,
                                },
                                Object {
                                  "label": "-45°",
                                  "value": -45,
                                },
                                Object {
                                  "label": "0°",
                                  "value": 0,
                                },
                                Object {
                                  "label": "45°",
                                  "value": 45,
                                },
                                Object {
                                  "label": "90°",
                                  "value": 90,
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0.7,
                            "eleType": "slider",
                            "mapTo": "groupWidth",
                            "name": "Group width",
                            "props": Object {
                              "max": 1,
                              "step": 0.01,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0.97,
                            "eleType": "slider",
                            "mapTo": "barWidth",
                            "name": "Bar width",
                            "props": Object {
                              "max": 1,
                              "step": 0.01,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 2,
                            "eleType": "slider",
                            "mapTo": "lineWidth",
                            "name": "Line width",
                            "props": Object {
                              "max": 10,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 70,
                            "eleType": "slider",
                            "mapTo": "fillOpacity",
                            "name": "Fill opacity",
                            "props": Object {
                              "max": 100,
                            },
                          },
                        ],
                      },
                    ],
                  },
                  Object {
                    "editor": [Function],
                    "id": "availability-panel",
                    "mapTo": "availabilityConfig",
                    "name": "Availability",
                  },
                ],
              },
              "fillopacity": 70,
              "fulllabel": "Vertical bar",
              "groupwidth": 0.7,
              "icon": [Function],
              "iconType": "visBarVerticalStacked",
              "icontype": "visBarVerticalStacked",
              "id": "bar",
              "label": "Vertical bar",
              "labelangle": 0,
              "legendposition": "v",
              "linewidth": 2,
              "mode": "group",
              "name": "bar",
              "orientation": "v",
              "selection": Object {
                "dataLoss": "nothing",
              },
              "seriesaxis": "yaxis",
              "showlegend": "show",
              "type": "bar",
              "visconfig": Object {
                "config": Object {
                  "displaylogo": false,
                  "responsive": true,
                },
                "isUniColor": false,
                "layout": Object {
                  "height": 1180,
                  "legend": Object {
                    "orientation": "v",
                    "traceorder": "normal",
                  },
                  "margin": Object {
                    "b": 30,
                    "l": 60,
                    "pad": 0,
                    "r": 30,
                    "t": 50,
                  },
                  "showlegend": true,
                },
              },
            },
          ]
        }
        singleSelection={true}
        sortMatchesBy="none"
      >
        <div
          aria-expanded={false}
          aria-haspopup="listbox"
          aria-label="config chart selector"
          className="euiComboBox euiComboBox--fullWidth"
          onKeyDown={[Function]}
          role="combobox"
        >
          <EuiComboBoxInput
            autoSizeInputRef={[Function]}
            compressed={false}
            fullWidth={true}
            hasSelectedOptions={true}
            inputRef={[Function]}
            isListOpen={false}
            noIcon={false}
            onChange={[Function]}
            onClick={[Function]}
            onCloseListClick={[Function]}
            onFocus={[Function]}
            onOpenListClick={[Function]}
            onRemoveOption={[Function]}
            placeholder="Select a chart"
            rootId={[Function]}
            searchValue=""
            selectedOptions={
              Array [
                Object {
                  "barwidth": 0.97,
                  "category": "Visualizations",
                  "categoryaxis": "xaxis",
                  "component": [Function],
                  "editorconfig": Object {
                    "panelTabs": Array [
                      Object {
                        "editor": [Function],
                        "id": "data-panel",
                        "mapTo": "dataConfig",
                        "name": "Style",
                        "sections": Array [
                          Object {
                            "editor": [Function],
                            "id": "tooltip_options",
                            "mapTo": "tooltipOptions",
                            "name": "Tooltip options",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "mapTo": "tooltipMode",
                                "name": "Tooltip mode",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "id": "show",
                                      "name": "Show",
                                    },
                                  ],
                                  "options": Array [
                                    Object {
                                      "id": "show",
                                      "name": "Show",
                                    },
                                    Object {
                                      "id": "hidden",
                                      "name": "Hidden",
                                    },
                                  ],
                                },
                              },
                              Object {
                                "component": null,
                                "mapTo": "tooltipText",
                                "name": "Tooltip text",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "id": "all",
                                      "name": "All",
                                    },
                                  ],
                                  "options": Array [
                                    Object {
                                      "id": "all",
                                      "name": "All",
                                    },
                                    Object {
                                      "id": "x",
                                      "name": "Dimension",
                                    },
                                    Object {
                                      "id": "y",
                                      "name": "Series",
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          Object {
                            "editor": [Function],
                            "id": "legend",
                            "mapTo": "legend",
                            "name": "Legend",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "mapTo": "showLegend",
                                "name": "Show legend",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "id": "show",
                                      "name": "Show",
                                    },
                                  ],
                                  "options": Array [
                                    Object {
                                      "id": "show",
                                      "name": "Show",
                                    },
                                    Object {
                                      "id": "hidden",
                                      "name": "Hidden",
                                    },
                                  ],
                                },
                              },
                              Object {
                                "component": null,
                                "mapTo": "position",
                                "name": "Position",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "id": "v",
                                      "name": "Right",
                                    },
                                  ],
                                  "options": Array [
                                    Object {
                                      "id": "v",
                                      "name": "Right",
                                    },
                                    Object {
                                      "id": "h",
                                      "name": "Bottom",
                                    },
                                  ],
                                },
                              },
                              Object {
                                "component": [Function],
                                "eleType": "input",
                                "mapTo": "legendSize",
                                "name": "Legend size",
                                "title": "Legend size",
                              },
                            ],
                          },
                          Object {
                            "editor": [Function],
                            "id": "chart_styles",
                            "mapTo": "chartStyles",
                            "name": "Chart styles",
                            "schemas": Array [
                              Object {
                                "component": [Function],
                                "eleType": "buttons",
                                "mapTo": "mode",
                                "name": "Mode",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "id": "group",
                                      "name": "Group",
                                    },
                                  ],
                                  "options": Array [
                                    Object {
                                      "id": "group",
                                      "name": "Group",
                                    },
                                    Object {
                                      "id": "stack",
                                      "name": "Stack",
                                    },
                                  ],
                                },
                              },
                              Object {
                                "component": [Function],
                                "eleType": "input",
                                "mapTo": "labelSize",
                                "name": "Label size",
                              },
                              Object {
                                "component": [Function],
                                "defaultState": 0,
                                "eleType": "slider",
                                "mapTo": "rotateBarLabels",
                                "name": "Rotate bar labels",
                                "props": Object {
                                  "max": 90,
                                  "min": -90,
                                  "showTicks": true,
                                  "ticks": Array [
                                    Object {
                                      "label": "-90°",
                                      "value": -90,
                                    },
                                    Object {
                                      "label": "-45°",
                                      "value": -45,
                                    },
                                    Object {
                                      "label": "0°",
                                      "value": 0,
                                    },
                                    Object {
                                      "label": "45°",
                                      "value": 45,
                                    },
                                    Object {
                                      "label": "90°",
                                      "value": 90,
                                    },
                                  ],
                                },
                              },
                              Object {
                                "component": [Function],
                                "defaultState": 0.7,
                                "eleType": "slider",
                                "mapTo": "groupWidth",
                                "name": "Group width",
                                "props": Object {
                                  "max": 1,
                                  "step": 0.01,
                                },
                              },
                              Object {
                                "component": [Function],
                                "defaultState": 0.97,
                                "eleType": "slider",
                                "mapTo": "barWidth",
                                "name": "Bar width",
                                "props": Object {
                                  "max": 1,
                                  "step": 0.01,
                                },
                              },
                              Object {
                                "component": [Function],
                                "defaultState": 2,
                                "eleType": "slider",
                                "mapTo": "lineWidth",
                                "name": "Line width",
                                "props": Object {
                                  "max": 10,
                                },
                              },
                              Object {
                                "component": [Function],
                                "defaultState": 70,
                                "eleType": "slider",
                                "mapTo": "fillOpacity",
                                "name": "Fill opacity",
                                "props": Object {
                                  "max": 100,
                                },
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "availability-panel",
                        "mapTo": "availabilityConfig",
                        "name": "Availability",
                      },
                    ],
                  },
                  "fillopacity": 70,
                  "fulllabel": "Vertical bar",
                  "groupwidth": 0.7,
                  "icon": [Function],
                  "iconType": "visBarVerticalStacked",
                  "icontype": "visBarVerticalStacked",
                  "id": "bar",
                  "label": "Vertical bar",
                  "labelangle": 0,
                  "legendposition": "v",
                  "linewidth": 2,
                  "mode": "group",
                  "name": "bar",
                  "orientation": "v",
                  "selection": Object {
                    "dataLoss": "nothing",
                  },
                  "seriesaxis": "yaxis",
                  "showlegend": "show",
                  "type": "bar",
                  "visconfig": Object {
                    "config": Object {
                      "displaylogo": false,
                      "responsive": true,
                    },
                    "isUniColor": false,
                    "layout": Object {
                      "height": 1180,
                      "legend": Object {
                        "orientation": "v",
                        "traceorder": "normal",
                      },
                      "margin": Object {
                        "b": 30,
                        "l": 60,
                        "pad": 0,
                        "r": 30,
                        "t": 50,
                      },
                      "showlegend": true,
                    },
                  },
                },
              ]
            }
            singleSelection={true}
            toggleButtonRef={[Function]}
            updatePosition={[Function]}
            value="Vertical bar"
          >
            <EuiFormControlLayout
              compressed={false}
              fullWidth={true}
              icon={
                Object {
                  "aria-label": "Open list of options",
                  "data-test-subj": "comboBoxToggleListButton",
                  "disabled": undefined,
                  "onClick": [Function],
                  "ref": [Function],
                  "side": "right",
                  "type": "arrowDown",
                }
              }
            >
              <div
                className="euiFormControlLayout euiFormControlLayout--fullWidth"
              >
                <div
                  className="euiFormControlLayout__childrenWrapper"
                >
                  <div
                    className="euiComboBox__inputWrap euiComboBox__inputWrap--fullWidth euiComboBox__inputWrap--noWrap"
                    data-test-subj="comboBoxInput"
                    onClick={[Function]}
                    tabIndex={-1}
                  >
                    <EuiComboBoxPill
                      asPlainText={false}
                      barwidth={0.97}
                      category="Visualizations"
                      categoryaxis="xaxis"
                      color="hollow"
                      component={[Function]}
                      editorconfig={
                        Object {
                          "panelTabs": Array [
                            Object {
                              "editor": [Function],
                              "id": "data-panel",
                              "mapTo": "dataConfig",
                              "name": "Style",
                              "sections": Array [
                                Object {
                                  "editor": [Function],
                                  "id": "tooltip_options",
                                  "mapTo": "tooltipOptions",
                                  "name": "Tooltip options",
                                  "schemas": Array [
                                    Object {
                                      "component": null,
                                      "mapTo": "tooltipMode",
                                      "name": "Tooltip mode",
                                      "props": Object {
                                        "defaultSelections": Array [
                                          Object {
                                            "id": "show",
                                            "name": "Show",
                                          },
                                        ],
                                        "options": Array [
                                          Object {
                                            "id": "show",
                                            "name": "Show",
                                          },
                                          Object {
                                            "id": "hidden",
                                            "name": "Hidden",
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "component": null,
                                      "mapTo": "tooltipText",
                                      "name": "Tooltip text",
                                      "props": Object {
                                        "defaultSelections": Array [
                                          Object {
                                            "id": "all",
                                            "name": "All",
                                          },
                                        ],
                                        "options": Array [
                                          Object {
                                            "id": "all",
                                            "name": "All",
                                          },
                                          Object {
                                            "id": "x",
                                            "name": "Dimension",
                                          },
                                          Object {
                                            "id": "y",
                                            "name": "Series",
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                                Object {
                                  "editor": [Function],
                                  "id": "legend",
                                  "mapTo": "legend",
                                  "name": "Legend",
                                  "schemas": Array [
                                    Object {
                                      "component": null,
                                      "mapTo": "showLegend",
                                      "name": "Show legend",
                                      "props": Object {
                                        "defaultSelections": Array [
                                          Object {
                                            "id": "show",
                                            "name": "Show",
                                          },
                                        ],
                                        "options": Array [
                                          Object {
                                            "id": "show",
                                            "name": "Show",
                                          },
                                          Object {
                                            "id": "hidden",
                                            "name": "Hidden",
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "component": null,
                                      "mapTo": "position",
                                      "name": "Position",
                                      "props": Object {
                                        "defaultSelections": Array [
                                          Object {
                                            "id": "v",
                                            "name": "Right",
                                          },
                                        ],
                                        "options": Array [
                                          Object {
                                            "id": "v",
                                            "name": "Right",
                                          },
                                          Object {
                                            "id": "h",
                                            "name": "Bottom",
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "component": [Function],
                                      "eleType": "input",
                                      "mapTo": "legendSize",
                                      "name": "Legend size",
                                      "title": "Legend size",
                                    },
                                  ],
                                },
                                Object {
                                  "editor": [Function],
                                  "id": "chart_styles",
                                  "mapTo": "chartStyles",
                                  "name": "Chart styles",
                                  "schemas": Array [
                                    Object {
                                      "component": [Function],
                                      "eleType": "buttons",
                                      "mapTo": "mode",
                                      "name": "Mode",
                                      "props": Object {
                                        "defaultSelections": Array [
                                          Object {
                                            "id": "group",
                                            "name": "Group",
                                          },
                                        ],
                                        "options": Array [
                                          Object {
                                            "id": "group",
                                            "name": "Group",
                                          },
                                          Object {
                                            "id": "stack",
                                            "name": "Stack",
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "component": [Function],
                                      "eleType": "input",
                                      "mapTo": "labelSize",
                                      "name": "Label size",
                                    },
                                    Object {
                                      "component": [Function],
                                      "defaultState": 0,
                                      "eleType": "slider",
                                      "mapTo": "rotateBarLabels",
                                      "name": "Rotate bar labels",
                                      "props": Object {
                                        "max": 90,
                                        "min": -90,
                                        "showTicks": true,
                                        "ticks": Array [
                                          Object {
                                            "label": "-90°",
                                            "value": -90,
                                          },
                                          Object {
                                            "label": "-45°",
                                            "value": -45,
                                          },
                                          Object {
                                            "label": "0°",
                                            "value": 0,
                                          },
                                          Object {
                                            "label": "45°",
                                            "value": 45,
                                          },
                                          Object {
                                            "label": "90°",
                                            "value": 90,
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "component": [Function],
                                      "defaultState": 0.7,
                                      "eleType": "slider",
                                      "mapTo": "groupWidth",
                                      "name": "Group width",
                                      "props": Object {
                                        "max": 1,
                                        "step": 0.01,
                                      },
                                    },
                                    Object {
                                      "component": [Function],
                                      "defaultState": 0.97,
                                      "eleType": "slider",
                                      "mapTo": "barWidth",
                                      "name": "Bar width",
                                      "props": Object {
                                        "max": 1,
                                        "step": 0.01,
                                      },
                                    },
                                    Object {
                                      "component": [Function],
                                      "defaultState": 2,
                                      "eleType": "slider",
                                      "mapTo": "lineWidth",
                                      "name": "Line width",
                                      "props": Object {
                                        "max": 10,
                                      },
                                    },
                                    Object {
                                      "component": [Function],
                                      "defaultState": 70,
                                      "eleType": "slider",
                                      "mapTo": "fillOpacity",
                                      "name": "Fill opacity",
                                      "props": Object {
                                        "max": 100,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            Object {
                              "editor": [Function],
                              "id": "availability-panel",
                              "mapTo": "availabilityConfig",
                              "name": "Availability",
                            },
                          ],
                        }
                      }
                      fillopacity={70}
                      fulllabel="Vertical bar"
                      groupwidth={0.7}
                      icon={[Function]}
                      iconType="visBarVerticalStacked"
                      icontype="visBarVerticalStacked"
                      id="bar"
                      key="vertical bar"
                      labelangle={0}
                      legendposition="v"
                      linewidth={2}
                      mode="group"
                      name="bar"
                      option={
                        Object {
                          "barwidth": 0.97,
                          "category": "Visualizations",
                          "categoryaxis": "xaxis",
                          "component": [Function],
                          "editorconfig": Object {
                            "panelTabs": Array [
                              Object {
                                "editor": [Function],
                                "id": "data-panel",
                                "mapTo": "dataConfig",
                                "name": "Style",
                                "sections": Array [
                                  Object {
                                    "editor": [Function],
                                    "id": "tooltip_options",
                                    "mapTo": "tooltipOptions",
                                    "name": "Tooltip options",
                                    "schemas": Array [
                                      Object {
                                        "component": null,
                                        "mapTo": "tooltipMode",
                                        "name": "Tooltip mode",
                                        "props": Object {
                                          "defaultSelections": Array [
                                            Object {
                                              "id": "show",
                                              "name": "Show",
                                            },
                                          ],
                                          "options": Array [
                                            Object {
                                              "id": "show",
                                              "name": "Show",
                                            },
                                            Object {
                                              "id": "hidden",
                                              "name": "Hidden",
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "component": null,
                                        "mapTo": "tooltipText",
                                        "name": "Tooltip text",
                                        "props": Object {
                                          "defaultSelections": Array [
                                            Object {
                                              "id": "all",
                                              "name": "All",
                                            },
                                          ],
                                          "options": Array [
                                            Object {
                                              "id": "all",
                                              "name": "All",
                                            },
                                            Object {
                                              "id": "x",
                                              "name": "Dimension",
                                            },
                                            Object {
                                              "id": "y",
                                              "name": "Series",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  Object {
                                    "editor": [Function],
                                    "id": "legend",
                                    "mapTo": "legend",
                                    "name": "Legend",
                                    "schemas": Array [
                                      Object {
                                        "component": null,
                                        "mapTo": "showLegend",
                                        "name": "Show legend",
                                        "props": Object {
                                          "defaultSelections": Array [
                                            Object {
                                              "id": "show",
                                              "name": "Show",
                                            },
                                          ],
                                          "options": Array [
                                            Object {
                                              "id": "show",
                                              "name": "Show",
                                            },
                                            Object {
                                              "id": "hidden",
                                              "name": "Hidden",
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "component": null,
                                        "mapTo": "position",
                                        "name": "Position",
                                        "props": Object {
                                          "defaultSelections": Array [
                                            Object {
                                              "id": "v",
                                              "name": "Right",
                                            },
                                          ],
                                          "options": Array [
                                            Object {
                                              "id": "v",
                                              "name": "Right",
                                            },
                                            Object {
                                              "id": "h",
                                              "name": "Bottom",
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "eleType": "input",
                                        "mapTo": "legendSize",
                                        "name": "Legend size",
                                        "title": "Legend size",
                                      },
                                    ],
                                  },
                                  Object {
                                    "editor": [Function],
                                    "id": "chart_styles",
                                    "mapTo": "chartStyles",
                                    "name": "Chart styles",
                                    "schemas": Array [
                                      Object {
                                        "component": [Function],
                                        "eleType": "buttons",
                                        "mapTo": "mode",
                                        "name": "Mode",
                                        "props": Object {
                                          "defaultSelections": Array [
                                            Object {
                                              "id": "group",
                                              "name": "Group",
                                            },
                                          ],
                                          "options": Array [
                                            Object {
                                              "id": "group",
                                              "name": "Group",
                                            },
                                            Object {
                                              "id": "stack",
                                              "name": "Stack",
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "eleType": "input",
                                        "mapTo": "labelSize",
                                        "name": "Label size",
                                      },
                                      Object {
                                        "component": [Function],
                                        "defaultState": 0,
                                        "eleType": "slider",
                                        "mapTo": "rotateBarLabels",
                                        "name": "Rotate bar labels",
                                        "props": Object {
                                          "max": 90,
                                          "min": -90,
                                          "showTicks": true,
                                          "ticks": Array [
                                            Object {
                                              "label": "-90°",
                                              "value": -90,
                                            },
                                            Object {
                                              "label": "-45°",
                                              "value": -45,
                                            },
                                            Object {
                                              "label": "0°",
                                              "value": 0,
                                            },
                                            Object {
                                              "label": "45°",
                                              "value": 45,
                                            },
                                            Object {
                                              "label": "90°",
                                              "value": 90,
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "defaultState": 0.7,
                                        "eleType": "slider",
                                        "mapTo": "groupWidth",
                                        "name": "Group width",
                                        "props": Object {
                                          "max": 1,
                                          "step": 0.01,
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "defaultState": 0.97,
                                        "eleType": "slider",
                                        "mapTo": "barWidth",
                                        "name": "Bar width",
                                        "props": Object {
                                          "max": 1,
                                          "step": 0.01,
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "defaultState": 2,
                                        "eleType": "slider",
                                        "mapTo": "lineWidth",
                                        "name": "Line width",
                                        "props": Object {
                                          "max": 10,
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "defaultState": 70,
                                        "eleType": "slider",
                                        "mapTo": "fillOpacity",
                                        "name": "Fill opacity",
                                        "props": Object {
                                          "max": 100,
                                        },
                                      },
                                    ],
                                  },
                                ],
                              },
                              Object {
                                "editor": [Function],
                                "id": "availability-panel",
                                "mapTo": "availabilityConfig",
                                "name": "Availability",
                              },
                            ],
                          },
                          "fillopacity": 70,
                          "fulllabel": "Vertical bar",
                          "groupwidth": 0.7,
                          "icon": [Function],
                          "iconType": "visBarVerticalStacked",
                          "icontype": "visBarVerticalStacked",
                          "id": "bar",
                          "label": "Vertical bar",
                          "labelangle": 0,
                          "legendposition": "v",
                          "linewidth": 2,
                          "mode": "group",
                          "name": "bar",
                          "orientation": "v",
                          "selection": Object {
                            "dataLoss": "nothing",
                          },
                          "seriesaxis": "yaxis",
                          "showlegend": "show",
                          "type": "bar",
                          "visconfig": Object {
                            "config": Object {
                              "displaylogo": false,
                              "responsive": true,
                            },
                            "isUniColor": false,
                            "layout": Object {
                              "height": 1180,
                              "legend": Object {
                                "orientation": "v",
                                "traceorder": "normal",
                              },
                              "margin": Object {
                                "b": 30,
                                "l": 60,
                                "pad": 0,
                                "r": 30,
                                "t": 50,
                              },
                              "showlegend": true,
                            },
                          },
                        }
                      }
                      orientation="v"
                      selection={
                        Object {
                          "dataLoss": "nothing",
                        }
                      }
                      seriesaxis="yaxis"
                      showlegend="show"
                      type="bar"
                      visconfig={
                        Object {
                          "config": Object {
                            "displaylogo": false,
                            "responsive": true,
                          },
                          "isUniColor": false,
                          "layout": Object {
                            "height": 1180,
                            "legend": Object {
                              "orientation": "v",
                              "traceorder": "normal",
                            },
                            "margin": Object {
                              "b": 30,
                              "l": 60,
                              "pad": 0,
                              "r": 30,
                              "t": 50,
                            },
                            "showlegend": true,
                          },
                        }
                      }
                    >
                      <EuiBadge
                        barwidth={0.97}
                        category="Visualizations"
                        categoryaxis="xaxis"
                        className="euiComboBoxPill"
                        color="hollow"
                        component={[Function]}
                        editorconfig={
                          Object {
                            "panelTabs": Array [
                              Object {
                                "editor": [Function],
                                "id": "data-panel",
                                "mapTo": "dataConfig",
                                "name": "Style",
                                "sections": Array [
                                  Object {
                                    "editor": [Function],
                                    "id": "tooltip_options",
                                    "mapTo": "tooltipOptions",
                                    "name": "Tooltip options",
                                    "schemas": Array [
                                      Object {
                                        "component": null,
                                        "mapTo": "tooltipMode",
                                        "name": "Tooltip mode",
                                        "props": Object {
                                          "defaultSelections": Array [
                                            Object {
                                              "id": "show",
                                              "name": "Show",
                                            },
                                          ],
                                          "options": Array [
                                            Object {
                                              "id": "show",
                                              "name": "Show",
                                            },
                                            Object {
                                              "id": "hidden",
                                              "name": "Hidden",
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "component": null,
                                        "mapTo": "tooltipText",
                                        "name": "Tooltip text",
                                        "props": Object {
                                          "defaultSelections": Array [
                                            Object {
                                              "id": "all",
                                              "name": "All",
                                            },
                                          ],
                                          "options": Array [
                                            Object {
                                              "id": "all",
                                              "name": "All",
                                            },
                                            Object {
                                              "id": "x",
                                              "name": "Dimension",
                                            },
                                            Object {
                                              "id": "y",
                                              "name": "Series",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  Object {
                                    "editor": [Function],
                                    "id": "legend",
                                    "mapTo": "legend",
                                    "name": "Legend",
                                    "schemas": Array [
                                      Object {
                                        "component": null,
                                        "mapTo": "showLegend",
                                        "name": "Show legend",
                                        "props": Object {
                                          "defaultSelections": Array [
                                            Object {
                                              "id": "show",
                                              "name": "Show",
                                            },
                                          ],
                                          "options": Array [
                                            Object {
                                              "id": "show",
                                              "name": "Show",
                                            },
                                            Object {
                                              "id": "hidden",
                                              "name": "Hidden",
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "component": null,
                                        "mapTo": "position",
                                        "name": "Position",
                                        "props": Object {
                                          "defaultSelections": Array [
                                            Object {
                                              "id": "v",
                                              "name": "Right",
                                            },
                                          ],
                                          "options": Array [
                                            Object {
                                              "id": "v",
                                              "name": "Right",
                                            },
                                            Object {
                                              "id": "h",
                                              "name": "Bottom",
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "eleType": "input",
                                        "mapTo": "legendSize",
                                        "name": "Legend size",
                                        "title": "Legend size",
                                      },
                                    ],
                                  },
                                  Object {
                                    "editor": [Function],
                                    "id": "chart_styles",
                                    "mapTo": "chartStyles",
                                    "name": "Chart styles",
                                    "schemas": Array [
                                      Object {
                                        "component": [Function],
                                        "eleType": "buttons",
                                        "mapTo": "mode",
                                        "name": "Mode",
                                        "props": Object {
                                          "defaultSelections": Array [
                                            Object {
                                              "id": "group",
                                              "name": "Group",
                                            },
                                          ],
                                          "options": Array [
                                            Object {
                                              "id": "group",
                                              "name": "Group",
                                            },
                                            Object {
                                              "id": "stack",
                                              "name": "Stack",
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "eleType": "input",
                                        "mapTo": "labelSize",
                                        "name": "Label size",
                                      },
                                      Object {
                                        "component": [Function],
                                        "defaultState": 0,
                                        "eleType": "slider",
                                        "mapTo": "rotateBarLabels",
                                        "name": "Rotate bar labels",
                                        "props": Object {
                                          "max": 90,
                                          "min": -90,
                                          "showTicks": true,
                                          "ticks": Array [
                                            Object {
                                              "label": "-90°",
                                              "value": -90,
                                            },
                                            Object {
                                              "label": "-45°",
                                              "value": -45,
                                            },
                                            Object {
                                              "label": "0°",
                                              "value": 0,
                                            },
                                            Object {
                                              "label": "45°",
                                              "value": 45,
                                            },
                                            Object {
                                              "label": "90°",
                                              "value": 90,
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "defaultState": 0.7,
                                        "eleType": "slider",
                                        "mapTo": "groupWidth",
                                        "name": "Group width",
                                        "props": Object {
                                          "max": 1,
                                          "step": 0.01,
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "defaultState": 0.97,
                                        "eleType": "slider",
                                        "mapTo": "barWidth",
                                        "name": "Bar width",
                                        "props": Object {
                                          "max": 1,
                                          "step": 0.01,
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "defaultState": 2,
                                        "eleType": "slider",
                                        "mapTo": "lineWidth",
                                        "name": "Line width",
                                        "props": Object {
                                          "max": 10,
                                        },
                                      },
                                      Object {
                                        "component": [Function],
                                        "defaultState": 70,
                                        "eleType": "slider",
                                        "mapTo": "fillOpacity",
                                        "name": "Fill opacity",
                                        "props": Object {
                                          "max": 100,
                                        },
                                      },
                                    ],
                                  },
                                ],
                              },
                              Object {
                                "editor": [Function],
                                "id": "availability-panel",
                                "mapTo": "availabilityConfig",
                                "name": "Availability",
                              },
                            ],
                          }
                        }
                        fillopacity={70}
                        fulllabel="Vertical bar"
                        groupwidth={0.7}
                        icon={[Function]}
                        iconType="visBarVerticalStacked"
                        icontype="visBarVerticalStacked"
                        id="bar"
                        labelangle={0}
                        legendposition="v"
                        linewidth={2}
                        mode="group"
                        name="bar"
                        orientation="v"
                        selection={
                          Object {
                            "dataLoss": "nothing",
                          }
                        }
                        seriesaxis="yaxis"
                        showlegend="show"
                        title="Vertical bar"
                        type="bar"
                        visconfig={
                          Object {
                            "config": Object {
                              "displaylogo": false,
                              "responsive": true,
                            },
                            "isUniColor": false,
                            "layout": Object {
                              "height": 1180,
                              "legend": Object {
                                "orientation": "v",
                                "traceorder": "normal",
                              },
                              "margin": Object {
                                "b": 30,
                                "l": 60,
                                "pad": 0,
                                "r": 30,
                                "t": 50,
                              },
                              "showlegend": true,
                            },
                          }
                        }
                      >
                        <EuiInnerText>
                          <span
                            barwidth={0.97}
                            category="Visualizations"
                            categoryaxis="xaxis"
                            className="euiBadge euiBadge--hollow euiBadge--iconLeft euiComboBoxPill"
                            component={[Function]}
                            editorconfig={
                              Object {
                                "panelTabs": Array [
                                  Object {
                                    "editor": [Function],
                                    "id": "data-panel",
                                    "mapTo": "dataConfig",
                                    "name": "Style",
                                    "sections": Array [
                                      Object {
                                        "editor": [Function],
                                        "id": "tooltip_options",
                                        "mapTo": "tooltipOptions",
                                        "name": "Tooltip options",
                                        "schemas": Array [
                                          Object {
                                            "component": null,
                                            "mapTo": "tooltipMode",
                                            "name": "Tooltip mode",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "id": "show",
                                                  "name": "Show",
                                                },
                                              ],
                                              "options": Array [
                                                Object {
                                                  "id": "show",
                                                  "name": "Show",
                                                },
                                                Object {
                                                  "id": "hidden",
                                                  "name": "Hidden",
                                                },
                                              ],
                                            },
                                          },
                                          Object {
                                            "component": null,
                                            "mapTo": "tooltipText",
                                            "name": "Tooltip text",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "id": "all",
                                                  "name": "All",
                                                },
                                              ],
                                              "options": Array [
                                                Object {
                                                  "id": "all",
                                                  "name": "All",
                                                },
                                                Object {
                                                  "id": "x",
                                                  "name": "Dimension",
                                                },
                                                Object {
                                                  "id": "y",
                                                  "name": "Series",
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "legend",
                                        "mapTo": "legend",
                                        "name": "Legend",
                                        "schemas": Array [
                                          Object {
                                            "component": null,
                                            "mapTo": "showLegend",
                                            "name": "Show legend",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "id": "show",
                                                  "name": "Show",
                                                },
                                              ],
                                              "options": Array [
                                                Object {
                                                  "id": "show",
                                                  "name": "Show",
                                                },
                                                Object {
                                                  "id": "hidden",
                                                  "name": "Hidden",
                                                },
                                              ],
                                            },
                                          },
                                          Object {
                                            "component": null,
                                            "mapTo": "position",
                                            "name": "Position",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "id": "v",
                                                  "name": "Right",
                                                },
                                              ],
                                              "options": Array [
                                                Object {
                                                  "id": "v",
                                                  "name": "Right",
                                                },
                                                Object {
                                                  "id": "h",
                                                  "name": "Bottom",
                                                },
                                              ],
                                            },
                                          },
                                          Object {
                                            "component": [Function],
                                            "eleType": "input",
                                            "mapTo": "legendSize",
                                            "name": "Legend size",
                                            "title": "Legend size",
                                          },
                                        ],
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "chart_styles",
                                        "mapTo": "chartStyles",
                                        "name": "Chart styles",
                                        "schemas": Array [
                                          Object {
                                            "component": [Function],
                                            "eleType": "buttons",
                                            "mapTo": "mode",
                                            "name": "Mode",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "id": "group",
                                                  "name": "Group",
                                                },
                                              ],
                                              "options": Array [
                                                Object {
                                                  "id": "group",
                                                  "name": "Group",
                                                },
                                                Object {
                                                  "id": "stack",
                                                  "name": "Stack",
                                                },
                                              ],
                                            },
                                          },
                                          Object {
                                            "component": [Function],
                                            "eleType": "input",
                                            "mapTo": "labelSize",
                                            "name": "Label size",
                                          },
                                          Object {
                                            "component": [Function],
                                            "defaultState": 0,
                                            "eleType": "slider",
                                            "mapTo": "rotateBarLabels",
                                            "name": "Rotate bar labels",
                                            "props": Object {
                                              "max": 90,
                                              "min": -90,
                                              "showTicks": true,
                                              "ticks": Array [
                                                Object {
                                                  "label": "-90°",
                                                  "value": -90,
                                                },
                                                Object {
                                                  "label": "-45°",
                                                  "value": -45,
                                                },
                                                Object {
                                                  "label": "0°",
                                                  "value": 0,
                                                },
                                                Object {
                                                  "label": "45°",
                                                  "value": 45,
                                                },
                                                Object {
                                                  "label": "90°",
                                                  "value": 90,
                                                },
                                              ],
                                            },
                                          },
                                          Object {
                                            "component": [Function],
                                            "defaultState": 0.7,
                                            "eleType": "slider",
                                            "mapTo": "groupWidth",
                                            "name": "Group width",
                                            "props": Object {
                                              "max": 1,
                                              "step": 0.01,
                                            },
                                          },
                                          Object {
                                            "component": [Function],
                                            "defaultState": 0.97,
                                            "eleType": "slider",
                                            "mapTo": "barWidth",
                                            "name": "Bar width",
                                            "props": Object {
                                              "max": 1,
                                              "step": 0.01,
                                            },
                                          },
                                          Object {
                                            "component": [Function],
                                            "defaultState": 2,
                                            "eleType": "slider",
                                            "mapTo": "lineWidth",
                                            "name": "Line width",
                                            "props": Object {
                                              "max": 10,
                                            },
                                          },
                                          Object {
                                            "component": [Function],
                                            "defaultState": 70,
                                            "eleType": "slider",
                                            "mapTo": "fillOpacity",
                                            "name": "Fill opacity",
                                            "props": Object {
                                              "max": 100,
                                            },
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                  Object {
                                    "editor": [Function],
                                    "id": "availability-panel",
                                    "mapTo": "availabilityConfig",
                                    "name": "Availability",
                                  },
                                ],
                              }
                            }
                            fillopacity={70}
                            fulllabel="Vertical bar"
                            groupwidth={0.7}
                            icon={[Function]}
                            icontype="visBarVerticalStacked"
                            id="bar"
                            labelangle={0}
                            legendposition="v"
                            linewidth={2}
                            mode="group"
                            name="bar"
                            orientation="v"
                            selection={
                              Object {
                                "dataLoss": "nothing",
                              }
                            }
                            seriesaxis="yaxis"
                            showlegend="show"
                            title="Vertical bar"
                            type="bar"
                            visconfig={
                              Object {
                                "config": Object {
                                  "displaylogo": false,
                                  "responsive": true,
                                },
                                "isUniColor": false,
                                "layout": Object {
                                  "height": 1180,
                                  "legend": Object {
                                    "orientation": "v",
                                    "traceorder": "normal",
                                  },
                                  "margin": Object {
                                    "b": 30,
                                    "l": 60,
                                    "pad": 0,
                                    "r": 30,
                                    "t": 50,
                                  },
                                  "showlegend": true,
                                },
                              }
                            }
                          >
                            <span
                              className="euiBadge__content"
                            >
                              <span
                                className="euiBadge__text"
                              >
                                Vertical bar
                              </span>
                              <EuiIcon
                                className="euiBadge__icon"
                                color="inherit"
                                size="s"
                                type="visBarVerticalStacked"
                              >
                                <EuiIconEmpty
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiBadge__icon"
                                  focusable="false"
                                  role="img"
                                  style={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiBadge__icon"
                                    focusable="false"
                                    height={16}
                                    role="img"
                                    style={null}
                                    viewBox="0 0 16 16"
                                    width={16}
                                    xmlns="http://www.w3.org/2000/svg"
                                  />
                                </EuiIconEmpty>
                              </EuiIcon>
                            </span>
                          </span>
                        </EuiInnerText>
                      </EuiBadge>
                    </EuiComboBoxPill>
                    <AutosizeInput
                      aria-controls=""
                      className="euiComboBox__input"
                      data-test-subj="comboBoxSearchInput"
                      injectStyles={true}
                      inputRef={[Function]}
                      minWidth={1}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      role="textbox"
                      style={
                        Object {
                          "fontSize": 14,
                        }
                      }
                      value=""
                    >
                      <div
                        className="euiComboBox__input"
                        style={
                          Object {
                            "display": "inline-block",
                            "fontSize": 14,
                          }
                        }
                      >
                        <input
                          aria-controls=""
                          data-test-subj="comboBoxSearchInput"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          role="textbox"
                          style={
                            Object {
                              "boxSizing": "content-box",
                              "width": "2px",
                            }
                          }
                          value=""
                        />
                        <div
                          style={
                            Object {
                              "height": 0,
                              "left": 0,
                              "overflow": "scroll",
                              "position": "absolute",
                              "top": 0,
                              "visibility": "hidden",
                              "whiteSpace": "pre",
                            }
                          }
                        />
                      </div>
                    </AutosizeInput>
                  </div>
                  <EuiFormControlLayoutIcons
                    compressed={false}
                    icon={
                      Object {
                        "aria-label": "Open list of options",
                        "data-test-subj": "comboBoxToggleListButton",
                        "disabled": undefined,
                        "onClick": [Function],
                        "ref": [Function],
                        "side": "right",
                        "type": "arrowDown",
                      }
                    }
                  >
                    <div
                      className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                    >
                      <EuiFormControlLayoutCustomIcon
                        aria-label="Open list of options"
                        data-test-subj="comboBoxToggleListButton"
                        iconRef={[Function]}
                        onClick={[Function]}
                        size="m"
                        type="arrowDown"
                      >
                        <button
                          aria-label="Open list of options"
                          className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                          data-test-subj="comboBoxToggleListButton"
                          onClick={[Function]}
                          type="button"
                        >
                          <EuiIcon
                            aria-hidden="true"
                            className="euiFormControlLayoutCustomIcon__icon"
                            size="m"
                            type="arrowDown"
                          >
                            <EuiIconEmpty
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                              focusable="false"
                              role="img"
                              style={null}
                            >
                              <svg
                                aria-hidden={true}
                                className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                focusable="false"
                                height={16}
                                role="img"
                                style={null}
                                viewBox="0 0 16 16"
                                width={16}
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </EuiIconEmpty>
                          </EuiIcon>
                        </button>
                      </EuiFormControlLayoutCustomIcon>
                    </div>
                  </EuiFormControlLayoutIcons>
                </div>
              </div>
            </EuiFormControlLayout>
          </EuiComboBoxInput>
        </div>
      </EuiComboBox>
    </div>
    <div
      className="cp__rightSettings"
    >
      <EuiTabbedContent
        autoFocus="initial"
        className="vis-config-tabs"
        onTabClick={[Function]}
        selectedTab={
          Object {
            "content": <VizDataPanel
              curVisId="bar"
              onConfigChange={[Function]}
              tabProps={
                Object {
                  "editor": [Function],
                  "id": "data-panel",
                  "mapTo": "dataConfig",
                  "name": "Style",
                  "sections": Array [
                    Object {
                      "editor": [Function],
                      "id": "tooltip_options",
                      "mapTo": "tooltipOptions",
                      "name": "Tooltip options",
                      "schemas": Array [
                        Object {
                          "component": null,
                          "mapTo": "tooltipMode",
                          "name": "Tooltip mode",
                          "props": Object {
                            "defaultSelections": Array [
                              Object {
                                "id": "show",
                                "name": "Show",
                              },
                            ],
                            "options": Array [
                              Object {
                                "id": "show",
                                "name": "Show",
                              },
                              Object {
                                "id": "hidden",
                                "name": "Hidden",
                              },
                            ],
                          },
                        },
                        Object {
                          "component": null,
                          "mapTo": "tooltipText",
                          "name": "Tooltip text",
                          "props": Object {
                            "defaultSelections": Array [
                              Object {
                                "id": "all",
                                "name": "All",
                              },
                            ],
                            "options": Array [
                              Object {
                                "id": "all",
                                "name": "All",
                              },
                              Object {
                                "id": "x",
                                "name": "Dimension",
                              },
                              Object {
                                "id": "y",
                                "name": "Series",
                              },
                            ],
                          },
                        },
                      ],
                    },
                    Object {
                      "editor": [Function],
                      "id": "legend",
                      "mapTo": "legend",
                      "name": "Legend",
                      "schemas": Array [
                        Object {
                          "component": null,
                          "mapTo": "showLegend",
                          "name": "Show legend",
                          "props": Object {
                            "defaultSelections": Array [
                              Object {
                                "id": "show",
                                "name": "Show",
                              },
                            ],
                            "options": Array [
                              Object {
                                "id": "show",
                                "name": "Show",
                              },
                              Object {
                                "id": "hidden",
                                "name": "Hidden",
                              },
                            ],
                          },
                        },
                        Object {
                          "component": null,
                          "mapTo": "position",
                          "name": "Position",
                          "props": Object {
                            "defaultSelections": Array [
                              Object {
                                "id": "v",
                                "name": "Right",
                              },
                            ],
                            "options": Array [
                              Object {
                                "id": "v",
                                "name": "Right",
                              },
                              Object {
                                "id": "h",
                                "name": "Bottom",
                              },
                            ],
                          },
                        },
                        Object {
                          "component": [Function],
                          "eleType": "input",
                          "mapTo": "legendSize",
                          "name": "Legend size",
                          "title": "Legend size",
                        },
                      ],
                    },
                    Object {
                      "editor": [Function],
                      "id": "chart_styles",
                      "mapTo": "chartStyles",
                      "name": "Chart styles",
                      "schemas": Array [
                        Object {
                          "component": [Function],
                          "eleType": "buttons",
                          "mapTo": "mode",
                          "name": "Mode",
                          "props": Object {
                            "defaultSelections": Array [
                              Object {
                                "id": "group",
                                "name": "Group",
                              },
                            ],
                            "options": Array [
                              Object {
                                "id": "group",
                                "name": "Group",
                              },
                              Object {
                                "id": "stack",
                                "name": "Stack",
                              },
                            ],
                          },
                        },
                        Object {
                          "component": [Function],
                          "eleType": "input",
                          "mapTo": "labelSize",
                          "name": "Label size",
                        },
                        Object {
                          "component": [Function],
                          "defaultState": 0,
                          "eleType": "slider",
                          "mapTo": "rotateBarLabels",
                          "name": "Rotate bar labels",
                          "props": Object {
                            "max": 90,
                            "min": -90,
                            "showTicks": true,
                            "ticks": Array [
                              Object {
                                "label": "-90°",
                                "value": -90,
                              },
                              Object {
                                "label": "-45°",
                                "value": -45,
                              },
                              Object {
                                "label": "0°",
                                "value": 0,
                              },
                              Object {
                                "label": "45°",
                                "value": 45,
                              },
                              Object {
                                "label": "90°",
                                "value": 90,
                              },
                            ],
                          },
                        },
                        Object {
                          "component": [Function],
                          "defaultState": 0.7,
                          "eleType": "slider",
                          "mapTo": "groupWidth",
                          "name": "Group width",
                          "props": Object {
                            "max": 1,
                            "step": 0.01,
                          },
                        },
                        Object {
                          "component": [Function],
                          "defaultState": 0.97,
                          "eleType": "slider",
                          "mapTo": "barWidth",
                          "name": "Bar width",
                          "props": Object {
                            "max": 1,
                            "step": 0.01,
                          },
                        },
                        Object {
                          "component": [Function],
                          "defaultState": 2,
                          "eleType": "slider",
                          "mapTo": "lineWidth",
                          "name": "Line width",
                          "props": Object {
                            "max": 10,
                          },
                        },
                        Object {
                          "component": [Function],
                          "defaultState": 70,
                          "eleType": "slider",
                          "mapTo": "fillOpacity",
                          "name": "Fill opacity",
                          "props": Object {
                            "max": 100,
                          },
                        },
                      ],
                    },
                  ],
                }
              }
              visualizations={
                Object {
                  "data": Object {
                    "appData": Object {
                      "fromApp": false,
                    },
                    "defaultAxes": Object {},
                    "indexFields": Object {
                      "availableFields": Array [
                        Object {
                          "name": "agent",
                          "type": "string",
                        },
                        Object {
                          "name": "bytes",
                          "type": "long",
                        },
                        Object {
                          "name": "clientip",
                          "type": "ip",
                        },
                        Object {
                          "name": "event",
                          "type": "struct",
                        },
                        Object {
                          "name": "extension",
                          "type": "string",
                        },
                        Object {
                          "name": "geo",
                          "type": "struct",
                        },
                        Object {
                          "name": "host",
                          "type": "string",
                        },
                        Object {
                          "name": "index",
                          "type": "string",
                        },
                        Object {
                          "name": "ip",
                          "type": "ip",
                        },
                        Object {
                          "name": "machine",
                          "type": "struct",
                        },
                        Object {
                          "name": "memory",
                          "type": "double",
                        },
                        Object {
                          "name": "message",
                          "type": "string",
                        },
                        Object {
                          "name": "phpmemory",
                          "type": "long",
                        },
                        Object {
                          "name": "referer",
                          "type": "string",
                        },
                        Object {
                          "name": "request",
                          "type": "string",
                        },
                        Object {
                          "name": "response",
                          "type": "string",
                        },
                        Object {
                          "name": "tags",
                          "type": "string",
                        },
                        Object {
                          "name": "timestamp",
                          "type": "timestamp",
                        },
                        Object {
                          "name": "url",
                          "type": "string",
                        },
                        Object {
                          "name": "utc_time",
                          "type": "timestamp",
                        },
                      ],
                      "queriedFields": Array [
                        Object {
                          "name": "double_per_ip_bytes",
                          "type": "long",
                        },
                        Object {
                          "name": "host",
                          "type": "text",
                        },
                        Object {
                          "name": "ip_count",
                          "type": "integer",
                        },
                        Object {
                          "name": "per_ip_bytes",
                          "type": "long",
                        },
                        Object {
                          "name": "resp_code",
                          "type": "text",
                        },
                        Object {
                          "name": "sum_bytes",
                          "type": "long",
                        },
                      ],
                      "selectedFields": Array [],
                      "unselectedFields": Array [],
                    },
                    "query": Object {},
                    "rawVizData": Object {
                      "data": Object {
                        "count()": Array [
                          154,
                          1753,
                          116,
                          468,
                          1964,
                          219,
                        ],
                        "tags": Array [
                          "error",
                          "info",
                          "login",
                          "security",
                          "success",
                          "warning",
                        ],
                      },
                      "jsonData": Array [
                        Object {
                          "count()": 154,
                          "tags": "error",
                        },
                        Object {
                          "count()": 1753,
                          "tags": "info",
                        },
                        Object {
                          "count()": 116,
                          "tags": "login",
                        },
                        Object {
                          "count()": 468,
                          "tags": "security",
                        },
                        Object {
                          "count()": 1964,
                          "tags": "success",
                        },
                        Object {
                          "count()": 219,
                          "tags": "warning",
                        },
                      ],
                      "metadata": Object {
                        "fields": Array [
                          Object {
                            "name": "count()",
                            "type": "integer",
                          },
                          Object {
                            "name": "tags",
                            "type": "text",
                          },
                        ],
                        "size": 6,
                        "status": 200,
                      },
                    },
                    "userConfigs": Object {
                      "dataConfig": Object {
                        "valueOptions": Object {
                          "dimensions": Array [
                            Object {
                              "label": "tags",
                              "name": "tags",
                              "type": "text",
                            },
                          ],
                          "metrics": Array [
                            Object {
                              "label": "count()",
                              "name": "count()",
                              "side": "left",
                              "type": "integer",
                            },
                          ],
                        },
                      },
                    },
                  },
                  "vis": Object {
                    "barwidth": 0.97,
                    "category": "Visualizations",
                    "categoryaxis": "xaxis",
                    "component": [Function],
                    "editorconfig": Object {
                      "panelTabs": Array [
                        Object {
                          "editor": [Function],
                          "id": "data-panel",
                          "mapTo": "dataConfig",
                          "name": "Style",
                          "sections": Array [
                            Object {
                              "editor": [Function],
                              "id": "tooltip_options",
                              "mapTo": "tooltipOptions",
                              "name": "Tooltip options",
                              "schemas": Array [
                                Object {
                                  "component": null,
                                  "mapTo": "tooltipMode",
                                  "name": "Tooltip mode",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                      Object {
                                        "id": "hidden",
                                        "name": "Hidden",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": null,
                                  "mapTo": "tooltipText",
                                  "name": "Tooltip text",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "all",
                                        "name": "All",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "all",
                                        "name": "All",
                                      },
                                      Object {
                                        "id": "x",
                                        "name": "Dimension",
                                      },
                                      Object {
                                        "id": "y",
                                        "name": "Series",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                            Object {
                              "editor": [Function],
                              "id": "legend",
                              "mapTo": "legend",
                              "name": "Legend",
                              "schemas": Array [
                                Object {
                                  "component": null,
                                  "mapTo": "showLegend",
                                  "name": "Show legend",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                      Object {
                                        "id": "hidden",
                                        "name": "Hidden",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": null,
                                  "mapTo": "position",
                                  "name": "Position",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "v",
                                        "name": "Right",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "v",
                                        "name": "Right",
                                      },
                                      Object {
                                        "id": "h",
                                        "name": "Bottom",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "eleType": "input",
                                  "mapTo": "legendSize",
                                  "name": "Legend size",
                                  "title": "Legend size",
                                },
                              ],
                            },
                            Object {
                              "editor": [Function],
                              "id": "chart_styles",
                              "mapTo": "chartStyles",
                              "name": "Chart styles",
                              "schemas": Array [
                                Object {
                                  "component": [Function],
                                  "eleType": "buttons",
                                  "mapTo": "mode",
                                  "name": "Mode",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "group",
                                        "name": "Group",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "group",
                                        "name": "Group",
                                      },
                                      Object {
                                        "id": "stack",
                                        "name": "Stack",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "eleType": "input",
                                  "mapTo": "labelSize",
                                  "name": "Label size",
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 0,
                                  "eleType": "slider",
                                  "mapTo": "rotateBarLabels",
                                  "name": "Rotate bar labels",
                                  "props": Object {
                                    "max": 90,
                                    "min": -90,
                                    "showTicks": true,
                                    "ticks": Array [
                                      Object {
                                        "label": "-90°",
                                        "value": -90,
                                      },
                                      Object {
                                        "label": "-45°",
                                        "value": -45,
                                      },
                                      Object {
                                        "label": "0°",
                                        "value": 0,
                                      },
                                      Object {
                                        "label": "45°",
                                        "value": 45,
                                      },
                                      Object {
                                        "label": "90°",
                                        "value": 90,
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 0.7,
                                  "eleType": "slider",
                                  "mapTo": "groupWidth",
                                  "name": "Group width",
                                  "props": Object {
                                    "max": 1,
                                    "step": 0.01,
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 0.97,
                                  "eleType": "slider",
                                  "mapTo": "barWidth",
                                  "name": "Bar width",
                                  "props": Object {
                                    "max": 1,
                                    "step": 0.01,
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 2,
                                  "eleType": "slider",
                                  "mapTo": "lineWidth",
                                  "name": "Line width",
                                  "props": Object {
                                    "max": 10,
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 70,
                                  "eleType": "slider",
                                  "mapTo": "fillOpacity",
                                  "name": "Fill opacity",
                                  "props": Object {
                                    "max": 100,
                                  },
                                },
                              ],
                            },
                          ],
                        },
                        Object {
                          "editor": [Function],
                          "id": "availability-panel",
                          "mapTo": "availabilityConfig",
                          "name": "Availability",
                        },
                      ],
                    },
                    "fillopacity": 70,
                    "fulllabel": "Vertical bar",
                    "groupwidth": 0.7,
                    "icon": [Function],
                    "icontype": "visBarVerticalStacked",
                    "id": "bar",
                    "label": "Vertical bar",
                    "labelangle": 0,
                    "legendposition": "v",
                    "linewidth": 2,
                    "mode": "group",
                    "name": "bar",
                    "orientation": "v",
                    "selection": Object {
                      "dataLoss": "nothing",
                    },
                    "seriesaxis": "yaxis",
                    "showlegend": "show",
                    "type": "bar",
                    "visconfig": Object {
                      "config": Object {
                        "displaylogo": false,
                        "responsive": true,
                      },
                      "isUniColor": false,
                      "layout": Object {
                        "height": 1180,
                        "legend": Object {
                          "orientation": "v",
                          "traceorder": "normal",
                        },
                        "margin": Object {
                          "b": 30,
                          "l": 60,
                          "pad": 0,
                          "r": 30,
                          "t": 50,
                        },
                        "showlegend": true,
                      },
                    },
                  },
                }
              }
              vizState={
                Object {
                  "valueOptions": Object {
                    "dimensions": Array [
                      Object {
                        "label": "tags",
                        "name": "tags",
                        "type": "text",
                      },
                    ],
                    "metrics": Array [
                      Object {
                        "label": "count()",
                        "name": "count()",
                        "side": "left",
                        "type": "integer",
                      },
                    ],
                  },
                }
              }
            />,
            "id": "data-panel",
            "name": "Style",
          }
        }
        tabs={
          Array [
            Object {
              "content": <VizDataPanel
                curVisId="bar"
                onConfigChange={[Function]}
                tabProps={
                  Object {
                    "editor": [Function],
                    "id": "data-panel",
                    "mapTo": "dataConfig",
                    "name": "Style",
                    "sections": Array [
                      Object {
                        "editor": [Function],
                        "id": "tooltip_options",
                        "mapTo": "tooltipOptions",
                        "name": "Tooltip options",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "tooltipMode",
                            "name": "Tooltip mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "tooltipText",
                            "name": "Tooltip text",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "all",
                                  "name": "All",
                                },
                                Object {
                                  "id": "x",
                                  "name": "Dimension",
                                },
                                Object {
                                  "id": "y",
                                  "name": "Series",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "legend",
                        "mapTo": "legend",
                        "name": "Legend",
                        "schemas": Array [
                          Object {
                            "component": null,
                            "mapTo": "showLegend",
                            "name": "Show legend",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "show",
                                  "name": "Show",
                                },
                                Object {
                                  "id": "hidden",
                                  "name": "Hidden",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": null,
                            "mapTo": "position",
                            "name": "Position",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "v",
                                  "name": "Right",
                                },
                                Object {
                                  "id": "h",
                                  "name": "Bottom",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "legendSize",
                            "name": "Legend size",
                            "title": "Legend size",
                          },
                        ],
                      },
                      Object {
                        "editor": [Function],
                        "id": "chart_styles",
                        "mapTo": "chartStyles",
                        "name": "Chart styles",
                        "schemas": Array [
                          Object {
                            "component": [Function],
                            "eleType": "buttons",
                            "mapTo": "mode",
                            "name": "Mode",
                            "props": Object {
                              "defaultSelections": Array [
                                Object {
                                  "id": "group",
                                  "name": "Group",
                                },
                              ],
                              "options": Array [
                                Object {
                                  "id": "group",
                                  "name": "Group",
                                },
                                Object {
                                  "id": "stack",
                                  "name": "Stack",
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "eleType": "input",
                            "mapTo": "labelSize",
                            "name": "Label size",
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0,
                            "eleType": "slider",
                            "mapTo": "rotateBarLabels",
                            "name": "Rotate bar labels",
                            "props": Object {
                              "max": 90,
                              "min": -90,
                              "showTicks": true,
                              "ticks": Array [
                                Object {
                                  "label": "-90°",
                                  "value": -90,
                                },
                                Object {
                                  "label": "-45°",
                                  "value": -45,
                                },
                                Object {
                                  "label": "0°",
                                  "value": 0,
                                },
                                Object {
                                  "label": "45°",
                                  "value": 45,
                                },
                                Object {
                                  "label": "90°",
                                  "value": 90,
                                },
                              ],
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0.7,
                            "eleType": "slider",
                            "mapTo": "groupWidth",
                            "name": "Group width",
                            "props": Object {
                              "max": 1,
                              "step": 0.01,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 0.97,
                            "eleType": "slider",
                            "mapTo": "barWidth",
                            "name": "Bar width",
                            "props": Object {
                              "max": 1,
                              "step": 0.01,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 2,
                            "eleType": "slider",
                            "mapTo": "lineWidth",
                            "name": "Line width",
                            "props": Object {
                              "max": 10,
                            },
                          },
                          Object {
                            "component": [Function],
                            "defaultState": 70,
                            "eleType": "slider",
                            "mapTo": "fillOpacity",
                            "name": "Fill opacity",
                            "props": Object {
                              "max": 100,
                            },
                          },
                        ],
                      },
                    ],
                  }
                }
                visualizations={
                  Object {
                    "data": Object {
                      "appData": Object {
                        "fromApp": false,
                      },
                      "defaultAxes": Object {},
                      "indexFields": Object {
                        "availableFields": Array [
                          Object {
                            "name": "agent",
                            "type": "string",
                          },
                          Object {
                            "name": "bytes",
                            "type": "long",
                          },
                          Object {
                            "name": "clientip",
                            "type": "ip",
                          },
                          Object {
                            "name": "event",
                            "type": "struct",
                          },
                          Object {
                            "name": "extension",
                            "type": "string",
                          },
                          Object {
                            "name": "geo",
                            "type": "struct",
                          },
                          Object {
                            "name": "host",
                            "type": "string",
                          },
                          Object {
                            "name": "index",
                            "type": "string",
                          },
                          Object {
                            "name": "ip",
                            "type": "ip",
                          },
                          Object {
                            "name": "machine",
                            "type": "struct",
                          },
                          Object {
                            "name": "memory",
                            "type": "double",
                          },
                          Object {
                            "name": "message",
                            "type": "string",
                          },
                          Object {
                            "name": "phpmemory",
                            "type": "long",
                          },
                          Object {
                            "name": "referer",
                            "type": "string",
                          },
                          Object {
                            "name": "request",
                            "type": "string",
                          },
                          Object {
                            "name": "response",
                            "type": "string",
                          },
                          Object {
                            "name": "tags",
                            "type": "string",
                          },
                          Object {
                            "name": "timestamp",
                            "type": "timestamp",
                          },
                          Object {
                            "name": "url",
                            "type": "string",
                          },
                          Object {
                            "name": "utc_time",
                            "type": "timestamp",
                          },
                        ],
                        "queriedFields": Array [
                          Object {
                            "name": "double_per_ip_bytes",
                            "type": "long",
                          },
                          Object {
                            "name": "host",
                            "type": "text",
                          },
                          Object {
                            "name": "ip_count",
                            "type": "integer",
                          },
                          Object {
                            "name": "per_ip_bytes",
                            "type": "long",
                          },
                          Object {
                            "name": "resp_code",
                            "type": "text",
                          },
                          Object {
                            "name": "sum_bytes",
                            "type": "long",
                          },
                        ],
                        "selectedFields": Array [],
                        "unselectedFields": Array [],
                      },
                      "query": Object {},
                      "rawVizData": Object {
                        "data": Object {
                          "count()": Array [
                            154,
                            1753,
                            116,
                            468,
                            1964,
                            219,
                          ],
                          "tags": Array [
                            "error",
                            "info",
                            "login",
                            "security",
                            "success",
                            "warning",
                          ],
                        },
                        "jsonData": Array [
                          Object {
                            "count()": 154,
                            "tags": "error",
                          },
                          Object {
                            "count()": 1753,
                            "tags": "info",
                          },
                          Object {
                            "count()": 116,
                            "tags": "login",
                          },
                          Object {
                            "count()": 468,
                            "tags": "security",
                          },
                          Object {
                            "count()": 1964,
                            "tags": "success",
                          },
                          Object {
                            "count()": 219,
                            "tags": "warning",
                          },
                        ],
                        "metadata": Object {
                          "fields": Array [
                            Object {
                              "name": "count()",
                              "type": "integer",
                            },
                            Object {
                              "name": "tags",
                              "type": "text",
                            },
                          ],
                          "size": 6,
                          "status": 200,
                        },
                      },
                      "userConfigs": Object {
                        "dataConfig": Object {
                          "valueOptions": Object {
                            "dimensions": Array [
                              Object {
                                "label": "tags",
                                "name": "tags",
                                "type": "text",
                              },
                            ],
                            "metrics": Array [
                              Object {
                                "label": "count()",
                                "name": "count()",
                                "side": "left",
                                "type": "integer",
                              },
                            ],
                          },
                        },
                      },
                    },
                    "vis": Object {
                      "barwidth": 0.97,
                      "category": "Visualizations",
                      "categoryaxis": "xaxis",
                      "component": [Function],
                      "editorconfig": Object {
                        "panelTabs": Array [
                          Object {
                            "editor": [Function],
                            "id": "data-panel",
                            "mapTo": "dataConfig",
                            "name": "Style",
                            "sections": Array [
                              Object {
                                "editor": [Function],
                                "id": "tooltip_options",
                                "mapTo": "tooltipOptions",
                                "name": "Tooltip options",
                                "schemas": Array [
                                  Object {
                                    "component": null,
                                    "mapTo": "tooltipMode",
                                    "name": "Tooltip mode",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "id": "show",
                                          "name": "Show",
                                        },
                                      ],
                                      "options": Array [
                                        Object {
                                          "id": "show",
                                          "name": "Show",
                                        },
                                        Object {
                                          "id": "hidden",
                                          "name": "Hidden",
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": null,
                                    "mapTo": "tooltipText",
                                    "name": "Tooltip text",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "id": "all",
                                          "name": "All",
                                        },
                                      ],
                                      "options": Array [
                                        Object {
                                          "id": "all",
                                          "name": "All",
                                        },
                                        Object {
                                          "id": "x",
                                          "name": "Dimension",
                                        },
                                        Object {
                                          "id": "y",
                                          "name": "Series",
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                              Object {
                                "editor": [Function],
                                "id": "legend",
                                "mapTo": "legend",
                                "name": "Legend",
                                "schemas": Array [
                                  Object {
                                    "component": null,
                                    "mapTo": "showLegend",
                                    "name": "Show legend",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "id": "show",
                                          "name": "Show",
                                        },
                                      ],
                                      "options": Array [
                                        Object {
                                          "id": "show",
                                          "name": "Show",
                                        },
                                        Object {
                                          "id": "hidden",
                                          "name": "Hidden",
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": null,
                                    "mapTo": "position",
                                    "name": "Position",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "id": "v",
                                          "name": "Right",
                                        },
                                      ],
                                      "options": Array [
                                        Object {
                                          "id": "v",
                                          "name": "Right",
                                        },
                                        Object {
                                          "id": "h",
                                          "name": "Bottom",
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "eleType": "input",
                                    "mapTo": "legendSize",
                                    "name": "Legend size",
                                    "title": "Legend size",
                                  },
                                ],
                              },
                              Object {
                                "editor": [Function],
                                "id": "chart_styles",
                                "mapTo": "chartStyles",
                                "name": "Chart styles",
                                "schemas": Array [
                                  Object {
                                    "component": [Function],
                                    "eleType": "buttons",
                                    "mapTo": "mode",
                                    "name": "Mode",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "id": "group",
                                          "name": "Group",
                                        },
                                      ],
                                      "options": Array [
                                        Object {
                                          "id": "group",
                                          "name": "Group",
                                        },
                                        Object {
                                          "id": "stack",
                                          "name": "Stack",
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "eleType": "input",
                                    "mapTo": "labelSize",
                                    "name": "Label size",
                                  },
                                  Object {
                                    "component": [Function],
                                    "defaultState": 0,
                                    "eleType": "slider",
                                    "mapTo": "rotateBarLabels",
                                    "name": "Rotate bar labels",
                                    "props": Object {
                                      "max": 90,
                                      "min": -90,
                                      "showTicks": true,
                                      "ticks": Array [
                                        Object {
                                          "label": "-90°",
                                          "value": -90,
                                        },
                                        Object {
                                          "label": "-45°",
                                          "value": -45,
                                        },
                                        Object {
                                          "label": "0°",
                                          "value": 0,
                                        },
                                        Object {
                                          "label": "45°",
                                          "value": 45,
                                        },
                                        Object {
                                          "label": "90°",
                                          "value": 90,
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "defaultState": 0.7,
                                    "eleType": "slider",
                                    "mapTo": "groupWidth",
                                    "name": "Group width",
                                    "props": Object {
                                      "max": 1,
                                      "step": 0.01,
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "defaultState": 0.97,
                                    "eleType": "slider",
                                    "mapTo": "barWidth",
                                    "name": "Bar width",
                                    "props": Object {
                                      "max": 1,
                                      "step": 0.01,
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "defaultState": 2,
                                    "eleType": "slider",
                                    "mapTo": "lineWidth",
                                    "name": "Line width",
                                    "props": Object {
                                      "max": 10,
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "defaultState": 70,
                                    "eleType": "slider",
                                    "mapTo": "fillOpacity",
                                    "name": "Fill opacity",
                                    "props": Object {
                                      "max": 100,
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                          Object {
                            "editor": [Function],
                            "id": "availability-panel",
                            "mapTo": "availabilityConfig",
                            "name": "Availability",
                          },
                        ],
                      },
                      "fillopacity": 70,
                      "fulllabel": "Vertical bar",
                      "groupwidth": 0.7,
                      "icon": [Function],
                      "icontype": "visBarVerticalStacked",
                      "id": "bar",
                      "label": "Vertical bar",
                      "labelangle": 0,
                      "legendposition": "v",
                      "linewidth": 2,
                      "mode": "group",
                      "name": "bar",
                      "orientation": "v",
                      "selection": Object {
                        "dataLoss": "nothing",
                      },
                      "seriesaxis": "yaxis",
                      "showlegend": "show",
                      "type": "bar",
                      "visconfig": Object {
                        "config": Object {
                          "displaylogo": false,
                          "responsive": true,
                        },
                        "isUniColor": false,
                        "layout": Object {
                          "height": 1180,
                          "legend": Object {
                            "orientation": "v",
                            "traceorder": "normal",
                          },
                          "margin": Object {
                            "b": 30,
                            "l": 60,
                            "pad": 0,
                            "r": 30,
                            "t": 50,
                          },
                          "showlegend": true,
                        },
                      },
                    },
                  }
                }
                vizState={
                  Object {
                    "valueOptions": Object {
                      "dimensions": Array [
                        Object {
                          "label": "tags",
                          "name": "tags",
                          "type": "text",
                        },
                      ],
                      "metrics": Array [
                        Object {
                          "label": "count()",
                          "name": "count()",
                          "side": "left",
                          "type": "integer",
                        },
                      ],
                    },
                  }
                }
              />,
              "id": "data-panel",
              "name": "Style",
            },
            Object {
              "content": <ConfigAvailability
                curVisId="bar"
                onConfigChange={[Function]}
                tabProps={
                  Object {
                    "editor": [Function],
                    "id": "availability-panel",
                    "mapTo": "availabilityConfig",
                    "name": "Availability",
                  }
                }
                visualizations={
                  Object {
                    "data": Object {
                      "appData": Object {
                        "fromApp": false,
                      },
                      "defaultAxes": Object {},
                      "indexFields": Object {
                        "availableFields": Array [
                          Object {
                            "name": "agent",
                            "type": "string",
                          },
                          Object {
                            "name": "bytes",
                            "type": "long",
                          },
                          Object {
                            "name": "clientip",
                            "type": "ip",
                          },
                          Object {
                            "name": "event",
                            "type": "struct",
                          },
                          Object {
                            "name": "extension",
                            "type": "string",
                          },
                          Object {
                            "name": "geo",
                            "type": "struct",
                          },
                          Object {
                            "name": "host",
                            "type": "string",
                          },
                          Object {
                            "name": "index",
                            "type": "string",
                          },
                          Object {
                            "name": "ip",
                            "type": "ip",
                          },
                          Object {
                            "name": "machine",
                            "type": "struct",
                          },
                          Object {
                            "name": "memory",
                            "type": "double",
                          },
                          Object {
                            "name": "message",
                            "type": "string",
                          },
                          Object {
                            "name": "phpmemory",
                            "type": "long",
                          },
                          Object {
                            "name": "referer",
                            "type": "string",
                          },
                          Object {
                            "name": "request",
                            "type": "string",
                          },
                          Object {
                            "name": "response",
                            "type": "string",
                          },
                          Object {
                            "name": "tags",
                            "type": "string",
                          },
                          Object {
                            "name": "timestamp",
                            "type": "timestamp",
                          },
                          Object {
                            "name": "url",
                            "type": "string",
                          },
                          Object {
                            "name": "utc_time",
                            "type": "timestamp",
                          },
                        ],
                        "queriedFields": Array [
                          Object {
                            "name": "double_per_ip_bytes",
                            "type": "long",
                          },
                          Object {
                            "name": "host",
                            "type": "text",
                          },
                          Object {
                            "name": "ip_count",
                            "type": "integer",
                          },
                          Object {
                            "name": "per_ip_bytes",
                            "type": "long",
                          },
                          Object {
                            "name": "resp_code",
                            "type": "text",
                          },
                          Object {
                            "name": "sum_bytes",
                            "type": "long",
                          },
                        ],
                        "selectedFields": Array [],
                        "unselectedFields": Array [],
                      },
                      "query": Object {},
                      "rawVizData": Object {
                        "data": Object {
                          "count()": Array [
                            154,
                            1753,
                            116,
                            468,
                            1964,
                            219,
                          ],
                          "tags": Array [
                            "error",
                            "info",
                            "login",
                            "security",
                            "success",
                            "warning",
                          ],
                        },
                        "jsonData": Array [
                          Object {
                            "count()": 154,
                            "tags": "error",
                          },
                          Object {
                            "count()": 1753,
                            "tags": "info",
                          },
                          Object {
                            "count()": 116,
                            "tags": "login",
                          },
                          Object {
                            "count()": 468,
                            "tags": "security",
                          },
                          Object {
                            "count()": 1964,
                            "tags": "success",
                          },
                          Object {
                            "count()": 219,
                            "tags": "warning",
                          },
                        ],
                        "metadata": Object {
                          "fields": Array [
                            Object {
                              "name": "count()",
                              "type": "integer",
                            },
                            Object {
                              "name": "tags",
                              "type": "text",
                            },
                          ],
                          "size": 6,
                          "status": 200,
                        },
                      },
                      "userConfigs": Object {
                        "dataConfig": Object {
                          "valueOptions": Object {
                            "dimensions": Array [
                              Object {
                                "label": "tags",
                                "name": "tags",
                                "type": "text",
                              },
                            ],
                            "metrics": Array [
                              Object {
                                "label": "count()",
                                "name": "count()",
                                "side": "left",
                                "type": "integer",
                              },
                            ],
                          },
                        },
                      },
                    },
                    "vis": Object {
                      "barwidth": 0.97,
                      "category": "Visualizations",
                      "categoryaxis": "xaxis",
                      "component": [Function],
                      "editorconfig": Object {
                        "panelTabs": Array [
                          Object {
                            "editor": [Function],
                            "id": "data-panel",
                            "mapTo": "dataConfig",
                            "name": "Style",
                            "sections": Array [
                              Object {
                                "editor": [Function],
                                "id": "tooltip_options",
                                "mapTo": "tooltipOptions",
                                "name": "Tooltip options",
                                "schemas": Array [
                                  Object {
                                    "component": null,
                                    "mapTo": "tooltipMode",
                                    "name": "Tooltip mode",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "id": "show",
                                          "name": "Show",
                                        },
                                      ],
                                      "options": Array [
                                        Object {
                                          "id": "show",
                                          "name": "Show",
                                        },
                                        Object {
                                          "id": "hidden",
                                          "name": "Hidden",
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": null,
                                    "mapTo": "tooltipText",
                                    "name": "Tooltip text",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "id": "all",
                                          "name": "All",
                                        },
                                      ],
                                      "options": Array [
                                        Object {
                                          "id": "all",
                                          "name": "All",
                                        },
                                        Object {
                                          "id": "x",
                                          "name": "Dimension",
                                        },
                                        Object {
                                          "id": "y",
                                          "name": "Series",
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                              Object {
                                "editor": [Function],
                                "id": "legend",
                                "mapTo": "legend",
                                "name": "Legend",
                                "schemas": Array [
                                  Object {
                                    "component": null,
                                    "mapTo": "showLegend",
                                    "name": "Show legend",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "id": "show",
                                          "name": "Show",
                                        },
                                      ],
                                      "options": Array [
                                        Object {
                                          "id": "show",
                                          "name": "Show",
                                        },
                                        Object {
                                          "id": "hidden",
                                          "name": "Hidden",
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": null,
                                    "mapTo": "position",
                                    "name": "Position",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "id": "v",
                                          "name": "Right",
                                        },
                                      ],
                                      "options": Array [
                                        Object {
                                          "id": "v",
                                          "name": "Right",
                                        },
                                        Object {
                                          "id": "h",
                                          "name": "Bottom",
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "eleType": "input",
                                    "mapTo": "legendSize",
                                    "name": "Legend size",
                                    "title": "Legend size",
                                  },
                                ],
                              },
                              Object {
                                "editor": [Function],
                                "id": "chart_styles",
                                "mapTo": "chartStyles",
                                "name": "Chart styles",
                                "schemas": Array [
                                  Object {
                                    "component": [Function],
                                    "eleType": "buttons",
                                    "mapTo": "mode",
                                    "name": "Mode",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "id": "group",
                                          "name": "Group",
                                        },
                                      ],
                                      "options": Array [
                                        Object {
                                          "id": "group",
                                          "name": "Group",
                                        },
                                        Object {
                                          "id": "stack",
                                          "name": "Stack",
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "eleType": "input",
                                    "mapTo": "labelSize",
                                    "name": "Label size",
                                  },
                                  Object {
                                    "component": [Function],
                                    "defaultState": 0,
                                    "eleType": "slider",
                                    "mapTo": "rotateBarLabels",
                                    "name": "Rotate bar labels",
                                    "props": Object {
                                      "max": 90,
                                      "min": -90,
                                      "showTicks": true,
                                      "ticks": Array [
                                        Object {
                                          "label": "-90°",
                                          "value": -90,
                                        },
                                        Object {
                                          "label": "-45°",
                                          "value": -45,
                                        },
                                        Object {
                                          "label": "0°",
                                          "value": 0,
                                        },
                                        Object {
                                          "label": "45°",
                                          "value": 45,
                                        },
                                        Object {
                                          "label": "90°",
                                          "value": 90,
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "defaultState": 0.7,
                                    "eleType": "slider",
                                    "mapTo": "groupWidth",
                                    "name": "Group width",
                                    "props": Object {
                                      "max": 1,
                                      "step": 0.01,
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "defaultState": 0.97,
                                    "eleType": "slider",
                                    "mapTo": "barWidth",
                                    "name": "Bar width",
                                    "props": Object {
                                      "max": 1,
                                      "step": 0.01,
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "defaultState": 2,
                                    "eleType": "slider",
                                    "mapTo": "lineWidth",
                                    "name": "Line width",
                                    "props": Object {
                                      "max": 10,
                                    },
                                  },
                                  Object {
                                    "component": [Function],
                                    "defaultState": 70,
                                    "eleType": "slider",
                                    "mapTo": "fillOpacity",
                                    "name": "Fill opacity",
                                    "props": Object {
                                      "max": 100,
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                          Object {
                            "editor": [Function],
                            "id": "availability-panel",
                            "mapTo": "availabilityConfig",
                            "name": "Availability",
                          },
                        ],
                      },
                      "fillopacity": 70,
                      "fulllabel": "Vertical bar",
                      "groupwidth": 0.7,
                      "icon": [Function],
                      "icontype": "visBarVerticalStacked",
                      "id": "bar",
                      "label": "Vertical bar",
                      "labelangle": 0,
                      "legendposition": "v",
                      "linewidth": 2,
                      "mode": "group",
                      "name": "bar",
                      "orientation": "v",
                      "selection": Object {
                        "dataLoss": "nothing",
                      },
                      "seriesaxis": "yaxis",
                      "showlegend": "show",
                      "type": "bar",
                      "visconfig": Object {
                        "config": Object {
                          "displaylogo": false,
                          "responsive": true,
                        },
                        "isUniColor": false,
                        "layout": Object {
                          "height": 1180,
                          "legend": Object {
                            "orientation": "v",
                            "traceorder": "normal",
                          },
                          "margin": Object {
                            "b": 30,
                            "l": 60,
                            "pad": 0,
                            "r": 30,
                            "t": 50,
                          },
                          "showlegend": true,
                        },
                      },
                    },
                  }
                }
              />,
              "id": "availability-panel",
              "name": "Availability",
            },
          ]
        }
      >
        <div
          className="vis-config-tabs"
        >
          <EuiTabs
            onFocus={[Function]}
          >
            <div
              className="euiTabs"
              onFocus={[Function]}
              role="tablist"
            >
              <EuiTab
                aria-controls="random_html_id"
                id="data-panel"
                isSelected={true}
                key="data-panel"
                onClick={[Function]}
              >
                <button
                  aria-controls="random_html_id"
                  aria-selected={true}
                  className="euiTab euiTab-isSelected"
                  disabled={false}
                  id="data-panel"
                  onClick={[Function]}
                  role="tab"
                  type="button"
                >
                  <span
                    className="euiTab__content"
                  >
                    Style
                  </span>
                </button>
              </EuiTab>
              <EuiTab
                aria-controls="random_html_id"
                id="availability-panel"
                isSelected={false}
                key="availability-panel"
                onClick={[Function]}
              >
                <button
                  aria-controls="random_html_id"
                  aria-selected={false}
                  className="euiTab"
                  disabled={false}
                  id="availability-panel"
                  onClick={[Function]}
                  role="tab"
                  type="button"
                >
                  <span
                    className="euiTab__content"
                  >
                    Availability
                  </span>
                </button>
              </EuiTab>
            </div>
          </EuiTabs>
          <div
            aria-labelledby="data-panel"
            id="random_html_id"
            role="tabpanel"
          >
            <VizDataPanel
              curVisId="bar"
              onConfigChange={[Function]}
              tabProps={
                Object {
                  "editor": [Function],
                  "id": "data-panel",
                  "mapTo": "dataConfig",
                  "name": "Style",
                  "sections": Array [
                    Object {
                      "editor": [Function],
                      "id": "tooltip_options",
                      "mapTo": "tooltipOptions",
                      "name": "Tooltip options",
                      "schemas": Array [
                        Object {
                          "component": null,
                          "mapTo": "tooltipMode",
                          "name": "Tooltip mode",
                          "props": Object {
                            "defaultSelections": Array [
                              Object {
                                "id": "show",
                                "name": "Show",
                              },
                            ],
                            "options": Array [
                              Object {
                                "id": "show",
                                "name": "Show",
                              },
                              Object {
                                "id": "hidden",
                                "name": "Hidden",
                              },
                            ],
                          },
                        },
                        Object {
                          "component": null,
                          "mapTo": "tooltipText",
                          "name": "Tooltip text",
                          "props": Object {
                            "defaultSelections": Array [
                              Object {
                                "id": "all",
                                "name": "All",
                              },
                            ],
                            "options": Array [
                              Object {
                                "id": "all",
                                "name": "All",
                              },
                              Object {
                                "id": "x",
                                "name": "Dimension",
                              },
                              Object {
                                "id": "y",
                                "name": "Series",
                              },
                            ],
                          },
                        },
                      ],
                    },
                    Object {
                      "editor": [Function],
                      "id": "legend",
                      "mapTo": "legend",
                      "name": "Legend",
                      "schemas": Array [
                        Object {
                          "component": null,
                          "mapTo": "showLegend",
                          "name": "Show legend",
                          "props": Object {
                            "defaultSelections": Array [
                              Object {
                                "id": "show",
                                "name": "Show",
                              },
                            ],
                            "options": Array [
                              Object {
                                "id": "show",
                                "name": "Show",
                              },
                              Object {
                                "id": "hidden",
                                "name": "Hidden",
                              },
                            ],
                          },
                        },
                        Object {
                          "component": null,
                          "mapTo": "position",
                          "name": "Position",
                          "props": Object {
                            "defaultSelections": Array [
                              Object {
                                "id": "v",
                                "name": "Right",
                              },
                            ],
                            "options": Array [
                              Object {
                                "id": "v",
                                "name": "Right",
                              },
                              Object {
                                "id": "h",
                                "name": "Bottom",
                              },
                            ],
                          },
                        },
                        Object {
                          "component": [Function],
                          "eleType": "input",
                          "mapTo": "legendSize",
                          "name": "Legend size",
                          "title": "Legend size",
                        },
                      ],
                    },
                    Object {
                      "editor": [Function],
                      "id": "chart_styles",
                      "mapTo": "chartStyles",
                      "name": "Chart styles",
                      "schemas": Array [
                        Object {
                          "component": [Function],
                          "eleType": "buttons",
                          "mapTo": "mode",
                          "name": "Mode",
                          "props": Object {
                            "defaultSelections": Array [
                              Object {
                                "id": "group",
                                "name": "Group",
                              },
                            ],
                            "options": Array [
                              Object {
                                "id": "group",
                                "name": "Group",
                              },
                              Object {
                                "id": "stack",
                                "name": "Stack",
                              },
                            ],
                          },
                        },
                        Object {
                          "component": [Function],
                          "eleType": "input",
                          "mapTo": "labelSize",
                          "name": "Label size",
                        },
                        Object {
                          "component": [Function],
                          "defaultState": 0,
                          "eleType": "slider",
                          "mapTo": "rotateBarLabels",
                          "name": "Rotate bar labels",
                          "props": Object {
                            "max": 90,
                            "min": -90,
                            "showTicks": true,
                            "ticks": Array [
                              Object {
                                "label": "-90°",
                                "value": -90,
                              },
                              Object {
                                "label": "-45°",
                                "value": -45,
                              },
                              Object {
                                "label": "0°",
                                "value": 0,
                              },
                              Object {
                                "label": "45°",
                                "value": 45,
                              },
                              Object {
                                "label": "90°",
                                "value": 90,
                              },
                            ],
                          },
                        },
                        Object {
                          "component": [Function],
                          "defaultState": 0.7,
                          "eleType": "slider",
                          "mapTo": "groupWidth",
                          "name": "Group width",
                          "props": Object {
                            "max": 1,
                            "step": 0.01,
                          },
                        },
                        Object {
                          "component": [Function],
                          "defaultState": 0.97,
                          "eleType": "slider",
                          "mapTo": "barWidth",
                          "name": "Bar width",
                          "props": Object {
                            "max": 1,
                            "step": 0.01,
                          },
                        },
                        Object {
                          "component": [Function],
                          "defaultState": 2,
                          "eleType": "slider",
                          "mapTo": "lineWidth",
                          "name": "Line width",
                          "props": Object {
                            "max": 10,
                          },
                        },
                        Object {
                          "component": [Function],
                          "defaultState": 70,
                          "eleType": "slider",
                          "mapTo": "fillOpacity",
                          "name": "Fill opacity",
                          "props": Object {
                            "max": 100,
                          },
                        },
                      ],
                    },
                  ],
                }
              }
              visualizations={
                Object {
                  "data": Object {
                    "appData": Object {
                      "fromApp": false,
                    },
                    "defaultAxes": Object {},
                    "indexFields": Object {
                      "availableFields": Array [
                        Object {
                          "name": "agent",
                          "type": "string",
                        },
                        Object {
                          "name": "bytes",
                          "type": "long",
                        },
                        Object {
                          "name": "clientip",
                          "type": "ip",
                        },
                        Object {
                          "name": "event",
                          "type": "struct",
                        },
                        Object {
                          "name": "extension",
                          "type": "string",
                        },
                        Object {
                          "name": "geo",
                          "type": "struct",
                        },
                        Object {
                          "name": "host",
                          "type": "string",
                        },
                        Object {
                          "name": "index",
                          "type": "string",
                        },
                        Object {
                          "name": "ip",
                          "type": "ip",
                        },
                        Object {
                          "name": "machine",
                          "type": "struct",
                        },
                        Object {
                          "name": "memory",
                          "type": "double",
                        },
                        Object {
                          "name": "message",
                          "type": "string",
                        },
                        Object {
                          "name": "phpmemory",
                          "type": "long",
                        },
                        Object {
                          "name": "referer",
                          "type": "string",
                        },
                        Object {
                          "name": "request",
                          "type": "string",
                        },
                        Object {
                          "name": "response",
                          "type": "string",
                        },
                        Object {
                          "name": "tags",
                          "type": "string",
                        },
                        Object {
                          "name": "timestamp",
                          "type": "timestamp",
                        },
                        Object {
                          "name": "url",
                          "type": "string",
                        },
                        Object {
                          "name": "utc_time",
                          "type": "timestamp",
                        },
                      ],
                      "queriedFields": Array [
                        Object {
                          "name": "double_per_ip_bytes",
                          "type": "long",
                        },
                        Object {
                          "name": "host",
                          "type": "text",
                        },
                        Object {
                          "name": "ip_count",
                          "type": "integer",
                        },
                        Object {
                          "name": "per_ip_bytes",
                          "type": "long",
                        },
                        Object {
                          "name": "resp_code",
                          "type": "text",
                        },
                        Object {
                          "name": "sum_bytes",
                          "type": "long",
                        },
                      ],
                      "selectedFields": Array [],
                      "unselectedFields": Array [],
                    },
                    "query": Object {},
                    "rawVizData": Object {
                      "data": Object {
                        "count()": Array [
                          154,
                          1753,
                          116,
                          468,
                          1964,
                          219,
                        ],
                        "tags": Array [
                          "error",
                          "info",
                          "login",
                          "security",
                          "success",
                          "warning",
                        ],
                      },
                      "jsonData": Array [
                        Object {
                          "count()": 154,
                          "tags": "error",
                        },
                        Object {
                          "count()": 1753,
                          "tags": "info",
                        },
                        Object {
                          "count()": 116,
                          "tags": "login",
                        },
                        Object {
                          "count()": 468,
                          "tags": "security",
                        },
                        Object {
                          "count()": 1964,
                          "tags": "success",
                        },
                        Object {
                          "count()": 219,
                          "tags": "warning",
                        },
                      ],
                      "metadata": Object {
                        "fields": Array [
                          Object {
                            "name": "count()",
                            "type": "integer",
                          },
                          Object {
                            "name": "tags",
                            "type": "text",
                          },
                        ],
                        "size": 6,
                        "status": 200,
                      },
                    },
                    "userConfigs": Object {
                      "dataConfig": Object {
                        "valueOptions": Object {
                          "dimensions": Array [
                            Object {
                              "label": "tags",
                              "name": "tags",
                              "type": "text",
                            },
                          ],
                          "metrics": Array [
                            Object {
                              "label": "count()",
                              "name": "count()",
                              "side": "left",
                              "type": "integer",
                            },
                          ],
                        },
                      },
                    },
                  },
                  "vis": Object {
                    "barwidth": 0.97,
                    "category": "Visualizations",
                    "categoryaxis": "xaxis",
                    "component": [Function],
                    "editorconfig": Object {
                      "panelTabs": Array [
                        Object {
                          "editor": [Function],
                          "id": "data-panel",
                          "mapTo": "dataConfig",
                          "name": "Style",
                          "sections": Array [
                            Object {
                              "editor": [Function],
                              "id": "tooltip_options",
                              "mapTo": "tooltipOptions",
                              "name": "Tooltip options",
                              "schemas": Array [
                                Object {
                                  "component": null,
                                  "mapTo": "tooltipMode",
                                  "name": "Tooltip mode",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                      Object {
                                        "id": "hidden",
                                        "name": "Hidden",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": null,
                                  "mapTo": "tooltipText",
                                  "name": "Tooltip text",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "all",
                                        "name": "All",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "all",
                                        "name": "All",
                                      },
                                      Object {
                                        "id": "x",
                                        "name": "Dimension",
                                      },
                                      Object {
                                        "id": "y",
                                        "name": "Series",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                            Object {
                              "editor": [Function],
                              "id": "legend",
                              "mapTo": "legend",
                              "name": "Legend",
                              "schemas": Array [
                                Object {
                                  "component": null,
                                  "mapTo": "showLegend",
                                  "name": "Show legend",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                      Object {
                                        "id": "hidden",
                                        "name": "Hidden",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": null,
                                  "mapTo": "position",
                                  "name": "Position",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "v",
                                        "name": "Right",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "v",
                                        "name": "Right",
                                      },
                                      Object {
                                        "id": "h",
                                        "name": "Bottom",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "eleType": "input",
                                  "mapTo": "legendSize",
                                  "name": "Legend size",
                                  "title": "Legend size",
                                },
                              ],
                            },
                            Object {
                              "editor": [Function],
                              "id": "chart_styles",
                              "mapTo": "chartStyles",
                              "name": "Chart styles",
                              "schemas": Array [
                                Object {
                                  "component": [Function],
                                  "eleType": "buttons",
                                  "mapTo": "mode",
                                  "name": "Mode",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "group",
                                        "name": "Group",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "group",
                                        "name": "Group",
                                      },
                                      Object {
                                        "id": "stack",
                                        "name": "Stack",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "eleType": "input",
                                  "mapTo": "labelSize",
                                  "name": "Label size",
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 0,
                                  "eleType": "slider",
                                  "mapTo": "rotateBarLabels",
                                  "name": "Rotate bar labels",
                                  "props": Object {
                                    "max": 90,
                                    "min": -90,
                                    "showTicks": true,
                                    "ticks": Array [
                                      Object {
                                        "label": "-90°",
                                        "value": -90,
                                      },
                                      Object {
                                        "label": "-45°",
                                        "value": -45,
                                      },
                                      Object {
                                        "label": "0°",
                                        "value": 0,
                                      },
                                      Object {
                                        "label": "45°",
                                        "value": 45,
                                      },
                                      Object {
                                        "label": "90°",
                                        "value": 90,
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 0.7,
                                  "eleType": "slider",
                                  "mapTo": "groupWidth",
                                  "name": "Group width",
                                  "props": Object {
                                    "max": 1,
                                    "step": 0.01,
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 0.97,
                                  "eleType": "slider",
                                  "mapTo": "barWidth",
                                  "name": "Bar width",
                                  "props": Object {
                                    "max": 1,
                                    "step": 0.01,
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 2,
                                  "eleType": "slider",
                                  "mapTo": "lineWidth",
                                  "name": "Line width",
                                  "props": Object {
                                    "max": 10,
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 70,
                                  "eleType": "slider",
                                  "mapTo": "fillOpacity",
                                  "name": "Fill opacity",
                                  "props": Object {
                                    "max": 100,
                                  },
                                },
                              ],
                            },
                          ],
                        },
                        Object {
                          "editor": [Function],
                          "id": "availability-panel",
                          "mapTo": "availabilityConfig",
                          "name": "Availability",
                        },
                      ],
                    },
                    "fillopacity": 70,
                    "fulllabel": "Vertical bar",
                    "groupwidth": 0.7,
                    "icon": [Function],
                    "icontype": "visBarVerticalStacked",
                    "id": "bar",
                    "label": "Vertical bar",
                    "labelangle": 0,
                    "legendposition": "v",
                    "linewidth": 2,
                    "mode": "group",
                    "name": "bar",
                    "orientation": "v",
                    "selection": Object {
                      "dataLoss": "nothing",
                    },
                    "seriesaxis": "yaxis",
                    "showlegend": "show",
                    "type": "bar",
                    "visconfig": Object {
                      "config": Object {
                        "displaylogo": false,
                        "responsive": true,
                      },
                      "isUniColor": false,
                      "layout": Object {
                        "height": 1180,
                        "legend": Object {
                          "orientation": "v",
                          "traceorder": "normal",
                        },
                        "margin": Object {
                          "b": 30,
                          "l": 60,
                          "pad": 0,
                          "r": 30,
                          "t": 50,
                        },
                        "showlegend": true,
                      },
                    },
                  },
                }
              }
              vizState={
                Object {
                  "valueOptions": Object {
                    "dimensions": Array [
                      Object {
                        "label": "tags",
                        "name": "tags",
                        "type": "text",
                      },
                    ],
                    "metrics": Array [
                      Object {
                        "label": "count()",
                        "name": "count()",
                        "side": "left",
                        "type": "integer",
                      },
                    ],
                  },
                }
              }
            >
              <div
                className="visEditorSidebar__config"
              >
                <EuiForm
                  className="visEditorSidebar__form"
                >
                  <div
                    className="euiForm visEditorSidebar__form"
                  >
                    <EuiFormRow
                      describedByIds={Array []}
                      display="row"
                      fullWidth={false}
                      hasChildLabel={true}
                      hasEmptyLabelSpace={false}
                      labelType="label"
                    >
                      <div
                        className="euiFormRow"
                        id="random_html_id-row"
                      >
                        <div
                          className="euiFormRow__fieldWrapper"
                        >
                          <ConfigPanelOptions
                            handleConfigChange={[Function]}
                            id="random_html_id"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            visualizations={
                              Object {
                                "data": Object {
                                  "appData": Object {
                                    "fromApp": false,
                                  },
                                  "defaultAxes": Object {},
                                  "indexFields": Object {
                                    "availableFields": Array [
                                      Object {
                                        "name": "agent",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "clientip",
                                        "type": "ip",
                                      },
                                      Object {
                                        "name": "event",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "extension",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "geo",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "host",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "index",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "ip",
                                        "type": "ip",
                                      },
                                      Object {
                                        "name": "machine",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "memory",
                                        "type": "double",
                                      },
                                      Object {
                                        "name": "message",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "phpmemory",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "referer",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "request",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "response",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "tags",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "timestamp",
                                        "type": "timestamp",
                                      },
                                      Object {
                                        "name": "url",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "utc_time",
                                        "type": "timestamp",
                                      },
                                    ],
                                    "queriedFields": Array [
                                      Object {
                                        "name": "double_per_ip_bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "host",
                                        "type": "text",
                                      },
                                      Object {
                                        "name": "ip_count",
                                        "type": "integer",
                                      },
                                      Object {
                                        "name": "per_ip_bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "resp_code",
                                        "type": "text",
                                      },
                                      Object {
                                        "name": "sum_bytes",
                                        "type": "long",
                                      },
                                    ],
                                    "selectedFields": Array [],
                                    "unselectedFields": Array [],
                                  },
                                  "query": Object {},
                                  "rawVizData": Object {
                                    "data": Object {
                                      "count()": Array [
                                        154,
                                        1753,
                                        116,
                                        468,
                                        1964,
                                        219,
                                      ],
                                      "tags": Array [
                                        "error",
                                        "info",
                                        "login",
                                        "security",
                                        "success",
                                        "warning",
                                      ],
                                    },
                                    "jsonData": Array [
                                      Object {
                                        "count()": 154,
                                        "tags": "error",
                                      },
                                      Object {
                                        "count()": 1753,
                                        "tags": "info",
                                      },
                                      Object {
                                        "count()": 116,
                                        "tags": "login",
                                      },
                                      Object {
                                        "count()": 468,
                                        "tags": "security",
                                      },
                                      Object {
                                        "count()": 1964,
                                        "tags": "success",
                                      },
                                      Object {
                                        "count()": 219,
                                        "tags": "warning",
                                      },
                                    ],
                                    "metadata": Object {
                                      "fields": Array [
                                        Object {
                                          "name": "count()",
                                          "type": "integer",
                                        },
                                        Object {
                                          "name": "tags",
                                          "type": "text",
                                        },
                                      ],
                                      "size": 6,
                                      "status": 200,
                                    },
                                  },
                                  "userConfigs": Object {
                                    "dataConfig": Object {
                                      "valueOptions": Object {
                                        "dimensions": Array [
                                          Object {
                                            "label": "tags",
                                            "name": "tags",
                                            "type": "text",
                                          },
                                        ],
                                        "metrics": Array [
                                          Object {
                                            "label": "count()",
                                            "name": "count()",
                                            "side": "left",
                                            "type": "integer",
                                          },
                                        ],
                                      },
                                    },
                                  },
                                },
                                "vis": Object {
                                  "barwidth": 0.97,
                                  "category": "Visualizations",
                                  "categoryaxis": "xaxis",
                                  "component": [Function],
                                  "editorconfig": Object {
                                    "panelTabs": Array [
                                      Object {
                                        "editor": [Function],
                                        "id": "data-panel",
                                        "mapTo": "dataConfig",
                                        "name": "Style",
                                        "sections": Array [
                                          Object {
                                            "editor": [Function],
                                            "id": "tooltip_options",
                                            "mapTo": "tooltipOptions",
                                            "name": "Tooltip options",
                                            "schemas": Array [
                                              Object {
                                                "component": null,
                                                "mapTo": "tooltipMode",
                                                "name": "Tooltip mode",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                    Object {
                                                      "id": "hidden",
                                                      "name": "Hidden",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": null,
                                                "mapTo": "tooltipText",
                                                "name": "Tooltip text",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "all",
                                                      "name": "All",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "all",
                                                      "name": "All",
                                                    },
                                                    Object {
                                                      "id": "x",
                                                      "name": "Dimension",
                                                    },
                                                    Object {
                                                      "id": "y",
                                                      "name": "Series",
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                          Object {
                                            "editor": [Function],
                                            "id": "legend",
                                            "mapTo": "legend",
                                            "name": "Legend",
                                            "schemas": Array [
                                              Object {
                                                "component": null,
                                                "mapTo": "showLegend",
                                                "name": "Show legend",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                    Object {
                                                      "id": "hidden",
                                                      "name": "Hidden",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": null,
                                                "mapTo": "position",
                                                "name": "Position",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "v",
                                                      "name": "Right",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "v",
                                                      "name": "Right",
                                                    },
                                                    Object {
                                                      "id": "h",
                                                      "name": "Bottom",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "eleType": "input",
                                                "mapTo": "legendSize",
                                                "name": "Legend size",
                                                "title": "Legend size",
                                              },
                                            ],
                                          },
                                          Object {
                                            "editor": [Function],
                                            "id": "chart_styles",
                                            "mapTo": "chartStyles",
                                            "name": "Chart styles",
                                            "schemas": Array [
                                              Object {
                                                "component": [Function],
                                                "eleType": "buttons",
                                                "mapTo": "mode",
                                                "name": "Mode",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "group",
                                                      "name": "Group",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "group",
                                                      "name": "Group",
                                                    },
                                                    Object {
                                                      "id": "stack",
                                                      "name": "Stack",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "eleType": "input",
                                                "mapTo": "labelSize",
                                                "name": "Label size",
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0,
                                                "eleType": "slider",
                                                "mapTo": "rotateBarLabels",
                                                "name": "Rotate bar labels",
                                                "props": Object {
                                                  "max": 90,
                                                  "min": -90,
                                                  "showTicks": true,
                                                  "ticks": Array [
                                                    Object {
                                                      "label": "-90°",
                                                      "value": -90,
                                                    },
                                                    Object {
                                                      "label": "-45°",
                                                      "value": -45,
                                                    },
                                                    Object {
                                                      "label": "0°",
                                                      "value": 0,
                                                    },
                                                    Object {
                                                      "label": "45°",
                                                      "value": 45,
                                                    },
                                                    Object {
                                                      "label": "90°",
                                                      "value": 90,
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0.7,
                                                "eleType": "slider",
                                                "mapTo": "groupWidth",
                                                "name": "Group width",
                                                "props": Object {
                                                  "max": 1,
                                                  "step": 0.01,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0.97,
                                                "eleType": "slider",
                                                "mapTo": "barWidth",
                                                "name": "Bar width",
                                                "props": Object {
                                                  "max": 1,
                                                  "step": 0.01,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 2,
                                                "eleType": "slider",
                                                "mapTo": "lineWidth",
                                                "name": "Line width",
                                                "props": Object {
                                                  "max": 10,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 70,
                                                "eleType": "slider",
                                                "mapTo": "fillOpacity",
                                                "name": "Fill opacity",
                                                "props": Object {
                                                  "max": 100,
                                                },
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "availability-panel",
                                        "mapTo": "availabilityConfig",
                                        "name": "Availability",
                                      },
                                    ],
                                  },
                                  "fillopacity": 70,
                                  "fulllabel": "Vertical bar",
                                  "groupwidth": 0.7,
                                  "icon": [Function],
                                  "icontype": "visBarVerticalStacked",
                                  "id": "bar",
                                  "label": "Vertical bar",
                                  "labelangle": 0,
                                  "legendposition": "v",
                                  "linewidth": 2,
                                  "mode": "group",
                                  "name": "bar",
                                  "orientation": "v",
                                  "selection": Object {
                                    "dataLoss": "nothing",
                                  },
                                  "seriesaxis": "yaxis",
                                  "showlegend": "show",
                                  "type": "bar",
                                  "visconfig": Object {
                                    "config": Object {
                                      "displaylogo": false,
                                      "responsive": true,
                                    },
                                    "isUniColor": false,
                                    "layout": Object {
                                      "height": 1180,
                                      "legend": Object {
                                        "orientation": "v",
                                        "traceorder": "normal",
                                      },
                                      "margin": Object {
                                        "b": 30,
                                        "l": 60,
                                        "pad": 0,
                                        "r": 30,
                                        "t": 50,
                                      },
                                      "showlegend": true,
                                    },
                                  },
                                },
                              }
                            }
                          >
                            <EuiAccordion
                              arrowDisplay="left"
                              buttonContent="Panel options"
                              id="configPanel__panelOptions"
                              initialIsOpen={true}
                              isLoading={false}
                              isLoadingMessage={false}
                              paddingSize="s"
                            >
                              <div
                                className="euiAccordion euiAccordion-isOpen"
                              >
                                <div
                                  className="euiAccordion__triggerWrapper"
                                >
                                  <button
                                    aria-controls="configPanel__panelOptions"
                                    aria-expanded={true}
                                    className="euiAccordion__button"
                                    id="random_html_id"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <span
                                      className="euiAccordion__iconWrapper"
                                    >
                                      <EuiIcon
                                        className="euiAccordion__icon euiAccordion__icon-isOpen"
                                        size="m"
                                        type="arrowRight"
                                      >
                                        <EuiIconEmpty
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                          focusable="false"
                                          role="img"
                                          style={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                            focusable="false"
                                            height={16}
                                            role="img"
                                            style={null}
                                            viewBox="0 0 16 16"
                                            width={16}
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </EuiIconEmpty>
                                      </EuiIcon>
                                    </span>
                                    <span
                                      className="euiIEFlexWrapFix"
                                    >
                                      Panel options
                                    </span>
                                  </button>
                                </div>
                                <div
                                  aria-labelledby="random_html_id"
                                  className="euiAccordion__childWrapper"
                                  id="configPanel__panelOptions"
                                  role="region"
                                  tabIndex={-1}
                                >
                                  <EuiResizeObserver
                                    onResize={[Function]}
                                  >
                                    <div>
                                      <div
                                        className="euiAccordion__padding--s"
                                      >
                                        <EuiForm
                                          component="form"
                                        >
                                          <form
                                            className="euiForm"
                                          >
                                            <EuiFormRow
                                              describedByIds={Array []}
                                              display="row"
                                              fullWidth={true}
                                              hasChildLabel={true}
                                              hasEmptyLabelSpace={false}
                                              helpText="Name your visualization."
                                              label="Title"
                                              labelType="label"
                                            >
                                              <div
                                                className="euiFormRow euiFormRow--fullWidth"
                                                id="random_html_id-row"
                                              >
                                                <div
                                                  className="euiFormRow__labelWrapper"
                                                >
                                                  <EuiFormLabel
                                                    className="euiFormRow__label"
                                                    htmlFor="random_html_id"
                                                    isFocused={false}
                                                    type="label"
                                                  >
                                                    <label
                                                      className="euiFormLabel euiFormRow__label"
                                                      htmlFor="random_html_id"
                                                    >
                                                      Title
                                                    </label>
                                                  </EuiFormLabel>
                                                </div>
                                                <div
                                                  className="euiFormRow__fieldWrapper"
                                                >
                                                  <EuiFieldText
                                                    aria-describedby="random_html_id-help-0"
                                                    id="random_html_id"
                                                    name="title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder="Title"
                                                    value=""
                                                  >
                                                    <EuiFormControlLayout
                                                      fullWidth={false}
                                                      inputId="random_html_id"
                                                    >
                                                      <div
                                                        className="euiFormControlLayout"
                                                      >
                                                        <div
                                                          className="euiFormControlLayout__childrenWrapper"
                                                        >
                                                          <EuiValidatableControl>
                                                            <input
                                                              aria-describedby="random_html_id-help-0"
                                                              className="euiFieldText"
                                                              id="random_html_id"
                                                              name="title"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              placeholder="Title"
                                                              type="text"
                                                              value=""
                                                            />
                                                          </EuiValidatableControl>
                                                          <EuiFormControlLayoutIcons />
                                                        </div>
                                                      </div>
                                                    </EuiFormControlLayout>
                                                  </EuiFieldText>
                                                  <EuiFormHelpText
                                                    className="euiFormRow__text"
                                                    id="random_html_id-help-0"
                                                    key="Name your visualization."
                                                  >
                                                    <div
                                                      className="euiFormHelpText euiFormRow__text"
                                                      id="random_html_id-help-0"
                                                    >
                                                      Name your visualization.
                                                    </div>
                                                  </EuiFormHelpText>
                                                </div>
                                              </div>
                                            </EuiFormRow>
                                            <EuiFormRow
                                              describedByIds={Array []}
                                              display="row"
                                              fullWidth={false}
                                              hasChildLabel={true}
                                              hasEmptyLabelSpace={false}
                                              label="Description"
                                              labelType="label"
                                            >
                                              <div
                                                className="euiFormRow"
                                                id="random_html_id-row"
                                              >
                                                <div
                                                  className="euiFormRow__labelWrapper"
                                                >
                                                  <EuiFormLabel
                                                    className="euiFormRow__label"
                                                    htmlFor="random_html_id"
                                                    isFocused={false}
                                                    type="label"
                                                  >
                                                    <label
                                                      className="euiFormLabel euiFormRow__label"
                                                      htmlFor="random_html_id"
                                                    >
                                                      Description
                                                    </label>
                                                  </EuiFormLabel>
                                                </div>
                                                <div
                                                  className="euiFormRow__fieldWrapper"
                                                >
                                                  <EuiTextArea
                                                    aria-label="Use aria labels when no actual label is in use"
                                                    id="random_html_id"
                                                    name="description"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder="Description"
                                                    value=""
                                                  >
                                                    <EuiValidatableControl>
                                                      <textarea
                                                        aria-label="Use aria labels when no actual label is in use"
                                                        className="euiTextArea euiTextArea--resizeVertical"
                                                        id="random_html_id"
                                                        name="description"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        placeholder="Description"
                                                        rows={6}
                                                        value=""
                                                      />
                                                    </EuiValidatableControl>
                                                  </EuiTextArea>
                                                </div>
                                              </div>
                                            </EuiFormRow>
                                          </form>
                                        </EuiForm>
                                      </div>
                                    </div>
                                  </EuiResizeObserver>
                                </div>
                              </div>
                            </EuiAccordion>
                          </ConfigPanelOptions>
                        </div>
                      </div>
                    </EuiFormRow>
                    <EuiFormRow
                      describedByIds={Array []}
                      display="row"
                      fullWidth={true}
                      hasChildLabel={true}
                      hasEmptyLabelSpace={false}
                      labelType="label"
                    >
                      <div
                        className="euiFormRow euiFormRow--fullWidth"
                        id="random_html_id-row"
                      >
                        <div
                          className="euiFormRow__fieldWrapper"
                        >
                          <ConfigTooltip
                            handleConfigChange={[Function]}
                            id="random_html_id"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            props={Object {}}
                            schemas={
                              Array [
                                Object {
                                  "component": null,
                                  "mapTo": "tooltipMode",
                                  "name": "Tooltip mode",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                      Object {
                                        "id": "hidden",
                                        "name": "Hidden",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": null,
                                  "mapTo": "tooltipText",
                                  "name": "Tooltip text",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "all",
                                        "name": "All",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "all",
                                        "name": "All",
                                      },
                                      Object {
                                        "id": "x",
                                        "name": "Dimension",
                                      },
                                      Object {
                                        "id": "y",
                                        "name": "Series",
                                      },
                                    ],
                                  },
                                },
                              ]
                            }
                            sectionId="tooltip_options"
                            sectionName="Tooltip options"
                            visualizations={
                              Object {
                                "data": Object {
                                  "appData": Object {
                                    "fromApp": false,
                                  },
                                  "defaultAxes": Object {},
                                  "indexFields": Object {
                                    "availableFields": Array [
                                      Object {
                                        "name": "agent",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "clientip",
                                        "type": "ip",
                                      },
                                      Object {
                                        "name": "event",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "extension",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "geo",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "host",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "index",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "ip",
                                        "type": "ip",
                                      },
                                      Object {
                                        "name": "machine",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "memory",
                                        "type": "double",
                                      },
                                      Object {
                                        "name": "message",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "phpmemory",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "referer",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "request",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "response",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "tags",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "timestamp",
                                        "type": "timestamp",
                                      },
                                      Object {
                                        "name": "url",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "utc_time",
                                        "type": "timestamp",
                                      },
                                    ],
                                    "queriedFields": Array [
                                      Object {
                                        "name": "double_per_ip_bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "host",
                                        "type": "text",
                                      },
                                      Object {
                                        "name": "ip_count",
                                        "type": "integer",
                                      },
                                      Object {
                                        "name": "per_ip_bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "resp_code",
                                        "type": "text",
                                      },
                                      Object {
                                        "name": "sum_bytes",
                                        "type": "long",
                                      },
                                    ],
                                    "selectedFields": Array [],
                                    "unselectedFields": Array [],
                                  },
                                  "query": Object {},
                                  "rawVizData": Object {
                                    "data": Object {
                                      "count()": Array [
                                        154,
                                        1753,
                                        116,
                                        468,
                                        1964,
                                        219,
                                      ],
                                      "tags": Array [
                                        "error",
                                        "info",
                                        "login",
                                        "security",
                                        "success",
                                        "warning",
                                      ],
                                    },
                                    "jsonData": Array [
                                      Object {
                                        "count()": 154,
                                        "tags": "error",
                                      },
                                      Object {
                                        "count()": 1753,
                                        "tags": "info",
                                      },
                                      Object {
                                        "count()": 116,
                                        "tags": "login",
                                      },
                                      Object {
                                        "count()": 468,
                                        "tags": "security",
                                      },
                                      Object {
                                        "count()": 1964,
                                        "tags": "success",
                                      },
                                      Object {
                                        "count()": 219,
                                        "tags": "warning",
                                      },
                                    ],
                                    "metadata": Object {
                                      "fields": Array [
                                        Object {
                                          "name": "count()",
                                          "type": "integer",
                                        },
                                        Object {
                                          "name": "tags",
                                          "type": "text",
                                        },
                                      ],
                                      "size": 6,
                                      "status": 200,
                                    },
                                  },
                                  "userConfigs": Object {
                                    "dataConfig": Object {
                                      "valueOptions": Object {
                                        "dimensions": Array [
                                          Object {
                                            "label": "tags",
                                            "name": "tags",
                                            "type": "text",
                                          },
                                        ],
                                        "metrics": Array [
                                          Object {
                                            "label": "count()",
                                            "name": "count()",
                                            "side": "left",
                                            "type": "integer",
                                          },
                                        ],
                                      },
                                    },
                                  },
                                },
                                "vis": Object {
                                  "barwidth": 0.97,
                                  "category": "Visualizations",
                                  "categoryaxis": "xaxis",
                                  "component": [Function],
                                  "editorconfig": Object {
                                    "panelTabs": Array [
                                      Object {
                                        "editor": [Function],
                                        "id": "data-panel",
                                        "mapTo": "dataConfig",
                                        "name": "Style",
                                        "sections": Array [
                                          Object {
                                            "editor": [Function],
                                            "id": "tooltip_options",
                                            "mapTo": "tooltipOptions",
                                            "name": "Tooltip options",
                                            "schemas": Array [
                                              Object {
                                                "component": null,
                                                "mapTo": "tooltipMode",
                                                "name": "Tooltip mode",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                    Object {
                                                      "id": "hidden",
                                                      "name": "Hidden",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": null,
                                                "mapTo": "tooltipText",
                                                "name": "Tooltip text",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "all",
                                                      "name": "All",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "all",
                                                      "name": "All",
                                                    },
                                                    Object {
                                                      "id": "x",
                                                      "name": "Dimension",
                                                    },
                                                    Object {
                                                      "id": "y",
                                                      "name": "Series",
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                          Object {
                                            "editor": [Function],
                                            "id": "legend",
                                            "mapTo": "legend",
                                            "name": "Legend",
                                            "schemas": Array [
                                              Object {
                                                "component": null,
                                                "mapTo": "showLegend",
                                                "name": "Show legend",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                    Object {
                                                      "id": "hidden",
                                                      "name": "Hidden",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": null,
                                                "mapTo": "position",
                                                "name": "Position",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "v",
                                                      "name": "Right",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "v",
                                                      "name": "Right",
                                                    },
                                                    Object {
                                                      "id": "h",
                                                      "name": "Bottom",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "eleType": "input",
                                                "mapTo": "legendSize",
                                                "name": "Legend size",
                                                "title": "Legend size",
                                              },
                                            ],
                                          },
                                          Object {
                                            "editor": [Function],
                                            "id": "chart_styles",
                                            "mapTo": "chartStyles",
                                            "name": "Chart styles",
                                            "schemas": Array [
                                              Object {
                                                "component": [Function],
                                                "eleType": "buttons",
                                                "mapTo": "mode",
                                                "name": "Mode",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "group",
                                                      "name": "Group",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "group",
                                                      "name": "Group",
                                                    },
                                                    Object {
                                                      "id": "stack",
                                                      "name": "Stack",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "eleType": "input",
                                                "mapTo": "labelSize",
                                                "name": "Label size",
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0,
                                                "eleType": "slider",
                                                "mapTo": "rotateBarLabels",
                                                "name": "Rotate bar labels",
                                                "props": Object {
                                                  "max": 90,
                                                  "min": -90,
                                                  "showTicks": true,
                                                  "ticks": Array [
                                                    Object {
                                                      "label": "-90°",
                                                      "value": -90,
                                                    },
                                                    Object {
                                                      "label": "-45°",
                                                      "value": -45,
                                                    },
                                                    Object {
                                                      "label": "0°",
                                                      "value": 0,
                                                    },
                                                    Object {
                                                      "label": "45°",
                                                      "value": 45,
                                                    },
                                                    Object {
                                                      "label": "90°",
                                                      "value": 90,
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0.7,
                                                "eleType": "slider",
                                                "mapTo": "groupWidth",
                                                "name": "Group width",
                                                "props": Object {
                                                  "max": 1,
                                                  "step": 0.01,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0.97,
                                                "eleType": "slider",
                                                "mapTo": "barWidth",
                                                "name": "Bar width",
                                                "props": Object {
                                                  "max": 1,
                                                  "step": 0.01,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 2,
                                                "eleType": "slider",
                                                "mapTo": "lineWidth",
                                                "name": "Line width",
                                                "props": Object {
                                                  "max": 10,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 70,
                                                "eleType": "slider",
                                                "mapTo": "fillOpacity",
                                                "name": "Fill opacity",
                                                "props": Object {
                                                  "max": 100,
                                                },
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "availability-panel",
                                        "mapTo": "availabilityConfig",
                                        "name": "Availability",
                                      },
                                    ],
                                  },
                                  "fillopacity": 70,
                                  "fulllabel": "Vertical bar",
                                  "groupwidth": 0.7,
                                  "icon": [Function],
                                  "icontype": "visBarVerticalStacked",
                                  "id": "bar",
                                  "label": "Vertical bar",
                                  "labelangle": 0,
                                  "legendposition": "v",
                                  "linewidth": 2,
                                  "mode": "group",
                                  "name": "bar",
                                  "orientation": "v",
                                  "selection": Object {
                                    "dataLoss": "nothing",
                                  },
                                  "seriesaxis": "yaxis",
                                  "showlegend": "show",
                                  "type": "bar",
                                  "visconfig": Object {
                                    "config": Object {
                                      "displaylogo": false,
                                      "responsive": true,
                                    },
                                    "isUniColor": false,
                                    "layout": Object {
                                      "height": 1180,
                                      "legend": Object {
                                        "orientation": "v",
                                        "traceorder": "normal",
                                      },
                                      "margin": Object {
                                        "b": 30,
                                        "l": 60,
                                        "pad": 0,
                                        "r": 30,
                                        "t": 50,
                                      },
                                      "showlegend": true,
                                    },
                                  },
                                },
                              }
                            }
                            vizState={Object {}}
                          >
                            <EuiAccordion
                              arrowDisplay="left"
                              buttonContent="Tooltip options"
                              id="random_html_id"
                              initialIsOpen={true}
                              isLoading={false}
                              isLoadingMessage={false}
                              paddingSize="s"
                            >
                              <div
                                className="euiAccordion euiAccordion-isOpen"
                              >
                                <div
                                  className="euiAccordion__triggerWrapper"
                                >
                                  <button
                                    aria-controls="random_html_id"
                                    aria-expanded={true}
                                    className="euiAccordion__button"
                                    id="random_html_id"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <span
                                      className="euiAccordion__iconWrapper"
                                    >
                                      <EuiIcon
                                        className="euiAccordion__icon euiAccordion__icon-isOpen"
                                        size="m"
                                        type="arrowRight"
                                      >
                                        <EuiIconEmpty
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                          focusable="false"
                                          role="img"
                                          style={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                            focusable="false"
                                            height={16}
                                            role="img"
                                            style={null}
                                            viewBox="0 0 16 16"
                                            width={16}
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </EuiIconEmpty>
                                      </EuiIcon>
                                    </span>
                                    <span
                                      className="euiIEFlexWrapFix"
                                    >
                                      Tooltip options
                                    </span>
                                  </button>
                                </div>
                                <div
                                  aria-labelledby="random_html_id"
                                  className="euiAccordion__childWrapper"
                                  id="random_html_id"
                                  role="region"
                                  tabIndex={-1}
                                >
                                  <EuiResizeObserver
                                    onResize={[Function]}
                                  >
                                    <div>
                                      <div
                                        className="euiAccordion__padding--s"
                                      >
                                        <div
                                          id="random_html_id"
                                        >
                                          <ButtonGroupItem
                                            defaultSelections={
                                              Array [
                                                Object {
                                                  "id": "show",
                                                  "name": "Show",
                                                },
                                              ]
                                            }
                                            groupOptions={
                                              Array [
                                                Object {
                                                  "id": "show",
                                                  "label": "Show",
                                                  "name": "Show",
                                                },
                                                Object {
                                                  "id": "hidden",
                                                  "label": "Hidden",
                                                  "name": "Hidden",
                                                },
                                              ]
                                            }
                                            handleButtonChange={[Function]}
                                            idSelected="show"
                                            key="viz-series-0"
                                            legend="Tooltip mode"
                                            options={
                                              Array [
                                                Object {
                                                  "id": "show",
                                                  "name": "Show",
                                                },
                                                Object {
                                                  "id": "hidden",
                                                  "name": "Hidden",
                                                },
                                              ]
                                            }
                                            title="Tooltip mode"
                                            vizState={Object {}}
                                          >
                                            <EuiTitle
                                              size="xxs"
                                            >
                                              <h3
                                                className="euiTitle euiTitle--xxsmall"
                                              >
                                                Tooltip mode
                                              </h3>
                                            </EuiTitle>
                                            <EuiSpacer
                                              size="s"
                                            >
                                              <div
                                                className="euiSpacer euiSpacer--s"
                                              />
                                            </EuiSpacer>
                                            <div
                                              style={
                                                Object {
                                                  "width": "fit-content",
                                                }
                                              }
                                            >
                                              <EuiButtonGroup
                                                buttonSize="compressed"
                                                id="random_html_id"
                                                idSelected="show"
                                                isFullWidth={false}
                                                legend="Tooltip mode"
                                                name="Tooltip mode"
                                                onChange={[Function]}
                                                options={
                                                  Array [
                                                    Object {
                                                      "id": "show",
                                                      "label": "Show",
                                                      "name": "Show",
                                                    },
                                                    Object {
                                                      "id": "hidden",
                                                      "label": "Hidden",
                                                      "name": "Hidden",
                                                    },
                                                  ]
                                                }
                                              >
                                                <fieldset
                                                  className="euiButtonGroup euiButtonGroup--compressed euiButtonGroup--text"
                                                  disabled={false}
                                                  id="random_html_id"
                                                >
                                                  <EuiScreenReaderOnly>
                                                    <legend
                                                      className="euiScreenReaderOnly"
                                                    >
                                                      Tooltip mode
                                                    </legend>
                                                  </EuiScreenReaderOnly>
                                                  <div
                                                    className="euiButtonGroup__buttons"
                                                  >
                                                    <EuiButtonGroupButton
                                                      color="text"
                                                      element="label"
                                                      id="show"
                                                      isDisabled={false}
                                                      isIconOnly={false}
                                                      isSelected={true}
                                                      key="0"
                                                      label="Show"
                                                      name="Show"
                                                      onChange={[Function]}
                                                      size="compressed"
                                                    >
                                                      <EuiButtonDisplay
                                                        baseClassName="euiButtonGroupButton"
                                                        className="euiButtonGroupButton-isSelected"
                                                        color="text"
                                                        element="label"
                                                        fill={false}
                                                        htmlFor="random_html_id"
                                                        isDisabled={false}
                                                        onClick={[Function]}
                                                        size="s"
                                                        textProps={
                                                          Object {
                                                            "className": "euiButtonGroupButton__textShift",
                                                            "data-text": "Show",
                                                            "ref": [Function],
                                                            "title": "Show",
                                                          }
                                                        }
                                                      >
                                                        <label
                                                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton-isSelected"
                                                          disabled={false}
                                                          htmlFor="random_html_id"
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "minWidth": undefined,
                                                            }
                                                          }
                                                        >
                                                          <EuiButtonContent
                                                            className="euiButton__content"
                                                            iconSide="left"
                                                            textProps={
                                                              Object {
                                                                "className": "euiButton__text euiButtonGroupButton__textShift",
                                                                "data-text": "Show",
                                                                "ref": [Function],
                                                                "title": "Show",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="euiButtonContent euiButton__content"
                                                            >
                                                              <span
                                                                className="euiButton__text euiButtonGroupButton__textShift"
                                                                data-text="Show"
                                                                title="Show"
                                                              >
                                                                <input
                                                                  checked={true}
                                                                  className="euiScreenReaderOnly"
                                                                  data-test-subj="show"
                                                                  disabled={false}
                                                                  id="random_html_id"
                                                                  name="Show"
                                                                  onChange={[Function]}
                                                                  type="radio"
                                                                />
                                                                Show
                                                              </span>
                                                            </span>
                                                          </EuiButtonContent>
                                                        </label>
                                                      </EuiButtonDisplay>
                                                    </EuiButtonGroupButton>
                                                    <EuiButtonGroupButton
                                                      color="text"
                                                      element="label"
                                                      id="hidden"
                                                      isDisabled={false}
                                                      isIconOnly={false}
                                                      isSelected={false}
                                                      key="1"
                                                      label="Hidden"
                                                      name="Hidden"
                                                      onChange={[Function]}
                                                      size="compressed"
                                                    >
                                                      <EuiButtonDisplay
                                                        baseClassName="euiButtonGroupButton"
                                                        className=""
                                                        color="text"
                                                        element="label"
                                                        fill={false}
                                                        htmlFor="random_html_id"
                                                        isDisabled={false}
                                                        onClick={[Function]}
                                                        size="s"
                                                        textProps={
                                                          Object {
                                                            "className": "euiButtonGroupButton__textShift",
                                                            "data-text": "Hidden",
                                                            "ref": [Function],
                                                            "title": "Hidden",
                                                          }
                                                        }
                                                      >
                                                        <label
                                                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                                          disabled={false}
                                                          htmlFor="random_html_id"
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "minWidth": undefined,
                                                            }
                                                          }
                                                        >
                                                          <EuiButtonContent
                                                            className="euiButton__content"
                                                            iconSide="left"
                                                            textProps={
                                                              Object {
                                                                "className": "euiButton__text euiButtonGroupButton__textShift",
                                                                "data-text": "Hidden",
                                                                "ref": [Function],
                                                                "title": "Hidden",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="euiButtonContent euiButton__content"
                                                            >
                                                              <span
                                                                className="euiButton__text euiButtonGroupButton__textShift"
                                                                data-text="Hidden"
                                                                title="Hidden"
                                                              >
                                                                <input
                                                                  checked={false}
                                                                  className="euiScreenReaderOnly"
                                                                  data-test-subj="hidden"
                                                                  disabled={false}
                                                                  id="random_html_id"
                                                                  name="Hidden"
                                                                  onChange={[Function]}
                                                                  type="radio"
                                                                />
                                                                Hidden
                                                              </span>
                                                            </span>
                                                          </EuiButtonContent>
                                                        </label>
                                                      </EuiButtonDisplay>
                                                    </EuiButtonGroupButton>
                                                  </div>
                                                </fieldset>
                                              </EuiButtonGroup>
                                            </div>
                                          </ButtonGroupItem>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                        </div>
                                        <div
                                          id="random_html_id"
                                        >
                                          <ButtonGroupItem
                                            defaultSelections={
                                              Array [
                                                Object {
                                                  "id": "all",
                                                  "name": "All",
                                                },
                                              ]
                                            }
                                            groupOptions={
                                              Array [
                                                Object {
                                                  "id": "all",
                                                  "label": "All",
                                                  "name": "All",
                                                },
                                                Object {
                                                  "id": "x",
                                                  "label": "Dimension",
                                                  "name": "Dimension",
                                                },
                                                Object {
                                                  "id": "y",
                                                  "label": "Series",
                                                  "name": "Series",
                                                },
                                              ]
                                            }
                                            handleButtonChange={[Function]}
                                            idSelected="all"
                                            key="viz-series-1"
                                            legend="Tooltip text"
                                            options={
                                              Array [
                                                Object {
                                                  "id": "all",
                                                  "name": "All",
                                                },
                                                Object {
                                                  "id": "x",
                                                  "name": "Dimension",
                                                },
                                                Object {
                                                  "id": "y",
                                                  "name": "Series",
                                                },
                                              ]
                                            }
                                            title="Tooltip text"
                                            vizState={Object {}}
                                          >
                                            <EuiTitle
                                              size="xxs"
                                            >
                                              <h3
                                                className="euiTitle euiTitle--xxsmall"
                                              >
                                                Tooltip text
                                              </h3>
                                            </EuiTitle>
                                            <EuiSpacer
                                              size="s"
                                            >
                                              <div
                                                className="euiSpacer euiSpacer--s"
                                              />
                                            </EuiSpacer>
                                            <div
                                              style={
                                                Object {
                                                  "width": "fit-content",
                                                }
                                              }
                                            >
                                              <EuiButtonGroup
                                                buttonSize="compressed"
                                                id="random_html_id"
                                                idSelected="all"
                                                isFullWidth={false}
                                                legend="Tooltip text"
                                                name="Tooltip text"
                                                onChange={[Function]}
                                                options={
                                                  Array [
                                                    Object {
                                                      "id": "all",
                                                      "label": "All",
                                                      "name": "All",
                                                    },
                                                    Object {
                                                      "id": "x",
                                                      "label": "Dimension",
                                                      "name": "Dimension",
                                                    },
                                                    Object {
                                                      "id": "y",
                                                      "label": "Series",
                                                      "name": "Series",
                                                    },
                                                  ]
                                                }
                                              >
                                                <fieldset
                                                  className="euiButtonGroup euiButtonGroup--compressed euiButtonGroup--text"
                                                  disabled={false}
                                                  id="random_html_id"
                                                >
                                                  <EuiScreenReaderOnly>
                                                    <legend
                                                      className="euiScreenReaderOnly"
                                                    >
                                                      Tooltip text
                                                    </legend>
                                                  </EuiScreenReaderOnly>
                                                  <div
                                                    className="euiButtonGroup__buttons"
                                                  >
                                                    <EuiButtonGroupButton
                                                      color="text"
                                                      element="label"
                                                      id="all"
                                                      isDisabled={false}
                                                      isIconOnly={false}
                                                      isSelected={true}
                                                      key="0"
                                                      label="All"
                                                      name="All"
                                                      onChange={[Function]}
                                                      size="compressed"
                                                    >
                                                      <EuiButtonDisplay
                                                        baseClassName="euiButtonGroupButton"
                                                        className="euiButtonGroupButton-isSelected"
                                                        color="text"
                                                        element="label"
                                                        fill={false}
                                                        htmlFor="random_html_id"
                                                        isDisabled={false}
                                                        onClick={[Function]}
                                                        size="s"
                                                        textProps={
                                                          Object {
                                                            "className": "euiButtonGroupButton__textShift",
                                                            "data-text": "All",
                                                            "ref": [Function],
                                                            "title": "All",
                                                          }
                                                        }
                                                      >
                                                        <label
                                                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton-isSelected"
                                                          disabled={false}
                                                          htmlFor="random_html_id"
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "minWidth": undefined,
                                                            }
                                                          }
                                                        >
                                                          <EuiButtonContent
                                                            className="euiButton__content"
                                                            iconSide="left"
                                                            textProps={
                                                              Object {
                                                                "className": "euiButton__text euiButtonGroupButton__textShift",
                                                                "data-text": "All",
                                                                "ref": [Function],
                                                                "title": "All",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="euiButtonContent euiButton__content"
                                                            >
                                                              <span
                                                                className="euiButton__text euiButtonGroupButton__textShift"
                                                                data-text="All"
                                                                title="All"
                                                              >
                                                                <input
                                                                  checked={true}
                                                                  className="euiScreenReaderOnly"
                                                                  data-test-subj="all"
                                                                  disabled={false}
                                                                  id="random_html_id"
                                                                  name="All"
                                                                  onChange={[Function]}
                                                                  type="radio"
                                                                />
                                                                All
                                                              </span>
                                                            </span>
                                                          </EuiButtonContent>
                                                        </label>
                                                      </EuiButtonDisplay>
                                                    </EuiButtonGroupButton>
                                                    <EuiButtonGroupButton
                                                      color="text"
                                                      element="label"
                                                      id="x"
                                                      isDisabled={false}
                                                      isIconOnly={false}
                                                      isSelected={false}
                                                      key="1"
                                                      label="Dimension"
                                                      name="Dimension"
                                                      onChange={[Function]}
                                                      size="compressed"
                                                    >
                                                      <EuiButtonDisplay
                                                        baseClassName="euiButtonGroupButton"
                                                        className=""
                                                        color="text"
                                                        element="label"
                                                        fill={false}
                                                        htmlFor="random_html_id"
                                                        isDisabled={false}
                                                        onClick={[Function]}
                                                        size="s"
                                                        textProps={
                                                          Object {
                                                            "className": "euiButtonGroupButton__textShift",
                                                            "data-text": "Dimension",
                                                            "ref": [Function],
                                                            "title": "Dimension",
                                                          }
                                                        }
                                                      >
                                                        <label
                                                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                                          disabled={false}
                                                          htmlFor="random_html_id"
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "minWidth": undefined,
                                                            }
                                                          }
                                                        >
                                                          <EuiButtonContent
                                                            className="euiButton__content"
                                                            iconSide="left"
                                                            textProps={
                                                              Object {
                                                                "className": "euiButton__text euiButtonGroupButton__textShift",
                                                                "data-text": "Dimension",
                                                                "ref": [Function],
                                                                "title": "Dimension",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="euiButtonContent euiButton__content"
                                                            >
                                                              <span
                                                                className="euiButton__text euiButtonGroupButton__textShift"
                                                                data-text="Dimension"
                                                                title="Dimension"
                                                              >
                                                                <input
                                                                  checked={false}
                                                                  className="euiScreenReaderOnly"
                                                                  data-test-subj="x"
                                                                  disabled={false}
                                                                  id="random_html_id"
                                                                  name="Dimension"
                                                                  onChange={[Function]}
                                                                  type="radio"
                                                                />
                                                                Dimension
                                                              </span>
                                                            </span>
                                                          </EuiButtonContent>
                                                        </label>
                                                      </EuiButtonDisplay>
                                                    </EuiButtonGroupButton>
                                                    <EuiButtonGroupButton
                                                      color="text"
                                                      element="label"
                                                      id="y"
                                                      isDisabled={false}
                                                      isIconOnly={false}
                                                      isSelected={false}
                                                      key="2"
                                                      label="Series"
                                                      name="Series"
                                                      onChange={[Function]}
                                                      size="compressed"
                                                    >
                                                      <EuiButtonDisplay
                                                        baseClassName="euiButtonGroupButton"
                                                        className=""
                                                        color="text"
                                                        element="label"
                                                        fill={false}
                                                        htmlFor="random_html_id"
                                                        isDisabled={false}
                                                        onClick={[Function]}
                                                        size="s"
                                                        textProps={
                                                          Object {
                                                            "className": "euiButtonGroupButton__textShift",
                                                            "data-text": "Series",
                                                            "ref": [Function],
                                                            "title": "Series",
                                                          }
                                                        }
                                                      >
                                                        <label
                                                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                                          disabled={false}
                                                          htmlFor="random_html_id"
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "minWidth": undefined,
                                                            }
                                                          }
                                                        >
                                                          <EuiButtonContent
                                                            className="euiButton__content"
                                                            iconSide="left"
                                                            textProps={
                                                              Object {
                                                                "className": "euiButton__text euiButtonGroupButton__textShift",
                                                                "data-text": "Series",
                                                                "ref": [Function],
                                                                "title": "Series",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="euiButtonContent euiButton__content"
                                                            >
                                                              <span
                                                                className="euiButton__text euiButtonGroupButton__textShift"
                                                                data-text="Series"
                                                                title="Series"
                                                              >
                                                                <input
                                                                  checked={false}
                                                                  className="euiScreenReaderOnly"
                                                                  data-test-subj="y"
                                                                  disabled={false}
                                                                  id="random_html_id"
                                                                  name="Series"
                                                                  onChange={[Function]}
                                                                  type="radio"
                                                                />
                                                                Series
                                                              </span>
                                                            </span>
                                                          </EuiButtonContent>
                                                        </label>
                                                      </EuiButtonDisplay>
                                                    </EuiButtonGroupButton>
                                                  </div>
                                                </fieldset>
                                              </EuiButtonGroup>
                                            </div>
                                          </ButtonGroupItem>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                        </div>
                                      </div>
                                    </div>
                                  </EuiResizeObserver>
                                </div>
                              </div>
                            </EuiAccordion>
                          </ConfigTooltip>
                        </div>
                      </div>
                    </EuiFormRow>
                    <EuiFormRow
                      describedByIds={Array []}
                      display="row"
                      fullWidth={true}
                      hasChildLabel={true}
                      hasEmptyLabelSpace={false}
                      labelType="label"
                    >
                      <div
                        className="euiFormRow euiFormRow--fullWidth"
                        id="random_html_id-row"
                      >
                        <div
                          className="euiFormRow__fieldWrapper"
                        >
                          <ConfigLegend
                            handleConfigChange={[Function]}
                            id="random_html_id"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            props={Object {}}
                            schemas={
                              Array [
                                Object {
                                  "component": null,
                                  "mapTo": "showLegend",
                                  "name": "Show legend",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "show",
                                        "name": "Show",
                                      },
                                      Object {
                                        "id": "hidden",
                                        "name": "Hidden",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": null,
                                  "mapTo": "position",
                                  "name": "Position",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "v",
                                        "name": "Right",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "v",
                                        "name": "Right",
                                      },
                                      Object {
                                        "id": "h",
                                        "name": "Bottom",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "eleType": "input",
                                  "mapTo": "legendSize",
                                  "name": "Legend size",
                                  "title": "Legend size",
                                },
                              ]
                            }
                            sectionId="legend"
                            sectionName="Legend"
                            visualizations={
                              Object {
                                "data": Object {
                                  "appData": Object {
                                    "fromApp": false,
                                  },
                                  "defaultAxes": Object {},
                                  "indexFields": Object {
                                    "availableFields": Array [
                                      Object {
                                        "name": "agent",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "clientip",
                                        "type": "ip",
                                      },
                                      Object {
                                        "name": "event",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "extension",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "geo",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "host",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "index",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "ip",
                                        "type": "ip",
                                      },
                                      Object {
                                        "name": "machine",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "memory",
                                        "type": "double",
                                      },
                                      Object {
                                        "name": "message",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "phpmemory",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "referer",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "request",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "response",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "tags",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "timestamp",
                                        "type": "timestamp",
                                      },
                                      Object {
                                        "name": "url",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "utc_time",
                                        "type": "timestamp",
                                      },
                                    ],
                                    "queriedFields": Array [
                                      Object {
                                        "name": "double_per_ip_bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "host",
                                        "type": "text",
                                      },
                                      Object {
                                        "name": "ip_count",
                                        "type": "integer",
                                      },
                                      Object {
                                        "name": "per_ip_bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "resp_code",
                                        "type": "text",
                                      },
                                      Object {
                                        "name": "sum_bytes",
                                        "type": "long",
                                      },
                                    ],
                                    "selectedFields": Array [],
                                    "unselectedFields": Array [],
                                  },
                                  "query": Object {},
                                  "rawVizData": Object {
                                    "data": Object {
                                      "count()": Array [
                                        154,
                                        1753,
                                        116,
                                        468,
                                        1964,
                                        219,
                                      ],
                                      "tags": Array [
                                        "error",
                                        "info",
                                        "login",
                                        "security",
                                        "success",
                                        "warning",
                                      ],
                                    },
                                    "jsonData": Array [
                                      Object {
                                        "count()": 154,
                                        "tags": "error",
                                      },
                                      Object {
                                        "count()": 1753,
                                        "tags": "info",
                                      },
                                      Object {
                                        "count()": 116,
                                        "tags": "login",
                                      },
                                      Object {
                                        "count()": 468,
                                        "tags": "security",
                                      },
                                      Object {
                                        "count()": 1964,
                                        "tags": "success",
                                      },
                                      Object {
                                        "count()": 219,
                                        "tags": "warning",
                                      },
                                    ],
                                    "metadata": Object {
                                      "fields": Array [
                                        Object {
                                          "name": "count()",
                                          "type": "integer",
                                        },
                                        Object {
                                          "name": "tags",
                                          "type": "text",
                                        },
                                      ],
                                      "size": 6,
                                      "status": 200,
                                    },
                                  },
                                  "userConfigs": Object {
                                    "dataConfig": Object {
                                      "valueOptions": Object {
                                        "dimensions": Array [
                                          Object {
                                            "label": "tags",
                                            "name": "tags",
                                            "type": "text",
                                          },
                                        ],
                                        "metrics": Array [
                                          Object {
                                            "label": "count()",
                                            "name": "count()",
                                            "side": "left",
                                            "type": "integer",
                                          },
                                        ],
                                      },
                                    },
                                  },
                                },
                                "vis": Object {
                                  "barwidth": 0.97,
                                  "category": "Visualizations",
                                  "categoryaxis": "xaxis",
                                  "component": [Function],
                                  "editorconfig": Object {
                                    "panelTabs": Array [
                                      Object {
                                        "editor": [Function],
                                        "id": "data-panel",
                                        "mapTo": "dataConfig",
                                        "name": "Style",
                                        "sections": Array [
                                          Object {
                                            "editor": [Function],
                                            "id": "tooltip_options",
                                            "mapTo": "tooltipOptions",
                                            "name": "Tooltip options",
                                            "schemas": Array [
                                              Object {
                                                "component": null,
                                                "mapTo": "tooltipMode",
                                                "name": "Tooltip mode",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                    Object {
                                                      "id": "hidden",
                                                      "name": "Hidden",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": null,
                                                "mapTo": "tooltipText",
                                                "name": "Tooltip text",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "all",
                                                      "name": "All",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "all",
                                                      "name": "All",
                                                    },
                                                    Object {
                                                      "id": "x",
                                                      "name": "Dimension",
                                                    },
                                                    Object {
                                                      "id": "y",
                                                      "name": "Series",
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                          Object {
                                            "editor": [Function],
                                            "id": "legend",
                                            "mapTo": "legend",
                                            "name": "Legend",
                                            "schemas": Array [
                                              Object {
                                                "component": null,
                                                "mapTo": "showLegend",
                                                "name": "Show legend",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                    Object {
                                                      "id": "hidden",
                                                      "name": "Hidden",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": null,
                                                "mapTo": "position",
                                                "name": "Position",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "v",
                                                      "name": "Right",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "v",
                                                      "name": "Right",
                                                    },
                                                    Object {
                                                      "id": "h",
                                                      "name": "Bottom",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "eleType": "input",
                                                "mapTo": "legendSize",
                                                "name": "Legend size",
                                                "title": "Legend size",
                                              },
                                            ],
                                          },
                                          Object {
                                            "editor": [Function],
                                            "id": "chart_styles",
                                            "mapTo": "chartStyles",
                                            "name": "Chart styles",
                                            "schemas": Array [
                                              Object {
                                                "component": [Function],
                                                "eleType": "buttons",
                                                "mapTo": "mode",
                                                "name": "Mode",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "group",
                                                      "name": "Group",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "group",
                                                      "name": "Group",
                                                    },
                                                    Object {
                                                      "id": "stack",
                                                      "name": "Stack",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "eleType": "input",
                                                "mapTo": "labelSize",
                                                "name": "Label size",
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0,
                                                "eleType": "slider",
                                                "mapTo": "rotateBarLabels",
                                                "name": "Rotate bar labels",
                                                "props": Object {
                                                  "max": 90,
                                                  "min": -90,
                                                  "showTicks": true,
                                                  "ticks": Array [
                                                    Object {
                                                      "label": "-90°",
                                                      "value": -90,
                                                    },
                                                    Object {
                                                      "label": "-45°",
                                                      "value": -45,
                                                    },
                                                    Object {
                                                      "label": "0°",
                                                      "value": 0,
                                                    },
                                                    Object {
                                                      "label": "45°",
                                                      "value": 45,
                                                    },
                                                    Object {
                                                      "label": "90°",
                                                      "value": 90,
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0.7,
                                                "eleType": "slider",
                                                "mapTo": "groupWidth",
                                                "name": "Group width",
                                                "props": Object {
                                                  "max": 1,
                                                  "step": 0.01,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0.97,
                                                "eleType": "slider",
                                                "mapTo": "barWidth",
                                                "name": "Bar width",
                                                "props": Object {
                                                  "max": 1,
                                                  "step": 0.01,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 2,
                                                "eleType": "slider",
                                                "mapTo": "lineWidth",
                                                "name": "Line width",
                                                "props": Object {
                                                  "max": 10,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 70,
                                                "eleType": "slider",
                                                "mapTo": "fillOpacity",
                                                "name": "Fill opacity",
                                                "props": Object {
                                                  "max": 100,
                                                },
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "availability-panel",
                                        "mapTo": "availabilityConfig",
                                        "name": "Availability",
                                      },
                                    ],
                                  },
                                  "fillopacity": 70,
                                  "fulllabel": "Vertical bar",
                                  "groupwidth": 0.7,
                                  "icon": [Function],
                                  "icontype": "visBarVerticalStacked",
                                  "id": "bar",
                                  "label": "Vertical bar",
                                  "labelangle": 0,
                                  "legendposition": "v",
                                  "linewidth": 2,
                                  "mode": "group",
                                  "name": "bar",
                                  "orientation": "v",
                                  "selection": Object {
                                    "dataLoss": "nothing",
                                  },
                                  "seriesaxis": "yaxis",
                                  "showlegend": "show",
                                  "type": "bar",
                                  "visconfig": Object {
                                    "config": Object {
                                      "displaylogo": false,
                                      "responsive": true,
                                    },
                                    "isUniColor": false,
                                    "layout": Object {
                                      "height": 1180,
                                      "legend": Object {
                                        "orientation": "v",
                                        "traceorder": "normal",
                                      },
                                      "margin": Object {
                                        "b": 30,
                                        "l": 60,
                                        "pad": 0,
                                        "r": 30,
                                        "t": 50,
                                      },
                                      "showlegend": true,
                                    },
                                  },
                                },
                              }
                            }
                            vizState={Object {}}
                          >
                            <EuiAccordion
                              arrowDisplay="left"
                              buttonContent="Legend"
                              id="configPanel__legend"
                              initialIsOpen={true}
                              isLoading={false}
                              isLoadingMessage={false}
                              paddingSize="s"
                            >
                              <div
                                className="euiAccordion euiAccordion-isOpen"
                              >
                                <div
                                  className="euiAccordion__triggerWrapper"
                                >
                                  <button
                                    aria-controls="configPanel__legend"
                                    aria-expanded={true}
                                    className="euiAccordion__button"
                                    id="random_html_id"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <span
                                      className="euiAccordion__iconWrapper"
                                    >
                                      <EuiIcon
                                        className="euiAccordion__icon euiAccordion__icon-isOpen"
                                        size="m"
                                        type="arrowRight"
                                      >
                                        <EuiIconEmpty
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                          focusable="false"
                                          role="img"
                                          style={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                            focusable="false"
                                            height={16}
                                            role="img"
                                            style={null}
                                            viewBox="0 0 16 16"
                                            width={16}
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </EuiIconEmpty>
                                      </EuiIcon>
                                    </span>
                                    <span
                                      className="euiIEFlexWrapFix"
                                    >
                                      Legend
                                    </span>
                                  </button>
                                </div>
                                <div
                                  aria-labelledby="random_html_id"
                                  className="euiAccordion__childWrapper"
                                  id="configPanel__legend"
                                  role="region"
                                  tabIndex={-1}
                                >
                                  <EuiResizeObserver
                                    onResize={[Function]}
                                  >
                                    <div>
                                      <div
                                        className="euiAccordion__padding--s"
                                      >
                                        <ButtonGroupItem
                                          defaultSelections={
                                            Array [
                                              Object {
                                                "id": "show",
                                                "name": "Show",
                                              },
                                            ]
                                          }
                                          groupOptions={
                                            Array [
                                              Object {
                                                "id": "show",
                                                "label": "Show",
                                                "name": "Show",
                                              },
                                              Object {
                                                "id": "hidden",
                                                "label": "Hidden",
                                                "name": "Hidden",
                                              },
                                            ]
                                          }
                                          handleButtonChange={[Function]}
                                          idSelected="show"
                                          legend="Show legend"
                                          options={
                                            Array [
                                              Object {
                                                "id": "show",
                                                "name": "Show",
                                              },
                                              Object {
                                                "id": "hidden",
                                                "name": "Hidden",
                                              },
                                            ]
                                          }
                                          title="Show legend"
                                          vizState={Object {}}
                                        >
                                          <EuiTitle
                                            size="xxs"
                                          >
                                            <h3
                                              className="euiTitle euiTitle--xxsmall"
                                            >
                                              Show legend
                                            </h3>
                                          </EuiTitle>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                          <div
                                            style={
                                              Object {
                                                "width": "fit-content",
                                              }
                                            }
                                          >
                                            <EuiButtonGroup
                                              buttonSize="compressed"
                                              id="random_html_id"
                                              idSelected="show"
                                              isFullWidth={false}
                                              legend="Show legend"
                                              name="Show legend"
                                              onChange={[Function]}
                                              options={
                                                Array [
                                                  Object {
                                                    "id": "show",
                                                    "label": "Show",
                                                    "name": "Show",
                                                  },
                                                  Object {
                                                    "id": "hidden",
                                                    "label": "Hidden",
                                                    "name": "Hidden",
                                                  },
                                                ]
                                              }
                                            >
                                              <fieldset
                                                className="euiButtonGroup euiButtonGroup--compressed euiButtonGroup--text"
                                                disabled={false}
                                                id="random_html_id"
                                              >
                                                <EuiScreenReaderOnly>
                                                  <legend
                                                    className="euiScreenReaderOnly"
                                                  >
                                                    Show legend
                                                  </legend>
                                                </EuiScreenReaderOnly>
                                                <div
                                                  className="euiButtonGroup__buttons"
                                                >
                                                  <EuiButtonGroupButton
                                                    color="text"
                                                    element="label"
                                                    id="show"
                                                    isDisabled={false}
                                                    isIconOnly={false}
                                                    isSelected={true}
                                                    key="0"
                                                    label="Show"
                                                    name="Show"
                                                    onChange={[Function]}
                                                    size="compressed"
                                                  >
                                                    <EuiButtonDisplay
                                                      baseClassName="euiButtonGroupButton"
                                                      className="euiButtonGroupButton-isSelected"
                                                      color="text"
                                                      element="label"
                                                      fill={false}
                                                      htmlFor="random_html_id"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                      size="s"
                                                      textProps={
                                                        Object {
                                                          "className": "euiButtonGroupButton__textShift",
                                                          "data-text": "Show",
                                                          "ref": [Function],
                                                          "title": "Show",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton-isSelected"
                                                        disabled={false}
                                                        htmlFor="random_html_id"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "minWidth": undefined,
                                                          }
                                                        }
                                                      >
                                                        <EuiButtonContent
                                                          className="euiButton__content"
                                                          iconSide="left"
                                                          textProps={
                                                            Object {
                                                              "className": "euiButton__text euiButtonGroupButton__textShift",
                                                              "data-text": "Show",
                                                              "ref": [Function],
                                                              "title": "Show",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="euiButtonContent euiButton__content"
                                                          >
                                                            <span
                                                              className="euiButton__text euiButtonGroupButton__textShift"
                                                              data-text="Show"
                                                              title="Show"
                                                            >
                                                              <input
                                                                checked={true}
                                                                className="euiScreenReaderOnly"
                                                                data-test-subj="show"
                                                                disabled={false}
                                                                id="random_html_id"
                                                                name="Show"
                                                                onChange={[Function]}
                                                                type="radio"
                                                              />
                                                              Show
                                                            </span>
                                                          </span>
                                                        </EuiButtonContent>
                                                      </label>
                                                    </EuiButtonDisplay>
                                                  </EuiButtonGroupButton>
                                                  <EuiButtonGroupButton
                                                    color="text"
                                                    element="label"
                                                    id="hidden"
                                                    isDisabled={false}
                                                    isIconOnly={false}
                                                    isSelected={false}
                                                    key="1"
                                                    label="Hidden"
                                                    name="Hidden"
                                                    onChange={[Function]}
                                                    size="compressed"
                                                  >
                                                    <EuiButtonDisplay
                                                      baseClassName="euiButtonGroupButton"
                                                      className=""
                                                      color="text"
                                                      element="label"
                                                      fill={false}
                                                      htmlFor="random_html_id"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                      size="s"
                                                      textProps={
                                                        Object {
                                                          "className": "euiButtonGroupButton__textShift",
                                                          "data-text": "Hidden",
                                                          "ref": [Function],
                                                          "title": "Hidden",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                                        disabled={false}
                                                        htmlFor="random_html_id"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "minWidth": undefined,
                                                          }
                                                        }
                                                      >
                                                        <EuiButtonContent
                                                          className="euiButton__content"
                                                          iconSide="left"
                                                          textProps={
                                                            Object {
                                                              "className": "euiButton__text euiButtonGroupButton__textShift",
                                                              "data-text": "Hidden",
                                                              "ref": [Function],
                                                              "title": "Hidden",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="euiButtonContent euiButton__content"
                                                          >
                                                            <span
                                                              className="euiButton__text euiButtonGroupButton__textShift"
                                                              data-text="Hidden"
                                                              title="Hidden"
                                                            >
                                                              <input
                                                                checked={false}
                                                                className="euiScreenReaderOnly"
                                                                data-test-subj="hidden"
                                                                disabled={false}
                                                                id="random_html_id"
                                                                name="Hidden"
                                                                onChange={[Function]}
                                                                type="radio"
                                                              />
                                                              Hidden
                                                            </span>
                                                          </span>
                                                        </EuiButtonContent>
                                                      </label>
                                                    </EuiButtonDisplay>
                                                  </EuiButtonGroupButton>
                                                </div>
                                              </fieldset>
                                            </EuiButtonGroup>
                                          </div>
                                        </ButtonGroupItem>
                                        <EuiSpacer
                                          size="s"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--s"
                                          />
                                        </EuiSpacer>
                                        <ButtonGroupItem
                                          defaultSelections={
                                            Array [
                                              Object {
                                                "id": "v",
                                                "name": "Right",
                                              },
                                            ]
                                          }
                                          groupOptions={
                                            Array [
                                              Object {
                                                "id": "v",
                                                "label": "Right",
                                                "name": "Right",
                                              },
                                              Object {
                                                "id": "h",
                                                "label": "Bottom",
                                                "name": "Bottom",
                                              },
                                            ]
                                          }
                                          handleButtonChange={[Function]}
                                          idSelected="v"
                                          legend="Position"
                                          options={
                                            Array [
                                              Object {
                                                "id": "v",
                                                "name": "Right",
                                              },
                                              Object {
                                                "id": "h",
                                                "name": "Bottom",
                                              },
                                            ]
                                          }
                                          title="Position"
                                          vizState={Object {}}
                                        >
                                          <EuiTitle
                                            size="xxs"
                                          >
                                            <h3
                                              className="euiTitle euiTitle--xxsmall"
                                            >
                                              Position
                                            </h3>
                                          </EuiTitle>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                          <div
                                            style={
                                              Object {
                                                "width": "fit-content",
                                              }
                                            }
                                          >
                                            <EuiButtonGroup
                                              buttonSize="compressed"
                                              id="random_html_id"
                                              idSelected="v"
                                              isFullWidth={false}
                                              legend="Position"
                                              name="Position"
                                              onChange={[Function]}
                                              options={
                                                Array [
                                                  Object {
                                                    "id": "v",
                                                    "label": "Right",
                                                    "name": "Right",
                                                  },
                                                  Object {
                                                    "id": "h",
                                                    "label": "Bottom",
                                                    "name": "Bottom",
                                                  },
                                                ]
                                              }
                                            >
                                              <fieldset
                                                className="euiButtonGroup euiButtonGroup--compressed euiButtonGroup--text"
                                                disabled={false}
                                                id="random_html_id"
                                              >
                                                <EuiScreenReaderOnly>
                                                  <legend
                                                    className="euiScreenReaderOnly"
                                                  >
                                                    Position
                                                  </legend>
                                                </EuiScreenReaderOnly>
                                                <div
                                                  className="euiButtonGroup__buttons"
                                                >
                                                  <EuiButtonGroupButton
                                                    color="text"
                                                    element="label"
                                                    id="v"
                                                    isDisabled={false}
                                                    isIconOnly={false}
                                                    isSelected={true}
                                                    key="0"
                                                    label="Right"
                                                    name="Right"
                                                    onChange={[Function]}
                                                    size="compressed"
                                                  >
                                                    <EuiButtonDisplay
                                                      baseClassName="euiButtonGroupButton"
                                                      className="euiButtonGroupButton-isSelected"
                                                      color="text"
                                                      element="label"
                                                      fill={false}
                                                      htmlFor="random_html_id"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                      size="s"
                                                      textProps={
                                                        Object {
                                                          "className": "euiButtonGroupButton__textShift",
                                                          "data-text": "Right",
                                                          "ref": [Function],
                                                          "title": "Right",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton-isSelected"
                                                        disabled={false}
                                                        htmlFor="random_html_id"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "minWidth": undefined,
                                                          }
                                                        }
                                                      >
                                                        <EuiButtonContent
                                                          className="euiButton__content"
                                                          iconSide="left"
                                                          textProps={
                                                            Object {
                                                              "className": "euiButton__text euiButtonGroupButton__textShift",
                                                              "data-text": "Right",
                                                              "ref": [Function],
                                                              "title": "Right",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="euiButtonContent euiButton__content"
                                                          >
                                                            <span
                                                              className="euiButton__text euiButtonGroupButton__textShift"
                                                              data-text="Right"
                                                              title="Right"
                                                            >
                                                              <input
                                                                checked={true}
                                                                className="euiScreenReaderOnly"
                                                                data-test-subj="v"
                                                                disabled={false}
                                                                id="random_html_id"
                                                                name="Right"
                                                                onChange={[Function]}
                                                                type="radio"
                                                              />
                                                              Right
                                                            </span>
                                                          </span>
                                                        </EuiButtonContent>
                                                      </label>
                                                    </EuiButtonDisplay>
                                                  </EuiButtonGroupButton>
                                                  <EuiButtonGroupButton
                                                    color="text"
                                                    element="label"
                                                    id="h"
                                                    isDisabled={false}
                                                    isIconOnly={false}
                                                    isSelected={false}
                                                    key="1"
                                                    label="Bottom"
                                                    name="Bottom"
                                                    onChange={[Function]}
                                                    size="compressed"
                                                  >
                                                    <EuiButtonDisplay
                                                      baseClassName="euiButtonGroupButton"
                                                      className=""
                                                      color="text"
                                                      element="label"
                                                      fill={false}
                                                      htmlFor="random_html_id"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                      size="s"
                                                      textProps={
                                                        Object {
                                                          "className": "euiButtonGroupButton__textShift",
                                                          "data-text": "Bottom",
                                                          "ref": [Function],
                                                          "title": "Bottom",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                                        disabled={false}
                                                        htmlFor="random_html_id"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "minWidth": undefined,
                                                          }
                                                        }
                                                      >
                                                        <EuiButtonContent
                                                          className="euiButton__content"
                                                          iconSide="left"
                                                          textProps={
                                                            Object {
                                                              "className": "euiButton__text euiButtonGroupButton__textShift",
                                                              "data-text": "Bottom",
                                                              "ref": [Function],
                                                              "title": "Bottom",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="euiButtonContent euiButton__content"
                                                          >
                                                            <span
                                                              className="euiButton__text euiButtonGroupButton__textShift"
                                                              data-text="Bottom"
                                                              title="Bottom"
                                                            >
                                                              <input
                                                                checked={false}
                                                                className="euiScreenReaderOnly"
                                                                data-test-subj="h"
                                                                disabled={false}
                                                                id="random_html_id"
                                                                name="Bottom"
                                                                onChange={[Function]}
                                                                type="radio"
                                                              />
                                                              Bottom
                                                            </span>
                                                          </span>
                                                        </EuiButtonContent>
                                                      </label>
                                                    </EuiButtonDisplay>
                                                  </EuiButtonGroupButton>
                                                </div>
                                              </fieldset>
                                            </EuiButtonGroup>
                                          </div>
                                        </ButtonGroupItem>
                                        <EuiSpacer
                                          size="s"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--s"
                                          />
                                        </EuiSpacer>
                                        <InputFieldItem
                                          currentValue=""
                                          handleInputChange={[Function]}
                                          numValue=""
                                          title="Legend size"
                                          vizState={Object {}}
                                        >
                                          <EuiTitle
                                            size="xxs"
                                          >
                                            <h3
                                              className="euiTitle euiTitle--xxsmall"
                                            >
                                              Legend size
                                            </h3>
                                          </EuiTitle>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                          <EuiFieldNumber
                                            data-test-subj="valueFieldNumber"
                                            fullWidth={true}
                                            id="random_html_id"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            placeholder="auto"
                                            value=""
                                          >
                                            <EuiFormControlLayout
                                              compressed={false}
                                              fullWidth={true}
                                              inputId="random_html_id"
                                              isLoading={false}
                                            >
                                              <div
                                                className="euiFormControlLayout euiFormControlLayout--fullWidth"
                                              >
                                                <div
                                                  className="euiFormControlLayout__childrenWrapper"
                                                >
                                                  <EuiValidatableControl>
                                                    <input
                                                      className="euiFieldNumber euiFieldNumber--fullWidth"
                                                      data-test-subj="valueFieldNumber"
                                                      id="random_html_id"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="auto"
                                                      type="number"
                                                      value=""
                                                    />
                                                  </EuiValidatableControl>
                                                  <EuiFormControlLayoutIcons
                                                    compressed={false}
                                                    isLoading={false}
                                                  />
                                                </div>
                                              </div>
                                            </EuiFormControlLayout>
                                          </EuiFieldNumber>
                                        </InputFieldItem>
                                        <EuiSpacer
                                          size="s"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--s"
                                          />
                                        </EuiSpacer>
                                      </div>
                                    </div>
                                  </EuiResizeObserver>
                                </div>
                              </div>
                            </EuiAccordion>
                          </ConfigLegend>
                        </div>
                      </div>
                    </EuiFormRow>
                    <EuiFormRow
                      describedByIds={Array []}
                      display="row"
                      fullWidth={true}
                      hasChildLabel={true}
                      hasEmptyLabelSpace={false}
                      labelType="label"
                    >
                      <div
                        className="euiFormRow euiFormRow--fullWidth"
                        id="random_html_id-row"
                      >
                        <div
                          className="euiFormRow__fieldWrapper"
                        >
                          <ConfigBarChartStyles
                            handleConfigChange={[Function]}
                            id="random_html_id"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            props={Object {}}
                            schemas={
                              Array [
                                Object {
                                  "component": [Function],
                                  "eleType": "buttons",
                                  "mapTo": "mode",
                                  "name": "Mode",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "id": "group",
                                        "name": "Group",
                                      },
                                    ],
                                    "options": Array [
                                      Object {
                                        "id": "group",
                                        "name": "Group",
                                      },
                                      Object {
                                        "id": "stack",
                                        "name": "Stack",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "eleType": "input",
                                  "mapTo": "labelSize",
                                  "name": "Label size",
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 0,
                                  "eleType": "slider",
                                  "mapTo": "rotateBarLabels",
                                  "name": "Rotate bar labels",
                                  "props": Object {
                                    "max": 90,
                                    "min": -90,
                                    "showTicks": true,
                                    "ticks": Array [
                                      Object {
                                        "label": "-90°",
                                        "value": -90,
                                      },
                                      Object {
                                        "label": "-45°",
                                        "value": -45,
                                      },
                                      Object {
                                        "label": "0°",
                                        "value": 0,
                                      },
                                      Object {
                                        "label": "45°",
                                        "value": 45,
                                      },
                                      Object {
                                        "label": "90°",
                                        "value": 90,
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 0.7,
                                  "eleType": "slider",
                                  "mapTo": "groupWidth",
                                  "name": "Group width",
                                  "props": Object {
                                    "max": 1,
                                    "step": 0.01,
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 0.97,
                                  "eleType": "slider",
                                  "mapTo": "barWidth",
                                  "name": "Bar width",
                                  "props": Object {
                                    "max": 1,
                                    "step": 0.01,
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 2,
                                  "eleType": "slider",
                                  "mapTo": "lineWidth",
                                  "name": "Line width",
                                  "props": Object {
                                    "max": 10,
                                  },
                                },
                                Object {
                                  "component": [Function],
                                  "defaultState": 70,
                                  "eleType": "slider",
                                  "mapTo": "fillOpacity",
                                  "name": "Fill opacity",
                                  "props": Object {
                                    "max": 100,
                                  },
                                },
                              ]
                            }
                            sectionId="chart_styles"
                            sectionName="Chart styles"
                            visualizations={
                              Object {
                                "data": Object {
                                  "appData": Object {
                                    "fromApp": false,
                                  },
                                  "defaultAxes": Object {},
                                  "indexFields": Object {
                                    "availableFields": Array [
                                      Object {
                                        "name": "agent",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "clientip",
                                        "type": "ip",
                                      },
                                      Object {
                                        "name": "event",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "extension",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "geo",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "host",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "index",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "ip",
                                        "type": "ip",
                                      },
                                      Object {
                                        "name": "machine",
                                        "type": "struct",
                                      },
                                      Object {
                                        "name": "memory",
                                        "type": "double",
                                      },
                                      Object {
                                        "name": "message",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "phpmemory",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "referer",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "request",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "response",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "tags",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "timestamp",
                                        "type": "timestamp",
                                      },
                                      Object {
                                        "name": "url",
                                        "type": "string",
                                      },
                                      Object {
                                        "name": "utc_time",
                                        "type": "timestamp",
                                      },
                                    ],
                                    "queriedFields": Array [
                                      Object {
                                        "name": "double_per_ip_bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "host",
                                        "type": "text",
                                      },
                                      Object {
                                        "name": "ip_count",
                                        "type": "integer",
                                      },
                                      Object {
                                        "name": "per_ip_bytes",
                                        "type": "long",
                                      },
                                      Object {
                                        "name": "resp_code",
                                        "type": "text",
                                      },
                                      Object {
                                        "name": "sum_bytes",
                                        "type": "long",
                                      },
                                    ],
                                    "selectedFields": Array [],
                                    "unselectedFields": Array [],
                                  },
                                  "query": Object {},
                                  "rawVizData": Object {
                                    "data": Object {
                                      "count()": Array [
                                        154,
                                        1753,
                                        116,
                                        468,
                                        1964,
                                        219,
                                      ],
                                      "tags": Array [
                                        "error",
                                        "info",
                                        "login",
                                        "security",
                                        "success",
                                        "warning",
                                      ],
                                    },
                                    "jsonData": Array [
                                      Object {
                                        "count()": 154,
                                        "tags": "error",
                                      },
                                      Object {
                                        "count()": 1753,
                                        "tags": "info",
                                      },
                                      Object {
                                        "count()": 116,
                                        "tags": "login",
                                      },
                                      Object {
                                        "count()": 468,
                                        "tags": "security",
                                      },
                                      Object {
                                        "count()": 1964,
                                        "tags": "success",
                                      },
                                      Object {
                                        "count()": 219,
                                        "tags": "warning",
                                      },
                                    ],
                                    "metadata": Object {
                                      "fields": Array [
                                        Object {
                                          "name": "count()",
                                          "type": "integer",
                                        },
                                        Object {
                                          "name": "tags",
                                          "type": "text",
                                        },
                                      ],
                                      "size": 6,
                                      "status": 200,
                                    },
                                  },
                                  "userConfigs": Object {
                                    "dataConfig": Object {
                                      "valueOptions": Object {
                                        "dimensions": Array [
                                          Object {
                                            "label": "tags",
                                            "name": "tags",
                                            "type": "text",
                                          },
                                        ],
                                        "metrics": Array [
                                          Object {
                                            "label": "count()",
                                            "name": "count()",
                                            "side": "left",
                                            "type": "integer",
                                          },
                                        ],
                                      },
                                    },
                                  },
                                },
                                "vis": Object {
                                  "barwidth": 0.97,
                                  "category": "Visualizations",
                                  "categoryaxis": "xaxis",
                                  "component": [Function],
                                  "editorconfig": Object {
                                    "panelTabs": Array [
                                      Object {
                                        "editor": [Function],
                                        "id": "data-panel",
                                        "mapTo": "dataConfig",
                                        "name": "Style",
                                        "sections": Array [
                                          Object {
                                            "editor": [Function],
                                            "id": "tooltip_options",
                                            "mapTo": "tooltipOptions",
                                            "name": "Tooltip options",
                                            "schemas": Array [
                                              Object {
                                                "component": null,
                                                "mapTo": "tooltipMode",
                                                "name": "Tooltip mode",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                    Object {
                                                      "id": "hidden",
                                                      "name": "Hidden",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": null,
                                                "mapTo": "tooltipText",
                                                "name": "Tooltip text",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "all",
                                                      "name": "All",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "all",
                                                      "name": "All",
                                                    },
                                                    Object {
                                                      "id": "x",
                                                      "name": "Dimension",
                                                    },
                                                    Object {
                                                      "id": "y",
                                                      "name": "Series",
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                          Object {
                                            "editor": [Function],
                                            "id": "legend",
                                            "mapTo": "legend",
                                            "name": "Legend",
                                            "schemas": Array [
                                              Object {
                                                "component": null,
                                                "mapTo": "showLegend",
                                                "name": "Show legend",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "show",
                                                      "name": "Show",
                                                    },
                                                    Object {
                                                      "id": "hidden",
                                                      "name": "Hidden",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": null,
                                                "mapTo": "position",
                                                "name": "Position",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "v",
                                                      "name": "Right",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "v",
                                                      "name": "Right",
                                                    },
                                                    Object {
                                                      "id": "h",
                                                      "name": "Bottom",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "eleType": "input",
                                                "mapTo": "legendSize",
                                                "name": "Legend size",
                                                "title": "Legend size",
                                              },
                                            ],
                                          },
                                          Object {
                                            "editor": [Function],
                                            "id": "chart_styles",
                                            "mapTo": "chartStyles",
                                            "name": "Chart styles",
                                            "schemas": Array [
                                              Object {
                                                "component": [Function],
                                                "eleType": "buttons",
                                                "mapTo": "mode",
                                                "name": "Mode",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "id": "group",
                                                      "name": "Group",
                                                    },
                                                  ],
                                                  "options": Array [
                                                    Object {
                                                      "id": "group",
                                                      "name": "Group",
                                                    },
                                                    Object {
                                                      "id": "stack",
                                                      "name": "Stack",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "eleType": "input",
                                                "mapTo": "labelSize",
                                                "name": "Label size",
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0,
                                                "eleType": "slider",
                                                "mapTo": "rotateBarLabels",
                                                "name": "Rotate bar labels",
                                                "props": Object {
                                                  "max": 90,
                                                  "min": -90,
                                                  "showTicks": true,
                                                  "ticks": Array [
                                                    Object {
                                                      "label": "-90°",
                                                      "value": -90,
                                                    },
                                                    Object {
                                                      "label": "-45°",
                                                      "value": -45,
                                                    },
                                                    Object {
                                                      "label": "0°",
                                                      "value": 0,
                                                    },
                                                    Object {
                                                      "label": "45°",
                                                      "value": 45,
                                                    },
                                                    Object {
                                                      "label": "90°",
                                                      "value": 90,
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0.7,
                                                "eleType": "slider",
                                                "mapTo": "groupWidth",
                                                "name": "Group width",
                                                "props": Object {
                                                  "max": 1,
                                                  "step": 0.01,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 0.97,
                                                "eleType": "slider",
                                                "mapTo": "barWidth",
                                                "name": "Bar width",
                                                "props": Object {
                                                  "max": 1,
                                                  "step": 0.01,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 2,
                                                "eleType": "slider",
                                                "mapTo": "lineWidth",
                                                "name": "Line width",
                                                "props": Object {
                                                  "max": 10,
                                                },
                                              },
                                              Object {
                                                "component": [Function],
                                                "defaultState": 70,
                                                "eleType": "slider",
                                                "mapTo": "fillOpacity",
                                                "name": "Fill opacity",
                                                "props": Object {
                                                  "max": 100,
                                                },
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "availability-panel",
                                        "mapTo": "availabilityConfig",
                                        "name": "Availability",
                                      },
                                    ],
                                  },
                                  "fillopacity": 70,
                                  "fulllabel": "Vertical bar",
                                  "groupwidth": 0.7,
                                  "icon": [Function],
                                  "icontype": "visBarVerticalStacked",
                                  "id": "bar",
                                  "label": "Vertical bar",
                                  "labelangle": 0,
                                  "legendposition": "v",
                                  "linewidth": 2,
                                  "mode": "group",
                                  "name": "bar",
                                  "orientation": "v",
                                  "selection": Object {
                                    "dataLoss": "nothing",
                                  },
                                  "seriesaxis": "yaxis",
                                  "showlegend": "show",
                                  "type": "bar",
                                  "visconfig": Object {
                                    "config": Object {
                                      "displaylogo": false,
                                      "responsive": true,
                                    },
                                    "isUniColor": false,
                                    "layout": Object {
                                      "height": 1180,
                                      "legend": Object {
                                        "orientation": "v",
                                        "traceorder": "normal",
                                      },
                                      "margin": Object {
                                        "b": 30,
                                        "l": 60,
                                        "pad": 0,
                                        "r": 30,
                                        "t": 50,
                                      },
                                      "showlegend": true,
                                    },
                                  },
                                },
                              }
                            }
                            vizState={Object {}}
                          >
                            <EuiAccordion
                              arrowDisplay="left"
                              buttonContent="Chart styles"
                              id="configPanel__chart_styles"
                              initialIsOpen={true}
                              isLoading={false}
                              isLoadingMessage={false}
                              paddingSize="s"
                            >
                              <div
                                className="euiAccordion euiAccordion-isOpen"
                              >
                                <div
                                  className="euiAccordion__triggerWrapper"
                                >
                                  <button
                                    aria-controls="configPanel__chart_styles"
                                    aria-expanded={true}
                                    className="euiAccordion__button"
                                    id="random_html_id"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <span
                                      className="euiAccordion__iconWrapper"
                                    >
                                      <EuiIcon
                                        className="euiAccordion__icon euiAccordion__icon-isOpen"
                                        size="m"
                                        type="arrowRight"
                                      >
                                        <EuiIconEmpty
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                          focusable="false"
                                          role="img"
                                          style={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                            focusable="false"
                                            height={16}
                                            role="img"
                                            style={null}
                                            viewBox="0 0 16 16"
                                            width={16}
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </EuiIconEmpty>
                                      </EuiIcon>
                                    </span>
                                    <span
                                      className="euiIEFlexWrapFix"
                                    >
                                      Chart styles
                                    </span>
                                  </button>
                                </div>
                                <div
                                  aria-labelledby="random_html_id"
                                  className="euiAccordion__childWrapper"
                                  id="configPanel__chart_styles"
                                  role="region"
                                  tabIndex={-1}
                                >
                                  <EuiResizeObserver
                                    onResize={[Function]}
                                  >
                                    <div>
                                      <div
                                        className="euiAccordion__padding--s"
                                      >
                                        <ButtonGroupItem
                                          defaultSelections={
                                            Array [
                                              Object {
                                                "id": "group",
                                                "name": "Group",
                                              },
                                            ]
                                          }
                                          groupOptions={
                                            Array [
                                              Object {
                                                "id": "group",
                                                "label": "Group",
                                                "name": "Group",
                                              },
                                              Object {
                                                "id": "stack",
                                                "label": "Stack",
                                                "name": "Stack",
                                              },
                                            ]
                                          }
                                          handleButtonChange={[Function]}
                                          idSelected="group"
                                          legend="Mode"
                                          options={
                                            Array [
                                              Object {
                                                "id": "group",
                                                "name": "Group",
                                              },
                                              Object {
                                                "id": "stack",
                                                "name": "Stack",
                                              },
                                            ]
                                          }
                                          title="Mode"
                                          vizState={Object {}}
                                        >
                                          <EuiTitle
                                            size="xxs"
                                          >
                                            <h3
                                              className="euiTitle euiTitle--xxsmall"
                                            >
                                              Mode
                                            </h3>
                                          </EuiTitle>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                          <div
                                            style={
                                              Object {
                                                "width": "fit-content",
                                              }
                                            }
                                          >
                                            <EuiButtonGroup
                                              buttonSize="compressed"
                                              id="random_html_id"
                                              idSelected="group"
                                              isFullWidth={false}
                                              legend="Mode"
                                              name="Mode"
                                              onChange={[Function]}
                                              options={
                                                Array [
                                                  Object {
                                                    "id": "group",
                                                    "label": "Group",
                                                    "name": "Group",
                                                  },
                                                  Object {
                                                    "id": "stack",
                                                    "label": "Stack",
                                                    "name": "Stack",
                                                  },
                                                ]
                                              }
                                            >
                                              <fieldset
                                                className="euiButtonGroup euiButtonGroup--compressed euiButtonGroup--text"
                                                disabled={false}
                                                id="random_html_id"
                                              >
                                                <EuiScreenReaderOnly>
                                                  <legend
                                                    className="euiScreenReaderOnly"
                                                  >
                                                    Mode
                                                  </legend>
                                                </EuiScreenReaderOnly>
                                                <div
                                                  className="euiButtonGroup__buttons"
                                                >
                                                  <EuiButtonGroupButton
                                                    color="text"
                                                    element="label"
                                                    id="group"
                                                    isDisabled={false}
                                                    isIconOnly={false}
                                                    isSelected={true}
                                                    key="0"
                                                    label="Group"
                                                    name="Group"
                                                    onChange={[Function]}
                                                    size="compressed"
                                                  >
                                                    <EuiButtonDisplay
                                                      baseClassName="euiButtonGroupButton"
                                                      className="euiButtonGroupButton-isSelected"
                                                      color="text"
                                                      element="label"
                                                      fill={false}
                                                      htmlFor="random_html_id"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                      size="s"
                                                      textProps={
                                                        Object {
                                                          "className": "euiButtonGroupButton__textShift",
                                                          "data-text": "Group",
                                                          "ref": [Function],
                                                          "title": "Group",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton-isSelected"
                                                        disabled={false}
                                                        htmlFor="random_html_id"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "minWidth": undefined,
                                                          }
                                                        }
                                                      >
                                                        <EuiButtonContent
                                                          className="euiButton__content"
                                                          iconSide="left"
                                                          textProps={
                                                            Object {
                                                              "className": "euiButton__text euiButtonGroupButton__textShift",
                                                              "data-text": "Group",
                                                              "ref": [Function],
                                                              "title": "Group",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="euiButtonContent euiButton__content"
                                                          >
                                                            <span
                                                              className="euiButton__text euiButtonGroupButton__textShift"
                                                              data-text="Group"
                                                              title="Group"
                                                            >
                                                              <input
                                                                checked={true}
                                                                className="euiScreenReaderOnly"
                                                                data-test-subj="group"
                                                                disabled={false}
                                                                id="random_html_id"
                                                                name="Group"
                                                                onChange={[Function]}
                                                                type="radio"
                                                              />
                                                              Group
                                                            </span>
                                                          </span>
                                                        </EuiButtonContent>
                                                      </label>
                                                    </EuiButtonDisplay>
                                                  </EuiButtonGroupButton>
                                                  <EuiButtonGroupButton
                                                    color="text"
                                                    element="label"
                                                    id="stack"
                                                    isDisabled={false}
                                                    isIconOnly={false}
                                                    isSelected={false}
                                                    key="1"
                                                    label="Stack"
                                                    name="Stack"
                                                    onChange={[Function]}
                                                    size="compressed"
                                                  >
                                                    <EuiButtonDisplay
                                                      baseClassName="euiButtonGroupButton"
                                                      className=""
                                                      color="text"
                                                      element="label"
                                                      fill={false}
                                                      htmlFor="random_html_id"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                      size="s"
                                                      textProps={
                                                        Object {
                                                          "className": "euiButtonGroupButton__textShift",
                                                          "data-text": "Stack",
                                                          "ref": [Function],
                                                          "title": "Stack",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                                        disabled={false}
                                                        htmlFor="random_html_id"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "minWidth": undefined,
                                                          }
                                                        }
                                                      >
                                                        <EuiButtonContent
                                                          className="euiButton__content"
                                                          iconSide="left"
                                                          textProps={
                                                            Object {
                                                              "className": "euiButton__text euiButtonGroupButton__textShift",
                                                              "data-text": "Stack",
                                                              "ref": [Function],
                                                              "title": "Stack",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="euiButtonContent euiButton__content"
                                                          >
                                                            <span
                                                              className="euiButton__text euiButtonGroupButton__textShift"
                                                              data-text="Stack"
                                                              title="Stack"
                                                            >
                                                              <input
                                                                checked={false}
                                                                className="euiScreenReaderOnly"
                                                                data-test-subj="stack"
                                                                disabled={false}
                                                                id="random_html_id"
                                                                name="Stack"
                                                                onChange={[Function]}
                                                                type="radio"
                                                              />
                                                              Stack
                                                            </span>
                                                          </span>
                                                        </EuiButtonContent>
                                                      </label>
                                                    </EuiButtonDisplay>
                                                  </EuiButtonGroupButton>
                                                </div>
                                              </fieldset>
                                            </EuiButtonGroup>
                                          </div>
                                        </ButtonGroupItem>
                                        <EuiSpacer
                                          size="s"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--s"
                                          />
                                        </EuiSpacer>
                                        <InputFieldItem
                                          handleInputChange={[Function]}
                                          numValue=""
                                          title="Label size"
                                          vizState={Object {}}
                                        >
                                          <EuiTitle
                                            size="xxs"
                                          >
                                            <h3
                                              className="euiTitle euiTitle--xxsmall"
                                            >
                                              Label size
                                            </h3>
                                          </EuiTitle>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                          <EuiFieldNumber
                                            data-test-subj="valueFieldNumber"
                                            fullWidth={true}
                                            id="random_html_id"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            placeholder="auto"
                                            value=""
                                          >
                                            <EuiFormControlLayout
                                              compressed={false}
                                              fullWidth={true}
                                              inputId="random_html_id"
                                              isLoading={false}
                                            >
                                              <div
                                                className="euiFormControlLayout euiFormControlLayout--fullWidth"
                                              >
                                                <div
                                                  className="euiFormControlLayout__childrenWrapper"
                                                >
                                                  <EuiValidatableControl>
                                                    <input
                                                      className="euiFieldNumber euiFieldNumber--fullWidth"
                                                      data-test-subj="valueFieldNumber"
                                                      id="random_html_id"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="auto"
                                                      type="number"
                                                      value=""
                                                    />
                                                  </EuiValidatableControl>
                                                  <EuiFormControlLayoutIcons
                                                    compressed={false}
                                                    isLoading={false}
                                                  />
                                                </div>
                                              </div>
                                            </EuiFormControlLayout>
                                          </EuiFieldNumber>
                                        </InputFieldItem>
                                        <EuiSpacer
                                          size="s"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--s"
                                          />
                                        </EuiSpacer>
                                        <SliderConfig
                                          currentRange={0}
                                          handleSliderChange={[Function]}
                                          max={90}
                                          maxRange={90}
                                          min={-90}
                                          minRange={-90}
                                          showTicks={true}
                                          step={1}
                                          ticks={
                                            Array [
                                              Object {
                                                "label": "-90°",
                                                "value": -90,
                                              },
                                              Object {
                                                "label": "-45°",
                                                "value": -45,
                                              },
                                              Object {
                                                "label": "0°",
                                                "value": 0,
                                              },
                                              Object {
                                                "label": "45°",
                                                "value": 45,
                                              },
                                              Object {
                                                "label": "90°",
                                                "value": 90,
                                              },
                                            ]
                                          }
                                          title="Rotate bar labels"
                                          vizState={Object {}}
                                        >
                                          <div
                                            style={
                                              Object {
                                                "display": "flex",
                                              }
                                            }
                                          >
                                            <EuiTitle
                                              size="xxs"
                                            >
                                              <h3
                                                className="euiTitle euiTitle--xxsmall"
                                              >
                                                Rotate bar labels
                                              </h3>
                                            </EuiTitle>
                                            <EuiToolTip
                                              anchorClassName="eui-textTruncate"
                                              content="Value must be in the range of -90 to 90"
                                              delay="regular"
                                              position="top"
                                            >
                                              <span
                                                className="euiToolTipAnchor eui-textTruncate"
                                                onKeyUp={[Function]}
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <EuiIcon
                                                  className="info-icon"
                                                  color="text"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  size="m"
                                                  type="iInCircle"
                                                >
                                                  <EuiIconEmpty
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon--text euiIcon-isLoading info-icon"
                                                    focusable="false"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    role="img"
                                                    style={null}
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--medium euiIcon--text euiIcon-isLoading info-icon"
                                                      focusable="false"
                                                      height={16}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      role="img"
                                                      style={null}
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    />
                                                  </EuiIconEmpty>
                                                </EuiIcon>
                                              </span>
                                            </EuiToolTip>
                                          </div>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                          <EuiRange
                                            aria-label="change lineWidth slider"
                                            compressed={true}
                                            fullWidth={false}
                                            id="random_html_id"
                                            isLoading={false}
                                            levels={Array []}
                                            max={90}
                                            min={-90}
                                            name="Rotate bar labels"
                                            onChange={[Function]}
                                            showInput={true}
                                            showLabels={false}
                                            showRange={false}
                                            showTicks={true}
                                            showValue={false}
                                            step={1}
                                            ticks={
                                              Array [
                                                Object {
                                                  "label": "-90°",
                                                  "value": -90,
                                                },
                                                Object {
                                                  "label": "-45°",
                                                  "value": -45,
                                                },
                                                Object {
                                                  "label": "0°",
                                                  "value": 0,
                                                },
                                                Object {
                                                  "label": "45°",
                                                  "value": 45,
                                                },
                                                Object {
                                                  "label": "90°",
                                                  "value": 90,
                                                },
                                              ]
                                            }
                                            value={0}
                                          >
                                            <EuiRangeWrapper
                                              className="euiRange euiRange--hasInput"
                                              compressed={true}
                                              fullWidth={false}
                                            >
                                              <div
                                                className="euiRangeWrapper euiRangeWrapper--compressed euiRange euiRange--hasInput"
                                              >
                                                <EuiRangeTrack
                                                  aria-hidden={true}
                                                  compressed={true}
                                                  levels={Array []}
                                                  max={90}
                                                  min={-90}
                                                  onChange={[Function]}
                                                  showTicks={true}
                                                  step={1}
                                                  ticks={
                                                    Array [
                                                      Object {
                                                        "label": "-90°",
                                                        "value": -90,
                                                      },
                                                      Object {
                                                        "label": "-45°",
                                                        "value": -45,
                                                      },
                                                      Object {
                                                        "label": "0°",
                                                        "value": 0,
                                                      },
                                                      Object {
                                                        "label": "45°",
                                                        "value": 45,
                                                      },
                                                      Object {
                                                        "label": "90°",
                                                        "value": 90,
                                                      },
                                                    ]
                                                  }
                                                  value={0}
                                                >
                                                  <div
                                                    aria-hidden={true}
                                                    className="euiRangeTrack euiRangeTrack--hasTicks euiRangeTrack--compressed"
                                                  >
                                                    <EuiRangeTicks
                                                      compressed={true}
                                                      interval={1}
                                                      max={90}
                                                      min={-90}
                                                      onChange={[Function]}
                                                      tickSequence={
                                                        Array [
                                                          -90,
                                                          -45,
                                                          0,
                                                          45,
                                                          90,
                                                        ]
                                                      }
                                                      ticks={
                                                        Array [
                                                          Object {
                                                            "label": "-90°",
                                                            "value": -90,
                                                          },
                                                          Object {
                                                            "label": "-45°",
                                                            "value": -45,
                                                          },
                                                          Object {
                                                            "label": "0°",
                                                            "value": 0,
                                                          },
                                                          Object {
                                                            "label": "45°",
                                                            "value": 45,
                                                          },
                                                          Object {
                                                            "label": "90°",
                                                            "value": 90,
                                                          },
                                                        ]
                                                      }
                                                      value={0}
                                                    >
                                                      <div
                                                        className="euiRangeTicks euiRangeTicks--compressed euiRangeTicks--isCustom"
                                                      >
                                                        <EuiTickValue
                                                          compressed={true}
                                                          interval={1}
                                                          key="-90"
                                                          max={90}
                                                          min={-90}
                                                          onChange={[Function]}
                                                          percentageWidth={0.5524861878453038}
                                                          tickSequence={
                                                            Array [
                                                              -90,
                                                              -45,
                                                              0,
                                                              45,
                                                              90,
                                                            ]
                                                          }
                                                          tickValue={-90}
                                                          ticks={
                                                            Array [
                                                              Object {
                                                                "label": "-90°",
                                                                "value": -90,
                                                              },
                                                              Object {
                                                                "label": "-45°",
                                                                "value": -45,
                                                              },
                                                              Object {
                                                                "label": "0°",
                                                                "value": 0,
                                                              },
                                                              Object {
                                                                "label": "45°",
                                                                "value": 45,
                                                              },
                                                              Object {
                                                                "label": "90°",
                                                                "value": 90,
                                                              },
                                                            ]
                                                          }
                                                          ticksRef={
                                                            Object {
                                                              "current": <div
                                                                class="euiRangeTicks euiRangeTicks--compressed euiRangeTicks--isCustom"
                                                              >
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom euiRangeTick--isMin euiRangeTick--hasTickMark"
                                                                  style="left: calc(NaN% + 0px); margin-left: -1em;"
                                                                  tabindex="-1"
                                                                  title="-90°"
                                                                  type="button"
                                                                  value="-90"
                                                                >
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="euiRangeTick__pseudo"
                                                                  />
                                                                  -90°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="-45°"
                                                                  type="button"
                                                                  value="-45"
                                                                >
                                                                  -45°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--selected euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="0°"
                                                                  type="button"
                                                                  value="0"
                                                                >
                                                                  0°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="45°"
                                                                  type="button"
                                                                  value="45"
                                                                >
                                                                  45°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="90°"
                                                                  type="button"
                                                                  value="90"
                                                                >
                                                                  90°
                                                                </button>
                                                              </div>,
                                                            }
                                                          }
                                                          value={0}
                                                        >
                                                          <button
                                                            className="euiRangeTick euiRangeTick--isCustom euiRangeTick--isMin euiRangeTick--hasTickMark"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "left": "calc(NaN% + 0px)",
                                                                "marginLeft": "-1em",
                                                                "maxWidth": undefined,
                                                              }
                                                            }
                                                            tabIndex={-1}
                                                            title="-90°"
                                                            type="button"
                                                            value={-90}
                                                          >
                                                            <span
                                                              aria-hidden={true}
                                                              className="euiRangeTick__pseudo"
                                                              style={
                                                                Object {
                                                                  "marginLeft": "calc(1em + 4px)",
                                                                }
                                                              }
                                                            />
                                                            -90°
                                                          </button>
                                                        </EuiTickValue>
                                                        <EuiTickValue
                                                          compressed={true}
                                                          interval={1}
                                                          key="-45"
                                                          max={90}
                                                          min={-90}
                                                          onChange={[Function]}
                                                          percentageWidth={0.5524861878453038}
                                                          tickSequence={
                                                            Array [
                                                              -90,
                                                              -45,
                                                              0,
                                                              45,
                                                              90,
                                                            ]
                                                          }
                                                          tickValue={-45}
                                                          ticks={
                                                            Array [
                                                              Object {
                                                                "label": "-90°",
                                                                "value": -90,
                                                              },
                                                              Object {
                                                                "label": "-45°",
                                                                "value": -45,
                                                              },
                                                              Object {
                                                                "label": "0°",
                                                                "value": 0,
                                                              },
                                                              Object {
                                                                "label": "45°",
                                                                "value": 45,
                                                              },
                                                              Object {
                                                                "label": "90°",
                                                                "value": 90,
                                                              },
                                                            ]
                                                          }
                                                          ticksRef={
                                                            Object {
                                                              "current": <div
                                                                class="euiRangeTicks euiRangeTicks--compressed euiRangeTicks--isCustom"
                                                              >
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom euiRangeTick--isMin euiRangeTick--hasTickMark"
                                                                  style="left: calc(NaN% + 0px); margin-left: -1em;"
                                                                  tabindex="-1"
                                                                  title="-90°"
                                                                  type="button"
                                                                  value="-90"
                                                                >
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="euiRangeTick__pseudo"
                                                                  />
                                                                  -90°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="-45°"
                                                                  type="button"
                                                                  value="-45"
                                                                >
                                                                  -45°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--selected euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="0°"
                                                                  type="button"
                                                                  value="0"
                                                                >
                                                                  0°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="45°"
                                                                  type="button"
                                                                  value="45"
                                                                >
                                                                  45°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="90°"
                                                                  type="button"
                                                                  value="90"
                                                                >
                                                                  90°
                                                                </button>
                                                              </div>,
                                                            }
                                                          }
                                                          value={0}
                                                        >
                                                          <button
                                                            className="euiRangeTick euiRangeTick--isCustom"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "left": "calc(-Infinity% + 8px)",
                                                                "maxWidth": undefined,
                                                              }
                                                            }
                                                            tabIndex={-1}
                                                            title="-45°"
                                                            type="button"
                                                            value={-45}
                                                          >
                                                            -45°
                                                          </button>
                                                        </EuiTickValue>
                                                        <EuiTickValue
                                                          compressed={true}
                                                          interval={1}
                                                          key="0"
                                                          max={90}
                                                          min={-90}
                                                          onChange={[Function]}
                                                          percentageWidth={0.5524861878453038}
                                                          tickSequence={
                                                            Array [
                                                              -90,
                                                              -45,
                                                              0,
                                                              45,
                                                              90,
                                                            ]
                                                          }
                                                          tickValue={0}
                                                          ticks={
                                                            Array [
                                                              Object {
                                                                "label": "-90°",
                                                                "value": -90,
                                                              },
                                                              Object {
                                                                "label": "-45°",
                                                                "value": -45,
                                                              },
                                                              Object {
                                                                "label": "0°",
                                                                "value": 0,
                                                              },
                                                              Object {
                                                                "label": "45°",
                                                                "value": 45,
                                                              },
                                                              Object {
                                                                "label": "90°",
                                                                "value": 90,
                                                              },
                                                            ]
                                                          }
                                                          ticksRef={
                                                            Object {
                                                              "current": <div
                                                                class="euiRangeTicks euiRangeTicks--compressed euiRangeTicks--isCustom"
                                                              >
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom euiRangeTick--isMin euiRangeTick--hasTickMark"
                                                                  style="left: calc(NaN% + 0px); margin-left: -1em;"
                                                                  tabindex="-1"
                                                                  title="-90°"
                                                                  type="button"
                                                                  value="-90"
                                                                >
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="euiRangeTick__pseudo"
                                                                  />
                                                                  -90°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="-45°"
                                                                  type="button"
                                                                  value="-45"
                                                                >
                                                                  -45°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--selected euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="0°"
                                                                  type="button"
                                                                  value="0"
                                                                >
                                                                  0°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="45°"
                                                                  type="button"
                                                                  value="45"
                                                                >
                                                                  45°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="90°"
                                                                  type="button"
                                                                  value="90"
                                                                >
                                                                  90°
                                                                </button>
                                                              </div>,
                                                            }
                                                          }
                                                          value={0}
                                                        >
                                                          <button
                                                            className="euiRangeTick euiRangeTick--selected euiRangeTick--isCustom"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "left": "calc(-Infinity% + 8px)",
                                                                "maxWidth": undefined,
                                                              }
                                                            }
                                                            tabIndex={-1}
                                                            title="0°"
                                                            type="button"
                                                            value={0}
                                                          >
                                                            0°
                                                          </button>
                                                        </EuiTickValue>
                                                        <EuiTickValue
                                                          compressed={true}
                                                          interval={1}
                                                          key="45"
                                                          max={90}
                                                          min={-90}
                                                          onChange={[Function]}
                                                          percentageWidth={0.5524861878453038}
                                                          tickSequence={
                                                            Array [
                                                              -90,
                                                              -45,
                                                              0,
                                                              45,
                                                              90,
                                                            ]
                                                          }
                                                          tickValue={45}
                                                          ticks={
                                                            Array [
                                                              Object {
                                                                "label": "-90°",
                                                                "value": -90,
                                                              },
                                                              Object {
                                                                "label": "-45°",
                                                                "value": -45,
                                                              },
                                                              Object {
                                                                "label": "0°",
                                                                "value": 0,
                                                              },
                                                              Object {
                                                                "label": "45°",
                                                                "value": 45,
                                                              },
                                                              Object {
                                                                "label": "90°",
                                                                "value": 90,
                                                              },
                                                            ]
                                                          }
                                                          ticksRef={
                                                            Object {
                                                              "current": <div
                                                                class="euiRangeTicks euiRangeTicks--compressed euiRangeTicks--isCustom"
                                                              >
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom euiRangeTick--isMin euiRangeTick--hasTickMark"
                                                                  style="left: calc(NaN% + 0px); margin-left: -1em;"
                                                                  tabindex="-1"
                                                                  title="-90°"
                                                                  type="button"
                                                                  value="-90"
                                                                >
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="euiRangeTick__pseudo"
                                                                  />
                                                                  -90°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="-45°"
                                                                  type="button"
                                                                  value="-45"
                                                                >
                                                                  -45°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--selected euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="0°"
                                                                  type="button"
                                                                  value="0"
                                                                >
                                                                  0°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="45°"
                                                                  type="button"
                                                                  value="45"
                                                                >
                                                                  45°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="90°"
                                                                  type="button"
                                                                  value="90"
                                                                >
                                                                  90°
                                                                </button>
                                                              </div>,
                                                            }
                                                          }
                                                          value={0}
                                                        >
                                                          <button
                                                            className="euiRangeTick euiRangeTick--isCustom"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "left": "calc(-Infinity% + 8px)",
                                                                "maxWidth": undefined,
                                                              }
                                                            }
                                                            tabIndex={-1}
                                                            title="45°"
                                                            type="button"
                                                            value={45}
                                                          >
                                                            45°
                                                          </button>
                                                        </EuiTickValue>
                                                        <EuiTickValue
                                                          compressed={true}
                                                          interval={1}
                                                          key="90"
                                                          max={90}
                                                          min={-90}
                                                          onChange={[Function]}
                                                          percentageWidth={0.5524861878453038}
                                                          tickSequence={
                                                            Array [
                                                              -90,
                                                              -45,
                                                              0,
                                                              45,
                                                              90,
                                                            ]
                                                          }
                                                          tickValue={90}
                                                          ticks={
                                                            Array [
                                                              Object {
                                                                "label": "-90°",
                                                                "value": -90,
                                                              },
                                                              Object {
                                                                "label": "-45°",
                                                                "value": -45,
                                                              },
                                                              Object {
                                                                "label": "0°",
                                                                "value": 0,
                                                              },
                                                              Object {
                                                                "label": "45°",
                                                                "value": 45,
                                                              },
                                                              Object {
                                                                "label": "90°",
                                                                "value": 90,
                                                              },
                                                            ]
                                                          }
                                                          ticksRef={
                                                            Object {
                                                              "current": <div
                                                                class="euiRangeTicks euiRangeTicks--compressed euiRangeTicks--isCustom"
                                                              >
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom euiRangeTick--isMin euiRangeTick--hasTickMark"
                                                                  style="left: calc(NaN% + 0px); margin-left: -1em;"
                                                                  tabindex="-1"
                                                                  title="-90°"
                                                                  type="button"
                                                                  value="-90"
                                                                >
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="euiRangeTick__pseudo"
                                                                  />
                                                                  -90°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="-45°"
                                                                  type="button"
                                                                  value="-45"
                                                                >
                                                                  -45°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--selected euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="0°"
                                                                  type="button"
                                                                  value="0"
                                                                >
                                                                  0°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="45°"
                                                                  type="button"
                                                                  value="45"
                                                                >
                                                                  45°
                                                                </button>
                                                                <button
                                                                  class="euiRangeTick euiRangeTick--isCustom"
                                                                  style="left: calc(-Infinity% + 8px);"
                                                                  tabindex="-1"
                                                                  title="90°"
                                                                  type="button"
                                                                  value="90"
                                                                >
                                                                  90°
                                                                </button>
                                                              </div>,
                                                            }
                                                          }
                                                          value={0}
                                                        >
                                                          <button
                                                            className="euiRangeTick euiRangeTick--isCustom"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "left": "calc(-Infinity% + 8px)",
                                                                "maxWidth": undefined,
                                                              }
                                                            }
                                                            tabIndex={-1}
                                                            title="90°"
                                                            type="button"
                                                            value={90}
                                                          >
                                                            90°
                                                          </button>
                                                        </EuiTickValue>
                                                      </div>
                                                    </EuiRangeTicks>
                                                    <EuiRangeSlider
                                                      aria-hidden={true}
                                                      aria-label="change lineWidth slider"
                                                      compressed={true}
                                                      max={90}
                                                      min={-90}
                                                      name="Rotate bar labels"
                                                      onChange={[Function]}
                                                      showRange={false}
                                                      showTicks={true}
                                                      step={1}
                                                      tabIndex={-1}
                                                      value={0}
                                                    >
                                                      <input
                                                        aria-hidden={true}
                                                        aria-label="change lineWidth slider"
                                                        className="euiRangeSlider euiRangeSlider--hasTicks euiRangeSlider--compressed"
                                                        max={90}
                                                        min={-90}
                                                        name="Rotate bar labels"
                                                        onChange={[Function]}
                                                        step={1}
                                                        tabIndex={-1}
                                                        type="range"
                                                        value={0}
                                                      />
                                                    </EuiRangeSlider>
                                                  </div>
                                                </EuiRangeTrack>
                                                <div
                                                  className="euiRange__slimHorizontalSpacer"
                                                />
                                                <EuiRangeInput
                                                  aria-label="change lineWidth slider"
                                                  autoSize={true}
                                                  compressed={true}
                                                  digitTolerance={3}
                                                  fullWidth={false}
                                                  id="random_html_id"
                                                  isLoading={false}
                                                  max={90}
                                                  min={-90}
                                                  name="Rotate bar labels"
                                                  onChange={[Function]}
                                                  step={1}
                                                  value={0}
                                                >
                                                  <EuiFieldNumber
                                                    aria-label="change lineWidth slider"
                                                    className="euiRangeInput euiRangeInput--max"
                                                    compressed={true}
                                                    fullWidth={false}
                                                    id="random_html_id"
                                                    isLoading={false}
                                                    max={90}
                                                    min={-90}
                                                    name="Rotate bar labels"
                                                    onChange={[Function]}
                                                    step={1}
                                                    style={
                                                      Object {
                                                        "width": "4.4em",
                                                      }
                                                    }
                                                    value={0}
                                                  >
                                                    <EuiFormControlLayout
                                                      compressed={true}
                                                      fullWidth={false}
                                                      inputId="random_html_id"
                                                      isLoading={false}
                                                    >
                                                      <div
                                                        className="euiFormControlLayout euiFormControlLayout--compressed"
                                                      >
                                                        <div
                                                          className="euiFormControlLayout__childrenWrapper"
                                                        >
                                                          <EuiValidatableControl>
                                                            <input
                                                              aria-label="change lineWidth slider"
                                                              className="euiFieldNumber euiRangeInput euiRangeInput--max euiFieldNumber--compressed"
                                                              id="random_html_id"
                                                              max={90}
                                                              min={-90}
                                                              name="Rotate bar labels"
                                                              onChange={[Function]}
                                                              step={1}
                                                              style={
                                                                Object {
                                                                  "width": "4.4em",
                                                                }
                                                              }
                                                              type="number"
                                                              value={0}
                                                            />
                                                          </EuiValidatableControl>
                                                          <EuiFormControlLayoutIcons
                                                            compressed={true}
                                                            isLoading={false}
                                                          />
                                                        </div>
                                                      </div>
                                                    </EuiFormControlLayout>
                                                  </EuiFieldNumber>
                                                </EuiRangeInput>
                                              </div>
                                            </EuiRangeWrapper>
                                          </EuiRange>
                                        </SliderConfig>
                                        <EuiSpacer
                                          size="s"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--s"
                                          />
                                        </EuiSpacer>
                                        <SliderConfig
                                          currentRange={0.7}
                                          handleSliderChange={[Function]}
                                          max={1}
                                          maxRange={1}
                                          minRange={0}
                                          showTicks={false}
                                          step={0.01}
                                          title="Group width"
                                          vizState={Object {}}
                                        >
                                          <div
                                            style={
                                              Object {
                                                "display": "flex",
                                              }
                                            }
                                          >
                                            <EuiTitle
                                              size="xxs"
                                            >
                                              <h3
                                                className="euiTitle euiTitle--xxsmall"
                                              >
                                                Group width
                                              </h3>
                                            </EuiTitle>
                                            <EuiToolTip
                                              anchorClassName="eui-textTruncate"
                                              content="Value must be in the range of 0 to 1"
                                              delay="regular"
                                              position="top"
                                            >
                                              <span
                                                className="euiToolTipAnchor eui-textTruncate"
                                                onKeyUp={[Function]}
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <EuiIcon
                                                  className="info-icon"
                                                  color="text"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  size="m"
                                                  type="iInCircle"
                                                >
                                                  <EuiIconEmpty
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon--text euiIcon-isLoading info-icon"
                                                    focusable="false"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    role="img"
                                                    style={null}
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--medium euiIcon--text euiIcon-isLoading info-icon"
                                                      focusable="false"
                                                      height={16}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      role="img"
                                                      style={null}
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    />
                                                  </EuiIconEmpty>
                                                </EuiIcon>
                                              </span>
                                            </EuiToolTip>
                                          </div>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                          <EuiRange
                                            aria-label="change lineWidth slider"
                                            compressed={true}
                                            fullWidth={false}
                                            id="random_html_id"
                                            isLoading={false}
                                            levels={Array []}
                                            max={1}
                                            min={0}
                                            name="Group width"
                                            onChange={[Function]}
                                            showInput={true}
                                            showLabels={false}
                                            showRange={false}
                                            showTicks={false}
                                            showValue={false}
                                            step={0.01}
                                            value={0.7}
                                          >
                                            <EuiRangeWrapper
                                              className="euiRange euiRange--hasInput"
                                              compressed={true}
                                              fullWidth={false}
                                            >
                                              <div
                                                className="euiRangeWrapper euiRangeWrapper--compressed euiRange euiRange--hasInput"
                                              >
                                                <EuiRangeTrack
                                                  aria-hidden={true}
                                                  compressed={true}
                                                  levels={Array []}
                                                  max={1}
                                                  min={0}
                                                  onChange={[Function]}
                                                  showTicks={false}
                                                  step={0.01}
                                                  value={0.7}
                                                >
                                                  <div
                                                    aria-hidden={true}
                                                    className="euiRangeTrack euiRangeTrack--compressed"
                                                  >
                                                    <EuiRangeSlider
                                                      aria-hidden={true}
                                                      aria-label="change lineWidth slider"
                                                      compressed={true}
                                                      max={1}
                                                      min={0}
                                                      name="Group width"
                                                      onChange={[Function]}
                                                      showRange={false}
                                                      showTicks={false}
                                                      step={0.01}
                                                      tabIndex={-1}
                                                      value={0.7}
                                                    >
                                                      <input
                                                        aria-hidden={true}
                                                        aria-label="change lineWidth slider"
                                                        className="euiRangeSlider euiRangeSlider--compressed"
                                                        max={1}
                                                        min={0}
                                                        name="Group width"
                                                        onChange={[Function]}
                                                        step={0.01}
                                                        tabIndex={-1}
                                                        type="range"
                                                        value={0.7}
                                                      />
                                                    </EuiRangeSlider>
                                                  </div>
                                                </EuiRangeTrack>
                                                <div
                                                  className="euiRange__horizontalSpacer"
                                                />
                                                <EuiRangeInput
                                                  aria-label="change lineWidth slider"
                                                  autoSize={true}
                                                  compressed={true}
                                                  digitTolerance={1}
                                                  fullWidth={false}
                                                  id="random_html_id"
                                                  isLoading={false}
                                                  max={1}
                                                  min={0}
                                                  name="Group width"
                                                  onChange={[Function]}
                                                  step={0.01}
                                                  value={0.7}
                                                >
                                                  <EuiFieldNumber
                                                    aria-label="change lineWidth slider"
                                                    className="euiRangeInput euiRangeInput--max"
                                                    compressed={true}
                                                    fullWidth={false}
                                                    id="random_html_id"
                                                    isLoading={false}
                                                    max={1}
                                                    min={0}
                                                    name="Group width"
                                                    onChange={[Function]}
                                                    step={0.01}
                                                    style={
                                                      Object {
                                                        "width": "2.8em",
                                                      }
                                                    }
                                                    value={0.7}
                                                  >
                                                    <EuiFormControlLayout
                                                      compressed={true}
                                                      fullWidth={false}
                                                      inputId="random_html_id"
                                                      isLoading={false}
                                                    >
                                                      <div
                                                        className="euiFormControlLayout euiFormControlLayout--compressed"
                                                      >
                                                        <div
                                                          className="euiFormControlLayout__childrenWrapper"
                                                        >
                                                          <EuiValidatableControl>
                                                            <input
                                                              aria-label="change lineWidth slider"
                                                              className="euiFieldNumber euiRangeInput euiRangeInput--max euiFieldNumber--compressed"
                                                              id="random_html_id"
                                                              max={1}
                                                              min={0}
                                                              name="Group width"
                                                              onChange={[Function]}
                                                              step={0.01}
                                                              style={
                                                                Object {
                                                                  "width": "2.8em",
                                                                }
                                                              }
                                                              type="number"
                                                              value={0.7}
                                                            />
                                                          </EuiValidatableControl>
                                                          <EuiFormControlLayoutIcons
                                                            compressed={true}
                                                            isLoading={false}
                                                          />
                                                        </div>
                                                      </div>
                                                    </EuiFormControlLayout>
                                                  </EuiFieldNumber>
                                                </EuiRangeInput>
                                              </div>
                                            </EuiRangeWrapper>
                                          </EuiRange>
                                        </SliderConfig>
                                        <EuiSpacer
                                          size="s"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--s"
                                          />
                                        </EuiSpacer>
                                        <SliderConfig
                                          currentRange={0.97}
                                          handleSliderChange={[Function]}
                                          max={1}
                                          maxRange={1}
                                          minRange={0}
                                          showTicks={false}
                                          step={0.01}
                                          title="Bar width"
                                          vizState={Object {}}
                                        >
                                          <div
                                            style={
                                              Object {
                                                "display": "flex",
                                              }
                                            }
                                          >
                                            <EuiTitle
                                              size="xxs"
                                            >
                                              <h3
                                                className="euiTitle euiTitle--xxsmall"
                                              >
                                                Bar width
                                              </h3>
                                            </EuiTitle>
                                            <EuiToolTip
                                              anchorClassName="eui-textTruncate"
                                              content="Value must be in the range of 0 to 1"
                                              delay="regular"
                                              position="top"
                                            >
                                              <span
                                                className="euiToolTipAnchor eui-textTruncate"
                                                onKeyUp={[Function]}
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <EuiIcon
                                                  className="info-icon"
                                                  color="text"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  size="m"
                                                  type="iInCircle"
                                                >
                                                  <EuiIconEmpty
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon--text euiIcon-isLoading info-icon"
                                                    focusable="false"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    role="img"
                                                    style={null}
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--medium euiIcon--text euiIcon-isLoading info-icon"
                                                      focusable="false"
                                                      height={16}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      role="img"
                                                      style={null}
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    />
                                                  </EuiIconEmpty>
                                                </EuiIcon>
                                              </span>
                                            </EuiToolTip>
                                          </div>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                          <EuiRange
                                            aria-label="change lineWidth slider"
                                            compressed={true}
                                            fullWidth={false}
                                            id="random_html_id"
                                            isLoading={false}
                                            levels={Array []}
                                            max={1}
                                            min={0}
                                            name="Bar width"
                                            onChange={[Function]}
                                            showInput={true}
                                            showLabels={false}
                                            showRange={false}
                                            showTicks={false}
                                            showValue={false}
                                            step={0.01}
                                            value={0.97}
                                          >
                                            <EuiRangeWrapper
                                              className="euiRange euiRange--hasInput"
                                              compressed={true}
                                              fullWidth={false}
                                            >
                                              <div
                                                className="euiRangeWrapper euiRangeWrapper--compressed euiRange euiRange--hasInput"
                                              >
                                                <EuiRangeTrack
                                                  aria-hidden={true}
                                                  compressed={true}
                                                  levels={Array []}
                                                  max={1}
                                                  min={0}
                                                  onChange={[Function]}
                                                  showTicks={false}
                                                  step={0.01}
                                                  value={0.97}
                                                >
                                                  <div
                                                    aria-hidden={true}
                                                    className="euiRangeTrack euiRangeTrack--compressed"
                                                  >
                                                    <EuiRangeSlider
                                                      aria-hidden={true}
                                                      aria-label="change lineWidth slider"
                                                      compressed={true}
                                                      max={1}
                                                      min={0}
                                                      name="Bar width"
                                                      onChange={[Function]}
                                                      showRange={false}
                                                      showTicks={false}
                                                      step={0.01}
                                                      tabIndex={-1}
                                                      value={0.97}
                                                    >
                                                      <input
                                                        aria-hidden={true}
                                                        aria-label="change lineWidth slider"
                                                        className="euiRangeSlider euiRangeSlider--compressed"
                                                        max={1}
                                                        min={0}
                                                        name="Bar width"
                                                        onChange={[Function]}
                                                        step={0.01}
                                                        tabIndex={-1}
                                                        type="range"
                                                        value={0.97}
                                                      />
                                                    </EuiRangeSlider>
                                                  </div>
                                                </EuiRangeTrack>
                                                <div
                                                  className="euiRange__horizontalSpacer"
                                                />
                                                <EuiRangeInput
                                                  aria-label="change lineWidth slider"
                                                  autoSize={true}
                                                  compressed={true}
                                                  digitTolerance={1}
                                                  fullWidth={false}
                                                  id="random_html_id"
                                                  isLoading={false}
                                                  max={1}
                                                  min={0}
                                                  name="Bar width"
                                                  onChange={[Function]}
                                                  step={0.01}
                                                  value={0.97}
                                                >
                                                  <EuiFieldNumber
                                                    aria-label="change lineWidth slider"
                                                    className="euiRangeInput euiRangeInput--max"
                                                    compressed={true}
                                                    fullWidth={false}
                                                    id="random_html_id"
                                                    isLoading={false}
                                                    max={1}
                                                    min={0}
                                                    name="Bar width"
                                                    onChange={[Function]}
                                                    step={0.01}
                                                    style={
                                                      Object {
                                                        "width": "2.8em",
                                                      }
                                                    }
                                                    value={0.97}
                                                  >
                                                    <EuiFormControlLayout
                                                      compressed={true}
                                                      fullWidth={false}
                                                      inputId="random_html_id"
                                                      isLoading={false}
                                                    >
                                                      <div
                                                        className="euiFormControlLayout euiFormControlLayout--compressed"
                                                      >
                                                        <div
                                                          className="euiFormControlLayout__childrenWrapper"
                                                        >
                                                          <EuiValidatableControl>
                                                            <input
                                                              aria-label="change lineWidth slider"
                                                              className="euiFieldNumber euiRangeInput euiRangeInput--max euiFieldNumber--compressed"
                                                              id="random_html_id"
                                                              max={1}
                                                              min={0}
                                                              name="Bar width"
                                                              onChange={[Function]}
                                                              step={0.01}
                                                              style={
                                                                Object {
                                                                  "width": "2.8em",
                                                                }
                                                              }
                                                              type="number"
                                                              value={0.97}
                                                            />
                                                          </EuiValidatableControl>
                                                          <EuiFormControlLayoutIcons
                                                            compressed={true}
                                                            isLoading={false}
                                                          />
                                                        </div>
                                                      </div>
                                                    </EuiFormControlLayout>
                                                  </EuiFieldNumber>
                                                </EuiRangeInput>
                                              </div>
                                            </EuiRangeWrapper>
                                          </EuiRange>
                                        </SliderConfig>
                                        <EuiSpacer
                                          size="s"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--s"
                                          />
                                        </EuiSpacer>
                                        <SliderConfig
                                          currentRange={2}
                                          handleSliderChange={[Function]}
                                          max={10}
                                          maxRange={10}
                                          minRange={0}
                                          showTicks={false}
                                          step={1}
                                          title="Line width"
                                          vizState={Object {}}
                                        >
                                          <div
                                            style={
                                              Object {
                                                "display": "flex",
                                              }
                                            }
                                          >
                                            <EuiTitle
                                              size="xxs"
                                            >
                                              <h3
                                                className="euiTitle euiTitle--xxsmall"
                                              >
                                                Line width
                                              </h3>
                                            </EuiTitle>
                                            <EuiToolTip
                                              anchorClassName="eui-textTruncate"
                                              content="Value must be in the range of 0 to 10"
                                              delay="regular"
                                              position="top"
                                            >
                                              <span
                                                className="euiToolTipAnchor eui-textTruncate"
                                                onKeyUp={[Function]}
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <EuiIcon
                                                  className="info-icon"
                                                  color="text"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  size="m"
                                                  type="iInCircle"
                                                >
                                                  <EuiIconEmpty
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon--text euiIcon-isLoading info-icon"
                                                    focusable="false"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    role="img"
                                                    style={null}
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--medium euiIcon--text euiIcon-isLoading info-icon"
                                                      focusable="false"
                                                      height={16}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      role="img"
                                                      style={null}
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    />
                                                  </EuiIconEmpty>
                                                </EuiIcon>
                                              </span>
                                            </EuiToolTip>
                                          </div>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                          <EuiRange
                                            aria-label="change lineWidth slider"
                                            compressed={true}
                                            fullWidth={false}
                                            id="random_html_id"
                                            isLoading={false}
                                            levels={Array []}
                                            max={10}
                                            min={0}
                                            name="Line width"
                                            onChange={[Function]}
                                            showInput={true}
                                            showLabels={false}
                                            showRange={false}
                                            showTicks={false}
                                            showValue={false}
                                            step={1}
                                            value={2}
                                          >
                                            <EuiRangeWrapper
                                              className="euiRange euiRange--hasInput"
                                              compressed={true}
                                              fullWidth={false}
                                            >
                                              <div
                                                className="euiRangeWrapper euiRangeWrapper--compressed euiRange euiRange--hasInput"
                                              >
                                                <EuiRangeTrack
                                                  aria-hidden={true}
                                                  compressed={true}
                                                  levels={Array []}
                                                  max={10}
                                                  min={0}
                                                  onChange={[Function]}
                                                  showTicks={false}
                                                  step={1}
                                                  value={2}
                                                >
                                                  <div
                                                    aria-hidden={true}
                                                    className="euiRangeTrack euiRangeTrack--compressed"
                                                  >
                                                    <EuiRangeSlider
                                                      aria-hidden={true}
                                                      aria-label="change lineWidth slider"
                                                      compressed={true}
                                                      max={10}
                                                      min={0}
                                                      name="Line width"
                                                      onChange={[Function]}
                                                      showRange={false}
                                                      showTicks={false}
                                                      step={1}
                                                      tabIndex={-1}
                                                      value={2}
                                                    >
                                                      <input
                                                        aria-hidden={true}
                                                        aria-label="change lineWidth slider"
                                                        className="euiRangeSlider euiRangeSlider--compressed"
                                                        max={10}
                                                        min={0}
                                                        name="Line width"
                                                        onChange={[Function]}
                                                        step={1}
                                                        tabIndex={-1}
                                                        type="range"
                                                        value={2}
                                                      />
                                                    </EuiRangeSlider>
                                                  </div>
                                                </EuiRangeTrack>
                                                <div
                                                  className="euiRange__horizontalSpacer"
                                                />
                                                <EuiRangeInput
                                                  aria-label="change lineWidth slider"
                                                  autoSize={true}
                                                  compressed={true}
                                                  digitTolerance={2}
                                                  fullWidth={false}
                                                  id="random_html_id"
                                                  isLoading={false}
                                                  max={10}
                                                  min={0}
                                                  name="Line width"
                                                  onChange={[Function]}
                                                  step={1}
                                                  value={2}
                                                >
                                                  <EuiFieldNumber
                                                    aria-label="change lineWidth slider"
                                                    className="euiRangeInput euiRangeInput--max"
                                                    compressed={true}
                                                    fullWidth={false}
                                                    id="random_html_id"
                                                    isLoading={false}
                                                    max={10}
                                                    min={0}
                                                    name="Line width"
                                                    onChange={[Function]}
                                                    step={1}
                                                    style={
                                                      Object {
                                                        "width": "3.6em",
                                                      }
                                                    }
                                                    value={2}
                                                  >
                                                    <EuiFormControlLayout
                                                      compressed={true}
                                                      fullWidth={false}
                                                      inputId="random_html_id"
                                                      isLoading={false}
                                                    >
                                                      <div
                                                        className="euiFormControlLayout euiFormControlLayout--compressed"
                                                      >
                                                        <div
                                                          className="euiFormControlLayout__childrenWrapper"
                                                        >
                                                          <EuiValidatableControl>
                                                            <input
                                                              aria-label="change lineWidth slider"
                                                              className="euiFieldNumber euiRangeInput euiRangeInput--max euiFieldNumber--compressed"
                                                              id="random_html_id"
                                                              max={10}
                                                              min={0}
                                                              name="Line width"
                                                              onChange={[Function]}
                                                              step={1}
                                                              style={
                                                                Object {
                                                                  "width": "3.6em",
                                                                }
                                                              }
                                                              type="number"
                                                              value={2}
                                                            />
                                                          </EuiValidatableControl>
                                                          <EuiFormControlLayoutIcons
                                                            compressed={true}
                                                            isLoading={false}
                                                          />
                                                        </div>
                                                      </div>
                                                    </EuiFormControlLayout>
                                                  </EuiFieldNumber>
                                                </EuiRangeInput>
                                              </div>
                                            </EuiRangeWrapper>
                                          </EuiRange>
                                        </SliderConfig>
                                        <EuiSpacer
                                          size="s"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--s"
                                          />
                                        </EuiSpacer>
                                        <SliderConfig
                                          currentRange={70}
                                          handleSliderChange={[Function]}
                                          max={100}
                                          maxRange={100}
                                          minRange={0}
                                          showTicks={false}
                                          step={1}
                                          title="Fill opacity"
                                          vizState={Object {}}
                                        >
                                          <div
                                            style={
                                              Object {
                                                "display": "flex",
                                              }
                                            }
                                          >
                                            <EuiTitle
                                              size="xxs"
                                            >
                                              <h3
                                                className="euiTitle euiTitle--xxsmall"
                                              >
                                                Fill opacity
                                              </h3>
                                            </EuiTitle>
                                            <EuiToolTip
                                              anchorClassName="eui-textTruncate"
                                              content="Value must be in the range of 0 to 100"
                                              delay="regular"
                                              position="top"
                                            >
                                              <span
                                                className="euiToolTipAnchor eui-textTruncate"
                                                onKeyUp={[Function]}
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <EuiIcon
                                                  className="info-icon"
                                                  color="text"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  size="m"
                                                  type="iInCircle"
                                                >
                                                  <EuiIconEmpty
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon--text euiIcon-isLoading info-icon"
                                                    focusable="false"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    role="img"
                                                    style={null}
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--medium euiIcon--text euiIcon-isLoading info-icon"
                                                      focusable="false"
                                                      height={16}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      role="img"
                                                      style={null}
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    />
                                                  </EuiIconEmpty>
                                                </EuiIcon>
                                              </span>
                                            </EuiToolTip>
                                          </div>
                                          <EuiSpacer
                                            size="s"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--s"
                                            />
                                          </EuiSpacer>
                                          <EuiRange
                                            aria-label="change lineWidth slider"
                                            compressed={true}
                                            fullWidth={false}
                                            id="random_html_id"
                                            isLoading={false}
                                            levels={Array []}
                                            max={100}
                                            min={0}
                                            name="Fill opacity"
                                            onChange={[Function]}
                                            showInput={true}
                                            showLabels={false}
                                            showRange={false}
                                            showTicks={false}
                                            showValue={false}
                                            step={1}
                                            value={70}
                                          >
                                            <EuiRangeWrapper
                                              className="euiRange euiRange--hasInput"
                                              compressed={true}
                                              fullWidth={false}
                                            >
                                              <div
                                                className="euiRangeWrapper euiRangeWrapper--compressed euiRange euiRange--hasInput"
                                              >
                                                <EuiRangeTrack
                                                  aria-hidden={true}
                                                  compressed={true}
                                                  levels={Array []}
                                                  max={100}
                                                  min={0}
                                                  onChange={[Function]}
                                                  showTicks={false}
                                                  step={1}
                                                  value={70}
                                                >
                                                  <div
                                                    aria-hidden={true}
                                                    className="euiRangeTrack euiRangeTrack--compressed"
                                                  >
                                                    <EuiRangeSlider
                                                      aria-hidden={true}
                                                      aria-label="change lineWidth slider"
                                                      compressed={true}
                                                      max={100}
                                                      min={0}
                                                      name="Fill opacity"
                                                      onChange={[Function]}
                                                      showRange={false}
                                                      showTicks={false}
                                                      step={1}
                                                      tabIndex={-1}
                                                      value={70}
                                                    >
                                                      <input
                                                        aria-hidden={true}
                                                        aria-label="change lineWidth slider"
                                                        className="euiRangeSlider euiRangeSlider--compressed"
                                                        max={100}
                                                        min={0}
                                                        name="Fill opacity"
                                                        onChange={[Function]}
                                                        step={1}
                                                        tabIndex={-1}
                                                        type="range"
                                                        value={70}
                                                      />
                                                    </EuiRangeSlider>
                                                  </div>
                                                </EuiRangeTrack>
                                                <div
                                                  className="euiRange__horizontalSpacer"
                                                />
                                                <EuiRangeInput
                                                  aria-label="change lineWidth slider"
                                                  autoSize={true}
                                                  compressed={true}
                                                  digitTolerance={3}
                                                  fullWidth={false}
                                                  id="random_html_id"
                                                  isLoading={false}
                                                  max={100}
                                                  min={0}
                                                  name="Fill opacity"
                                                  onChange={[Function]}
                                                  step={1}
                                                  value={70}
                                                >
                                                  <EuiFieldNumber
                                                    aria-label="change lineWidth slider"
                                                    className="euiRangeInput euiRangeInput--max"
                                                    compressed={true}
                                                    fullWidth={false}
                                                    id="random_html_id"
                                                    isLoading={false}
                                                    max={100}
                                                    min={0}
                                                    name="Fill opacity"
                                                    onChange={[Function]}
                                                    step={1}
                                                    style={
                                                      Object {
                                                        "width": "4.4em",
                                                      }
                                                    }
                                                    value={70}
                                                  >
                                                    <EuiFormControlLayout
                                                      compressed={true}
                                                      fullWidth={false}
                                                      inputId="random_html_id"
                                                      isLoading={false}
                                                    >
                                                      <div
                                                        className="euiFormControlLayout euiFormControlLayout--compressed"
                                                      >
                                                        <div
                                                          className="euiFormControlLayout__childrenWrapper"
                                                        >
                                                          <EuiValidatableControl>
                                                            <input
                                                              aria-label="change lineWidth slider"
                                                              className="euiFieldNumber euiRangeInput euiRangeInput--max euiFieldNumber--compressed"
                                                              id="random_html_id"
                                                              max={100}
                                                              min={0}
                                                              name="Fill opacity"
                                                              onChange={[Function]}
                                                              step={1}
                                                              style={
                                                                Object {
                                                                  "width": "4.4em",
                                                                }
                                                              }
                                                              type="number"
                                                              value={70}
                                                            />
                                                          </EuiValidatableControl>
                                                          <EuiFormControlLayoutIcons
                                                            compressed={true}
                                                            isLoading={false}
                                                          />
                                                        </div>
                                                      </div>
                                                    </EuiFormControlLayout>
                                                  </EuiFieldNumber>
                                                </EuiRangeInput>
                                              </div>
                                            </EuiRangeWrapper>
                                          </EuiRange>
                                        </SliderConfig>
                                        <EuiSpacer
                                          size="s"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--s"
                                          />
                                        </EuiSpacer>
                                      </div>
                                    </div>
                                  </EuiResizeObserver>
                                </div>
                              </div>
                            </EuiAccordion>
                          </ConfigBarChartStyles>
                        </div>
                      </div>
                    </EuiFormRow>
                  </div>
                </EuiForm>
              </div>
            </VizDataPanel>
          </div>
        </div>
      </EuiTabbedContent>
    </div>
  </div>
</ConfigPanel>
`;
