// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Config panel component Renders config panel with visualization data 1`] = `
<ConfigPanel
  setCurVisId={[MockFunction]}
  visualizations={
    Object {
      "data": Object {
        "appData": Object {
          "fromApp": false,
        },
        "defaultAxes": Object {},
        "indexFields": Object {
          "availableFields": Array [
            Object {
              "name": "agent",
              "type": "string",
            },
            Object {
              "name": "bytes",
              "type": "long",
            },
            Object {
              "name": "clientip",
              "type": "ip",
            },
            Object {
              "name": "event",
              "type": "struct",
            },
            Object {
              "name": "extension",
              "type": "string",
            },
            Object {
              "name": "geo",
              "type": "struct",
            },
            Object {
              "name": "host",
              "type": "string",
            },
            Object {
              "name": "index",
              "type": "string",
            },
            Object {
              "name": "ip",
              "type": "ip",
            },
            Object {
              "name": "machine",
              "type": "struct",
            },
            Object {
              "name": "memory",
              "type": "double",
            },
            Object {
              "name": "message",
              "type": "string",
            },
            Object {
              "name": "phpmemory",
              "type": "long",
            },
            Object {
              "name": "referer",
              "type": "string",
            },
            Object {
              "name": "request",
              "type": "string",
            },
            Object {
              "name": "response",
              "type": "string",
            },
            Object {
              "name": "tags",
              "type": "string",
            },
            Object {
              "name": "timestamp",
              "type": "timestamp",
            },
            Object {
              "name": "url",
              "type": "string",
            },
            Object {
              "name": "utc_time",
              "type": "timestamp",
            },
          ],
          "queriedFields": Array [
            Object {
              "name": "double_per_ip_bytes",
              "type": "long",
            },
            Object {
              "name": "host",
              "type": "text",
            },
            Object {
              "name": "ip_count",
              "type": "integer",
            },
            Object {
              "name": "per_ip_bytes",
              "type": "long",
            },
            Object {
              "name": "resp_code",
              "type": "text",
            },
            Object {
              "name": "sum_bytes",
              "type": "long",
            },
          ],
          "selectedFields": Array [],
          "unselectedFields": Array [],
        },
        "query": Object {},
        "rawVizData": Object {
          "data": Object {
            "count()": Array [
              154,
              1753,
              116,
              468,
              1964,
              219,
            ],
            "tags": Array [
              "error",
              "info",
              "login",
              "security",
              "success",
              "warning",
            ],
          },
          "jsonData": Array [
            Object {
              "count()": 154,
              "tags": "error",
            },
            Object {
              "count()": 1753,
              "tags": "info",
            },
            Object {
              "count()": 116,
              "tags": "login",
            },
            Object {
              "count()": 468,
              "tags": "security",
            },
            Object {
              "count()": 1964,
              "tags": "success",
            },
            Object {
              "count()": 219,
              "tags": "warning",
            },
          ],
          "metadata": Object {
            "fields": Array [
              Object {
                "name": "count()",
                "type": "integer",
              },
              Object {
                "name": "tags",
                "type": "text",
              },
            ],
            "size": 6,
            "status": 200,
          },
        },
        "userConfigs": Object {},
      },
      "vis": Object {
        "category": "Visualizations",
        "categoryAxis": "xaxis",
        "component": [Function],
        "editorConfig": Object {
          "panelTabs": Array [
            Object {
              "editor": [Function],
              "id": "data-panel",
              "mapTo": "dataConfig",
              "name": "Data",
              "sections": Array [
                Object {
                  "editor": [Function],
                  "id": "value_options",
                  "mapTo": "valueOptions",
                  "name": "Value options",
                  "schemas": Array [
                    Object {
                      "component": null,
                      "isSingleSelection": false,
                      "mapTo": "xaxis",
                      "name": "X-axis",
                    },
                    Object {
                      "component": null,
                      "isSingleSelection": false,
                      "mapTo": "yaxis",
                      "name": "Y-axis",
                    },
                  ],
                },
                Object {
                  "editor": [Function],
                  "id": "chart_options",
                  "mapTo": "chartOptions",
                  "name": "Chart options",
                  "schemas": Array [
                    Object {
                      "component": null,
                      "isSingleSelection": true,
                      "mapTo": "orientation",
                      "name": "Orientation",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "name": "Vertical",
                            "orientationId": "v",
                          },
                        ],
                        "dropdownList": Array [
                          Object {
                            "name": "Vertical",
                            "orientationId": "v",
                          },
                          Object {
                            "name": "Horizontal",
                            "orientationId": "h",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": null,
                      "isSingleSelection": true,
                      "mapTo": "mode",
                      "name": "Mode",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "modeId": "group",
                            "name": "Group",
                          },
                        ],
                        "dropdownList": Array [
                          Object {
                            "modeId": "group",
                            "name": "Group",
                          },
                          Object {
                            "modeId": "stack",
                            "name": "Stack",
                          },
                        ],
                      },
                    },
                  ],
                },
              ],
            },
            Object {
              "content": Array [],
              "editor": [Function],
              "id": "style-panel",
              "mapTo": "layoutConfig",
              "name": "Layout",
            },
            Object {
              "editor": [Function],
              "id": "availability-panel",
              "mapTo": "availabilityConfig",
              "name": "Availability",
            },
          ],
        },
        "fullLabel": "Bar",
        "icon": [Function],
        "iconType": "visBarVerticalStacked",
        "id": "bar",
        "label": "Bar",
        "name": "bar",
        "orientation": "v",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "seriesAxis": "yaxis",
        "type": "bar",
        "visConfig": Object {
          "config": Object {
            "displaylogo": false,
            "responsive": true,
          },
          "isUniColor": false,
          "layout": Object {
            "height": 500,
            "legend": Object {
              "orientation": "v",
              "traceorder": "normal",
            },
            "margin": Object {
              "b": 30,
              "l": 60,
              "pad": 0,
              "r": 30,
              "t": 50,
            },
            "showlegend": true,
          },
        },
      },
    }
  }
>
  <EuiFlexGroup
    className="visEditorSidebar"
    direction="column"
    gutterSize="none"
    justifyContent="spaceBetween"
    responsive={false}
  >
    <div
      className="euiFlexGroup euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionColumn visEditorSidebar"
    >
      <EuiFlexItem
        data-test-subj="configPane__vizTypeSelector"
      >
        <div
          className="euiFlexItem"
          data-test-subj="configPane__vizTypeSelector"
        >
          <EuiSpacer
            size="s"
          >
            <div
              className="euiSpacer euiSpacer--s"
            />
          </EuiSpacer>
          <EuiComboBox
            aria-label="config chart selector"
            async={false}
            compressed={false}
            fullWidth={true}
            isClearable={true}
            onChange={[Function]}
            options={
              Array [
                Object {
                  "category": "Visualizations",
                  "categoryAxis": "xaxis",
                  "component": [Function],
                  "editorConfig": Object {
                    "panelTabs": Array [
                      Object {
                        "editor": [Function],
                        "id": "data-panel",
                        "mapTo": "dataConfig",
                        "name": "Data",
                        "sections": Array [
                          Object {
                            "editor": [Function],
                            "id": "value_options",
                            "mapTo": "valueOptions",
                            "name": "Value options",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "isSingleSelection": false,
                                "mapTo": "xaxis",
                                "name": "X-axis",
                              },
                              Object {
                                "component": null,
                                "isSingleSelection": false,
                                "mapTo": "yaxis",
                                "name": "Y-axis",
                              },
                            ],
                          },
                          Object {
                            "editor": [Function],
                            "id": "chart_options",
                            "mapTo": "chartOptions",
                            "name": "Chart options",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "isSingleSelection": true,
                                "mapTo": "orientation",
                                "name": "Orientation",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "name": "Vertical",
                                      "orientationId": "v",
                                    },
                                  ],
                                  "dropdownList": Array [
                                    Object {
                                      "name": "Vertical",
                                      "orientationId": "v",
                                    },
                                    Object {
                                      "name": "Horizontal",
                                      "orientationId": "h",
                                    },
                                  ],
                                },
                              },
                              Object {
                                "component": null,
                                "isSingleSelection": true,
                                "mapTo": "mode",
                                "name": "Mode",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "modeId": "group",
                                      "name": "Group",
                                    },
                                  ],
                                  "dropdownList": Array [
                                    Object {
                                      "modeId": "group",
                                      "name": "Group",
                                    },
                                    Object {
                                      "modeId": "stack",
                                      "name": "Stack",
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "content": Array [],
                        "editor": [Function],
                        "id": "style-panel",
                        "mapTo": "layoutConfig",
                        "name": "Layout",
                      },
                      Object {
                        "editor": [Function],
                        "id": "availability-panel",
                        "mapTo": "availabilityConfig",
                        "name": "Availability",
                      },
                    ],
                  },
                  "fullLabel": "Bar",
                  "icon": [Function],
                  "iconType": "visBarVerticalStacked",
                  "id": "bar",
                  "label": "Bar",
                  "name": "bar",
                  "orientation": "v",
                  "selection": Object {
                    "dataLoss": "nothing",
                  },
                  "seriesAxis": "yaxis",
                  "type": "bar",
                  "visConfig": Object {
                    "config": Object {
                      "displaylogo": false,
                      "responsive": true,
                    },
                    "isUniColor": false,
                    "layout": Object {
                      "height": 500,
                      "legend": Object {
                        "orientation": "v",
                        "traceorder": "normal",
                      },
                      "margin": Object {
                        "b": 30,
                        "l": 60,
                        "pad": 0,
                        "r": 30,
                        "t": 50,
                      },
                      "showlegend": true,
                    },
                  },
                },
                Object {
                  "category": "Visualizations",
                  "categoryAxis": "xaxis",
                  "component": [Function],
                  "editorConfig": Object {
                    "panelTabs": Array [
                      Object {
                        "editor": [Function],
                        "id": "data-panel",
                        "mapTo": "dataConfig",
                        "name": "Data",
                        "sections": Array [
                          Object {
                            "editor": [Function],
                            "id": "value_options",
                            "mapTo": "valueOptions",
                            "name": "Value options",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "isSingleSelection": true,
                                "mapTo": "xaxis",
                                "name": "X-axis",
                              },
                              Object {
                                "component": null,
                                "isSingleSelection": false,
                                "mapTo": "yaxis",
                                "name": "Y-axis",
                              },
                            ],
                          },
                          Object {
                            "editor": [Function],
                            "id": "chart_options",
                            "mapTo": "chartOptions",
                            "name": "Chart options",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "isSingleSelection": true,
                                "mapTo": "mode",
                                "name": "Mode",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "modeId": "lines",
                                      "name": "Lines",
                                    },
                                  ],
                                  "dropdownList": Array [
                                    Object {
                                      "modeId": "markers",
                                      "name": "Markers",
                                    },
                                    Object {
                                      "modeId": "lines",
                                      "name": "Lines",
                                    },
                                    Object {
                                      "modeId": "lines+markers",
                                      "name": "Lines + Markers",
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          Object {
                            "defaultState": Array [],
                            "editor": [Function],
                            "id": "thresholds",
                            "mapTo": "thresholds",
                            "name": "Thresholds",
                            "schemas": Array [],
                          },
                        ],
                      },
                      Object {
                        "content": Array [],
                        "editor": [Function],
                        "id": "style-panel",
                        "mapTo": "layoutConfig",
                        "name": "Layout",
                      },
                      Object {
                        "editor": [Function],
                        "id": "availability-panel",
                        "mapTo": "availabilityConfig",
                        "name": "Availability",
                      },
                    ],
                  },
                  "fullLabel": "Line",
                  "icon": [Function],
                  "iconType": "visLine",
                  "id": "line",
                  "label": "Line",
                  "name": "line",
                  "selection": Object {
                    "dataLoss": "nothing",
                  },
                  "seriesAxis": "yaxis",
                  "type": "line",
                  "visConfig": Object {
                    "config": Object {
                      "barmode": "line",
                      "displaylogo": false,
                      "responsive": true,
                      "xaxis": Object {
                        "automargin": true,
                      },
                      "yaxis": Object {
                        "automargin": true,
                      },
                    },
                    "layout": Object {
                      "colorway": Array [
                        "#3CA1C7",
                        "#8C55A3",
                        "#DB748A",
                        "#F2BE4B",
                        "#68CCC2",
                        "#2A7866",
                        "#843769",
                        "#374FB8",
                        "#BD6F26",
                        "#4C636F",
                      ],
                      "height": 500,
                      "legend": Object {
                        "orientation": "v",
                        "traceorder": "normal",
                      },
                      "margin": Object {
                        "b": 30,
                        "l": 60,
                        "pad": 0,
                        "r": 30,
                        "t": 50,
                      },
                      "paper_bgcolor": "rgba(0, 0, 0, 0)",
                      "plot_bgcolor": "rgba(0, 0, 0, 0)",
                      "showlegend": true,
                      "xaxis": Object {
                        "fixedrange": true,
                        "showgrid": false,
                        "visible": true,
                      },
                      "yaxis": Object {
                        "fixedrange": true,
                        "showgrid": false,
                        "visible": true,
                      },
                    },
                  },
                },
                Object {
                  "category": "Visualizations",
                  "categoryAxis": "xaxis",
                  "component": [Function],
                  "editorConfig": Object {
                    "panelTabs": Array [
                      Object {
                        "editor": [Function],
                        "id": "data-panel",
                        "mapTo": "dataConfig",
                        "name": "Data",
                        "sections": Array [
                          Object {
                            "editor": [Function],
                            "id": "value_options",
                            "mapTo": "valueOptions",
                            "name": "Value options",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "isSingleSelection": false,
                                "mapTo": "xaxis",
                                "name": "Label",
                                "onChangeHandler": "setXaxisSelections",
                              },
                              Object {
                                "component": null,
                                "isSingleSelection": false,
                                "mapTo": "yaxis",
                                "name": "Value",
                                "onChangeHandler": "setYaxisSelections",
                              },
                            ],
                          },
                          Object {
                            "editor": [Function],
                            "id": "chart_options",
                            "mapTo": "chartOptions",
                            "name": "Chart options",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "isSingleSelection": true,
                                "mapTo": "mode",
                                "name": "Mode",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "modeId": "pie",
                                      "name": "Pie",
                                    },
                                  ],
                                  "dropdownList": Array [
                                    Object {
                                      "modeId": "pie",
                                      "name": "Pie",
                                    },
                                    Object {
                                      "modeId": "donut",
                                      "name": "Donut",
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "content": Array [],
                        "editor": [Function],
                        "id": "style-panel",
                        "mapTo": "layoutConfig",
                        "name": "Layout",
                      },
                    ],
                  },
                  "fullLabel": "Pie",
                  "icon": [Function],
                  "iconType": "visPie",
                  "id": "pie",
                  "label": "Pie",
                  "name": "pie",
                  "selection": Object {
                    "dataLoss": "nothing",
                  },
                  "seriesAxis": "yaxis",
                  "type": "pie",
                  "visConfig": Object {
                    "config": Object {
                      "displaylogo": false,
                      "responsive": true,
                    },
                    "layout": Object {
                      "colorway": Array [
                        "#3CA1C7",
                        "#8C55A3",
                        "#DB748A",
                        "#F2BE4B",
                        "#68CCC2",
                        "#2A7866",
                        "#843769",
                        "#374FB8",
                        "#BD6F26",
                        "#4C636F",
                      ],
                      "height": 500,
                      "legend": Object {
                        "orientation": "v",
                        "traceorder": "normal",
                      },
                      "margin": Object {
                        "b": 30,
                        "l": 60,
                        "pad": 0,
                        "r": 30,
                        "t": 50,
                      },
                      "paper_bgcolor": "rgba(0, 0, 0, 0)",
                      "plot_bgcolor": "rgba(0, 0, 0, 0)",
                      "showlegend": true,
                      "xaxis": Object {
                        "fixedrange": true,
                        "showgrid": false,
                        "visible": true,
                      },
                      "yaxis": Object {
                        "fixedrange": true,
                        "showgrid": false,
                        "visible": true,
                      },
                    },
                  },
                },
                Object {
                  "category": "Visualizations",
                  "component": [Function],
                  "editorConfig": Object {
                    "panelTabs": Array [
                      Object {
                        "editor": [Function],
                        "id": "data-panel",
                        "mapTo": "dataConfig",
                        "name": "Data",
                        "sections": Array [
                          Object {
                            "editor": [Function],
                            "id": "value_options",
                            "mapTo": "valueOptions",
                            "name": "Value options",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "isSingleSelection": true,
                                "mapTo": "zaxis",
                                "name": "Z-axis",
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "content": Array [],
                        "editor": [Function],
                        "id": "style-panel",
                        "mapTo": "layoutConfig",
                        "name": "Layout",
                      },
                    ],
                  },
                  "fullLabel": "Hubble",
                  "icon": [Function],
                  "iconType": "heatmap",
                  "id": "heatmap",
                  "label": "Heatmap",
                  "name": "heatmap",
                  "selection": Object {
                    "dataLoss": "nothing",
                  },
                  "type": "heatmap",
                  "visConfig": Object {
                    "config": Object {
                      "displaylogo": false,
                      "responsive": true,
                    },
                    "layout": Object {
                      "height": 500,
                      "legend": Object {
                        "orientation": "v",
                        "traceorder": "normal",
                      },
                      "margin": Object {
                        "left": 60,
                      },
                      "paper_bgcolor": "rgba(0, 0, 0, 0)",
                      "plot_bgcolor": "rgba(0, 0, 0, 0)",
                      "showlegend": true,
                    },
                  },
                },
                Object {
                  "category": "Visualizations",
                  "categoryAxis": "xaxis",
                  "component": [Function],
                  "editorConfig": Object {
                    "panelTabs": Array [
                      Object {
                        "editor": [Function],
                        "id": "data-panel",
                        "mapTo": "dataConfig",
                        "name": "Data",
                        "sections": Array [
                          Object {
                            "editor": [Function],
                            "id": "text_editor",
                            "mapTo": "text",
                            "name": "Text",
                            "schemas": Array [],
                          },
                        ],
                      },
                    ],
                  },
                  "fullLabel": "Text",
                  "icon": [Function],
                  "iconType": "visText",
                  "id": "text",
                  "label": "Text",
                  "name": "text",
                  "selection": Object {
                    "dataLoss": "nothing",
                  },
                  "seriesAxis": "yaxis",
                  "type": "text",
                  "visConfig": Object {
                    "config": Object {
                      "barmode": "line",
                      "displaylogo": false,
                      "responsive": true,
                      "xaxis": Object {
                        "automargin": true,
                      },
                      "yaxis": Object {
                        "automargin": true,
                      },
                    },
                    "layout": Object {
                      "colorway": Array [
                        "#3CA1C7",
                        "#8C55A3",
                        "#DB748A",
                        "#F2BE4B",
                        "#68CCC2",
                        "#2A7866",
                        "#843769",
                        "#374FB8",
                        "#BD6F26",
                        "#4C636F",
                      ],
                      "height": 500,
                      "legend": Object {
                        "orientation": "v",
                        "traceorder": "normal",
                      },
                      "margin": Object {
                        "b": 30,
                        "l": 60,
                        "pad": 0,
                        "r": 30,
                        "t": 50,
                      },
                      "paper_bgcolor": "rgba(0, 0, 0, 0)",
                      "plot_bgcolor": "rgba(0, 0, 0, 0)",
                      "showlegend": true,
                      "xaxis": Object {
                        "fixedrange": true,
                        "showgrid": false,
                        "visible": true,
                      },
                      "yaxis": Object {
                        "fixedrange": true,
                        "showgrid": false,
                        "visible": true,
                      },
                    },
                  },
                },
              ]
            }
            placeholder="Select a chart"
            renderOption={[Function]}
            selectedOptions={
              Array [
                Object {
                  "category": "Visualizations",
                  "categoryAxis": "xaxis",
                  "component": [Function],
                  "editorConfig": Object {
                    "panelTabs": Array [
                      Object {
                        "editor": [Function],
                        "id": "data-panel",
                        "mapTo": "dataConfig",
                        "name": "Data",
                        "sections": Array [
                          Object {
                            "editor": [Function],
                            "id": "value_options",
                            "mapTo": "valueOptions",
                            "name": "Value options",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "isSingleSelection": false,
                                "mapTo": "xaxis",
                                "name": "X-axis",
                              },
                              Object {
                                "component": null,
                                "isSingleSelection": false,
                                "mapTo": "yaxis",
                                "name": "Y-axis",
                              },
                            ],
                          },
                          Object {
                            "editor": [Function],
                            "id": "chart_options",
                            "mapTo": "chartOptions",
                            "name": "Chart options",
                            "schemas": Array [
                              Object {
                                "component": null,
                                "isSingleSelection": true,
                                "mapTo": "orientation",
                                "name": "Orientation",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "name": "Vertical",
                                      "orientationId": "v",
                                    },
                                  ],
                                  "dropdownList": Array [
                                    Object {
                                      "name": "Vertical",
                                      "orientationId": "v",
                                    },
                                    Object {
                                      "name": "Horizontal",
                                      "orientationId": "h",
                                    },
                                  ],
                                },
                              },
                              Object {
                                "component": null,
                                "isSingleSelection": true,
                                "mapTo": "mode",
                                "name": "Mode",
                                "props": Object {
                                  "defaultSelections": Array [
                                    Object {
                                      "modeId": "group",
                                      "name": "Group",
                                    },
                                  ],
                                  "dropdownList": Array [
                                    Object {
                                      "modeId": "group",
                                      "name": "Group",
                                    },
                                    Object {
                                      "modeId": "stack",
                                      "name": "Stack",
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "content": Array [],
                        "editor": [Function],
                        "id": "style-panel",
                        "mapTo": "layoutConfig",
                        "name": "Layout",
                      },
                      Object {
                        "editor": [Function],
                        "id": "availability-panel",
                        "mapTo": "availabilityConfig",
                        "name": "Availability",
                      },
                    ],
                  },
                  "fullLabel": "Bar",
                  "icon": [Function],
                  "iconType": "visBarVerticalStacked",
                  "id": "bar",
                  "label": "Bar",
                  "name": "bar",
                  "orientation": "v",
                  "selection": Object {
                    "dataLoss": "nothing",
                  },
                  "seriesAxis": "yaxis",
                  "type": "bar",
                  "visConfig": Object {
                    "config": Object {
                      "displaylogo": false,
                      "responsive": true,
                    },
                    "isUniColor": false,
                    "layout": Object {
                      "height": 500,
                      "legend": Object {
                        "orientation": "v",
                        "traceorder": "normal",
                      },
                      "margin": Object {
                        "b": 30,
                        "l": 60,
                        "pad": 0,
                        "r": 30,
                        "t": 50,
                      },
                      "showlegend": true,
                    },
                  },
                },
              ]
            }
            singleSelection={true}
            sortMatchesBy="none"
          >
            <div
              aria-expanded={false}
              aria-haspopup="listbox"
              aria-label="config chart selector"
              className="euiComboBox euiComboBox--fullWidth"
              onKeyDown={[Function]}
              role="combobox"
            >
              <EuiComboBoxInput
                autoSizeInputRef={[Function]}
                compressed={false}
                fullWidth={true}
                hasSelectedOptions={true}
                inputRef={[Function]}
                isListOpen={false}
                noIcon={false}
                onChange={[Function]}
                onClear={[Function]}
                onClick={[Function]}
                onCloseListClick={[Function]}
                onFocus={[Function]}
                onOpenListClick={[Function]}
                onRemoveOption={[Function]}
                placeholder="Select a chart"
                rootId={[Function]}
                searchValue=""
                selectedOptions={
                  Array [
                    Object {
                      "category": "Visualizations",
                      "categoryAxis": "xaxis",
                      "component": [Function],
                      "editorConfig": Object {
                        "panelTabs": Array [
                          Object {
                            "editor": [Function],
                            "id": "data-panel",
                            "mapTo": "dataConfig",
                            "name": "Data",
                            "sections": Array [
                              Object {
                                "editor": [Function],
                                "id": "value_options",
                                "mapTo": "valueOptions",
                                "name": "Value options",
                                "schemas": Array [
                                  Object {
                                    "component": null,
                                    "isSingleSelection": false,
                                    "mapTo": "xaxis",
                                    "name": "X-axis",
                                  },
                                  Object {
                                    "component": null,
                                    "isSingleSelection": false,
                                    "mapTo": "yaxis",
                                    "name": "Y-axis",
                                  },
                                ],
                              },
                              Object {
                                "editor": [Function],
                                "id": "chart_options",
                                "mapTo": "chartOptions",
                                "name": "Chart options",
                                "schemas": Array [
                                  Object {
                                    "component": null,
                                    "isSingleSelection": true,
                                    "mapTo": "orientation",
                                    "name": "Orientation",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "name": "Vertical",
                                          "orientationId": "v",
                                        },
                                      ],
                                      "dropdownList": Array [
                                        Object {
                                          "name": "Vertical",
                                          "orientationId": "v",
                                        },
                                        Object {
                                          "name": "Horizontal",
                                          "orientationId": "h",
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": null,
                                    "isSingleSelection": true,
                                    "mapTo": "mode",
                                    "name": "Mode",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "modeId": "group",
                                          "name": "Group",
                                        },
                                      ],
                                      "dropdownList": Array [
                                        Object {
                                          "modeId": "group",
                                          "name": "Group",
                                        },
                                        Object {
                                          "modeId": "stack",
                                          "name": "Stack",
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                          Object {
                            "content": Array [],
                            "editor": [Function],
                            "id": "style-panel",
                            "mapTo": "layoutConfig",
                            "name": "Layout",
                          },
                          Object {
                            "editor": [Function],
                            "id": "availability-panel",
                            "mapTo": "availabilityConfig",
                            "name": "Availability",
                          },
                        ],
                      },
                      "fullLabel": "Bar",
                      "icon": [Function],
                      "iconType": "visBarVerticalStacked",
                      "id": "bar",
                      "label": "Bar",
                      "name": "bar",
                      "orientation": "v",
                      "selection": Object {
                        "dataLoss": "nothing",
                      },
                      "seriesAxis": "yaxis",
                      "type": "bar",
                      "visConfig": Object {
                        "config": Object {
                          "displaylogo": false,
                          "responsive": true,
                        },
                        "isUniColor": false,
                        "layout": Object {
                          "height": 500,
                          "legend": Object {
                            "orientation": "v",
                            "traceorder": "normal",
                          },
                          "margin": Object {
                            "b": 30,
                            "l": 60,
                            "pad": 0,
                            "r": 30,
                            "t": 50,
                          },
                          "showlegend": true,
                        },
                      },
                    },
                  ]
                }
                singleSelection={true}
                toggleButtonRef={[Function]}
                updatePosition={[Function]}
                value="Bar"
              >
                <EuiFormControlLayout
                  clear={
                    Object {
                      "data-test-subj": "comboBoxClearButton",
                      "onClick": [Function],
                    }
                  }
                  compressed={false}
                  fullWidth={true}
                  icon={
                    Object {
                      "aria-label": "Open list of options",
                      "data-test-subj": "comboBoxToggleListButton",
                      "disabled": undefined,
                      "onClick": [Function],
                      "ref": [Function],
                      "side": "right",
                      "type": "arrowDown",
                    }
                  }
                >
                  <div
                    className="euiFormControlLayout euiFormControlLayout--fullWidth"
                  >
                    <div
                      className="euiFormControlLayout__childrenWrapper"
                    >
                      <div
                        className="euiComboBox__inputWrap euiComboBox__inputWrap--fullWidth euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                        data-test-subj="comboBoxInput"
                        onClick={[Function]}
                        tabIndex={-1}
                      >
                        <EuiComboBoxPill
                          asPlainText={false}
                          category="Visualizations"
                          categoryAxis="xaxis"
                          color="hollow"
                          component={[Function]}
                          editorConfig={
                            Object {
                              "panelTabs": Array [
                                Object {
                                  "editor": [Function],
                                  "id": "data-panel",
                                  "mapTo": "dataConfig",
                                  "name": "Data",
                                  "sections": Array [
                                    Object {
                                      "editor": [Function],
                                      "id": "value_options",
                                      "mapTo": "valueOptions",
                                      "name": "Value options",
                                      "schemas": Array [
                                        Object {
                                          "component": null,
                                          "isSingleSelection": false,
                                          "mapTo": "xaxis",
                                          "name": "X-axis",
                                        },
                                        Object {
                                          "component": null,
                                          "isSingleSelection": false,
                                          "mapTo": "yaxis",
                                          "name": "Y-axis",
                                        },
                                      ],
                                    },
                                    Object {
                                      "editor": [Function],
                                      "id": "chart_options",
                                      "mapTo": "chartOptions",
                                      "name": "Chart options",
                                      "schemas": Array [
                                        Object {
                                          "component": null,
                                          "isSingleSelection": true,
                                          "mapTo": "orientation",
                                          "name": "Orientation",
                                          "props": Object {
                                            "defaultSelections": Array [
                                              Object {
                                                "name": "Vertical",
                                                "orientationId": "v",
                                              },
                                            ],
                                            "dropdownList": Array [
                                              Object {
                                                "name": "Vertical",
                                                "orientationId": "v",
                                              },
                                              Object {
                                                "name": "Horizontal",
                                                "orientationId": "h",
                                              },
                                            ],
                                          },
                                        },
                                        Object {
                                          "component": null,
                                          "isSingleSelection": true,
                                          "mapTo": "mode",
                                          "name": "Mode",
                                          "props": Object {
                                            "defaultSelections": Array [
                                              Object {
                                                "modeId": "group",
                                                "name": "Group",
                                              },
                                            ],
                                            "dropdownList": Array [
                                              Object {
                                                "modeId": "group",
                                                "name": "Group",
                                              },
                                              Object {
                                                "modeId": "stack",
                                                "name": "Stack",
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "content": Array [],
                                  "editor": [Function],
                                  "id": "style-panel",
                                  "mapTo": "layoutConfig",
                                  "name": "Layout",
                                },
                                Object {
                                  "editor": [Function],
                                  "id": "availability-panel",
                                  "mapTo": "availabilityConfig",
                                  "name": "Availability",
                                },
                              ],
                            }
                          }
                          fullLabel="Bar"
                          icon={[Function]}
                          iconType="visBarVerticalStacked"
                          id="bar"
                          key="bar"
                          name="bar"
                          option={
                            Object {
                              "category": "Visualizations",
                              "categoryAxis": "xaxis",
                              "component": [Function],
                              "editorConfig": Object {
                                "panelTabs": Array [
                                  Object {
                                    "editor": [Function],
                                    "id": "data-panel",
                                    "mapTo": "dataConfig",
                                    "name": "Data",
                                    "sections": Array [
                                      Object {
                                        "editor": [Function],
                                        "id": "value_options",
                                        "mapTo": "valueOptions",
                                        "name": "Value options",
                                        "schemas": Array [
                                          Object {
                                            "component": null,
                                            "isSingleSelection": false,
                                            "mapTo": "xaxis",
                                            "name": "X-axis",
                                          },
                                          Object {
                                            "component": null,
                                            "isSingleSelection": false,
                                            "mapTo": "yaxis",
                                            "name": "Y-axis",
                                          },
                                        ],
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "chart_options",
                                        "mapTo": "chartOptions",
                                        "name": "Chart options",
                                        "schemas": Array [
                                          Object {
                                            "component": null,
                                            "isSingleSelection": true,
                                            "mapTo": "orientation",
                                            "name": "Orientation",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "name": "Vertical",
                                                  "orientationId": "v",
                                                },
                                              ],
                                              "dropdownList": Array [
                                                Object {
                                                  "name": "Vertical",
                                                  "orientationId": "v",
                                                },
                                                Object {
                                                  "name": "Horizontal",
                                                  "orientationId": "h",
                                                },
                                              ],
                                            },
                                          },
                                          Object {
                                            "component": null,
                                            "isSingleSelection": true,
                                            "mapTo": "mode",
                                            "name": "Mode",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "modeId": "group",
                                                  "name": "Group",
                                                },
                                              ],
                                              "dropdownList": Array [
                                                Object {
                                                  "modeId": "group",
                                                  "name": "Group",
                                                },
                                                Object {
                                                  "modeId": "stack",
                                                  "name": "Stack",
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                  Object {
                                    "content": Array [],
                                    "editor": [Function],
                                    "id": "style-panel",
                                    "mapTo": "layoutConfig",
                                    "name": "Layout",
                                  },
                                  Object {
                                    "editor": [Function],
                                    "id": "availability-panel",
                                    "mapTo": "availabilityConfig",
                                    "name": "Availability",
                                  },
                                ],
                              },
                              "fullLabel": "Bar",
                              "icon": [Function],
                              "iconType": "visBarVerticalStacked",
                              "id": "bar",
                              "label": "Bar",
                              "name": "bar",
                              "orientation": "v",
                              "selection": Object {
                                "dataLoss": "nothing",
                              },
                              "seriesAxis": "yaxis",
                              "type": "bar",
                              "visConfig": Object {
                                "config": Object {
                                  "displaylogo": false,
                                  "responsive": true,
                                },
                                "isUniColor": false,
                                "layout": Object {
                                  "height": 500,
                                  "legend": Object {
                                    "orientation": "v",
                                    "traceorder": "normal",
                                  },
                                  "margin": Object {
                                    "b": 30,
                                    "l": 60,
                                    "pad": 0,
                                    "r": 30,
                                    "t": 50,
                                  },
                                  "showlegend": true,
                                },
                              },
                            }
                          }
                          orientation="v"
                          selection={
                            Object {
                              "dataLoss": "nothing",
                            }
                          }
                          seriesAxis="yaxis"
                          type="bar"
                          visConfig={
                            Object {
                              "config": Object {
                                "displaylogo": false,
                                "responsive": true,
                              },
                              "isUniColor": false,
                              "layout": Object {
                                "height": 500,
                                "legend": Object {
                                  "orientation": "v",
                                  "traceorder": "normal",
                                },
                                "margin": Object {
                                  "b": 30,
                                  "l": 60,
                                  "pad": 0,
                                  "r": 30,
                                  "t": 50,
                                },
                                "showlegend": true,
                              },
                            }
                          }
                        >
                          <EuiBadge
                            category="Visualizations"
                            categoryAxis="xaxis"
                            className="euiComboBoxPill"
                            color="hollow"
                            component={[Function]}
                            editorConfig={
                              Object {
                                "panelTabs": Array [
                                  Object {
                                    "editor": [Function],
                                    "id": "data-panel",
                                    "mapTo": "dataConfig",
                                    "name": "Data",
                                    "sections": Array [
                                      Object {
                                        "editor": [Function],
                                        "id": "value_options",
                                        "mapTo": "valueOptions",
                                        "name": "Value options",
                                        "schemas": Array [
                                          Object {
                                            "component": null,
                                            "isSingleSelection": false,
                                            "mapTo": "xaxis",
                                            "name": "X-axis",
                                          },
                                          Object {
                                            "component": null,
                                            "isSingleSelection": false,
                                            "mapTo": "yaxis",
                                            "name": "Y-axis",
                                          },
                                        ],
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "chart_options",
                                        "mapTo": "chartOptions",
                                        "name": "Chart options",
                                        "schemas": Array [
                                          Object {
                                            "component": null,
                                            "isSingleSelection": true,
                                            "mapTo": "orientation",
                                            "name": "Orientation",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "name": "Vertical",
                                                  "orientationId": "v",
                                                },
                                              ],
                                              "dropdownList": Array [
                                                Object {
                                                  "name": "Vertical",
                                                  "orientationId": "v",
                                                },
                                                Object {
                                                  "name": "Horizontal",
                                                  "orientationId": "h",
                                                },
                                              ],
                                            },
                                          },
                                          Object {
                                            "component": null,
                                            "isSingleSelection": true,
                                            "mapTo": "mode",
                                            "name": "Mode",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "modeId": "group",
                                                  "name": "Group",
                                                },
                                              ],
                                              "dropdownList": Array [
                                                Object {
                                                  "modeId": "group",
                                                  "name": "Group",
                                                },
                                                Object {
                                                  "modeId": "stack",
                                                  "name": "Stack",
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                  Object {
                                    "content": Array [],
                                    "editor": [Function],
                                    "id": "style-panel",
                                    "mapTo": "layoutConfig",
                                    "name": "Layout",
                                  },
                                  Object {
                                    "editor": [Function],
                                    "id": "availability-panel",
                                    "mapTo": "availabilityConfig",
                                    "name": "Availability",
                                  },
                                ],
                              }
                            }
                            fullLabel="Bar"
                            icon={[Function]}
                            iconType="visBarVerticalStacked"
                            id="bar"
                            name="bar"
                            orientation="v"
                            selection={
                              Object {
                                "dataLoss": "nothing",
                              }
                            }
                            seriesAxis="yaxis"
                            title="Bar"
                            type="bar"
                            visConfig={
                              Object {
                                "config": Object {
                                  "displaylogo": false,
                                  "responsive": true,
                                },
                                "isUniColor": false,
                                "layout": Object {
                                  "height": 500,
                                  "legend": Object {
                                    "orientation": "v",
                                    "traceorder": "normal",
                                  },
                                  "margin": Object {
                                    "b": 30,
                                    "l": 60,
                                    "pad": 0,
                                    "r": 30,
                                    "t": 50,
                                  },
                                  "showlegend": true,
                                },
                              }
                            }
                          >
                            <EuiInnerText>
                              <span
                                category="Visualizations"
                                categoryAxis="xaxis"
                                className="euiBadge euiBadge--hollow euiBadge--iconLeft euiComboBoxPill"
                                component={[Function]}
                                editorConfig={
                                  Object {
                                    "panelTabs": Array [
                                      Object {
                                        "editor": [Function],
                                        "id": "data-panel",
                                        "mapTo": "dataConfig",
                                        "name": "Data",
                                        "sections": Array [
                                          Object {
                                            "editor": [Function],
                                            "id": "value_options",
                                            "mapTo": "valueOptions",
                                            "name": "Value options",
                                            "schemas": Array [
                                              Object {
                                                "component": null,
                                                "isSingleSelection": false,
                                                "mapTo": "xaxis",
                                                "name": "X-axis",
                                              },
                                              Object {
                                                "component": null,
                                                "isSingleSelection": false,
                                                "mapTo": "yaxis",
                                                "name": "Y-axis",
                                              },
                                            ],
                                          },
                                          Object {
                                            "editor": [Function],
                                            "id": "chart_options",
                                            "mapTo": "chartOptions",
                                            "name": "Chart options",
                                            "schemas": Array [
                                              Object {
                                                "component": null,
                                                "isSingleSelection": true,
                                                "mapTo": "orientation",
                                                "name": "Orientation",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "name": "Vertical",
                                                      "orientationId": "v",
                                                    },
                                                  ],
                                                  "dropdownList": Array [
                                                    Object {
                                                      "name": "Vertical",
                                                      "orientationId": "v",
                                                    },
                                                    Object {
                                                      "name": "Horizontal",
                                                      "orientationId": "h",
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "component": null,
                                                "isSingleSelection": true,
                                                "mapTo": "mode",
                                                "name": "Mode",
                                                "props": Object {
                                                  "defaultSelections": Array [
                                                    Object {
                                                      "modeId": "group",
                                                      "name": "Group",
                                                    },
                                                  ],
                                                  "dropdownList": Array [
                                                    Object {
                                                      "modeId": "group",
                                                      "name": "Group",
                                                    },
                                                    Object {
                                                      "modeId": "stack",
                                                      "name": "Stack",
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                      Object {
                                        "content": Array [],
                                        "editor": [Function],
                                        "id": "style-panel",
                                        "mapTo": "layoutConfig",
                                        "name": "Layout",
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "availability-panel",
                                        "mapTo": "availabilityConfig",
                                        "name": "Availability",
                                      },
                                    ],
                                  }
                                }
                                fullLabel="Bar"
                                icon={[Function]}
                                id="bar"
                                name="bar"
                                orientation="v"
                                selection={
                                  Object {
                                    "dataLoss": "nothing",
                                  }
                                }
                                seriesAxis="yaxis"
                                title="Bar"
                                type="bar"
                                visConfig={
                                  Object {
                                    "config": Object {
                                      "displaylogo": false,
                                      "responsive": true,
                                    },
                                    "isUniColor": false,
                                    "layout": Object {
                                      "height": 500,
                                      "legend": Object {
                                        "orientation": "v",
                                        "traceorder": "normal",
                                      },
                                      "margin": Object {
                                        "b": 30,
                                        "l": 60,
                                        "pad": 0,
                                        "r": 30,
                                        "t": 50,
                                      },
                                      "showlegend": true,
                                    },
                                  }
                                }
                              >
                                <span
                                  className="euiBadge__content"
                                >
                                  <span
                                    className="euiBadge__text"
                                  >
                                    Bar
                                  </span>
                                  <EuiIcon
                                    className="euiBadge__icon"
                                    color="inherit"
                                    size="s"
                                    type="visBarVerticalStacked"
                                  >
                                    <EuiIconEmpty
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiBadge__icon"
                                      focusable="false"
                                      role="img"
                                      style={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiBadge__icon"
                                        focusable="false"
                                        height={16}
                                        role="img"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width={16}
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </EuiIconEmpty>
                                  </EuiIcon>
                                </span>
                              </span>
                            </EuiInnerText>
                          </EuiBadge>
                        </EuiComboBoxPill>
                        <AutosizeInput
                          aria-controls=""
                          className="euiComboBox__input"
                          data-test-subj="comboBoxSearchInput"
                          injectStyles={true}
                          inputRef={[Function]}
                          minWidth={1}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          role="textbox"
                          style={
                            Object {
                              "fontSize": 14,
                            }
                          }
                          value=""
                        >
                          <div
                            className="euiComboBox__input"
                            style={
                              Object {
                                "display": "inline-block",
                                "fontSize": 14,
                              }
                            }
                          >
                            <input
                              aria-controls=""
                              data-test-subj="comboBoxSearchInput"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              role="textbox"
                              style={
                                Object {
                                  "boxSizing": "content-box",
                                  "width": "2px",
                                }
                              }
                              value=""
                            />
                            <div
                              style={
                                Object {
                                  "height": 0,
                                  "left": 0,
                                  "overflow": "scroll",
                                  "position": "absolute",
                                  "top": 0,
                                  "visibility": "hidden",
                                  "whiteSpace": "pre",
                                }
                              }
                            />
                          </div>
                        </AutosizeInput>
                      </div>
                      <EuiFormControlLayoutIcons
                        clear={
                          Object {
                            "data-test-subj": "comboBoxClearButton",
                            "onClick": [Function],
                          }
                        }
                        compressed={false}
                        icon={
                          Object {
                            "aria-label": "Open list of options",
                            "data-test-subj": "comboBoxToggleListButton",
                            "disabled": undefined,
                            "onClick": [Function],
                            "ref": [Function],
                            "side": "right",
                            "type": "arrowDown",
                          }
                        }
                      >
                        <div
                          className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                        >
                          <EuiFormControlLayoutClearButton
                            data-test-subj="comboBoxClearButton"
                            onClick={[Function]}
                            size="m"
                          >
                            <EuiI18n
                              default="Clear input"
                              token="euiFormControlLayoutClearButton.label"
                            >
                              <button
                                aria-label="Clear input"
                                className="euiFormControlLayoutClearButton"
                                data-test-subj="comboBoxClearButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  className="euiFormControlLayoutClearButton__icon"
                                  type="cross"
                                >
                                  <EuiIconEmpty
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutClearButton__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutClearButton__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    />
                                  </EuiIconEmpty>
                                </EuiIcon>
                              </button>
                            </EuiI18n>
                          </EuiFormControlLayoutClearButton>
                          <EuiFormControlLayoutCustomIcon
                            aria-label="Open list of options"
                            data-test-subj="comboBoxToggleListButton"
                            iconRef={[Function]}
                            onClick={[Function]}
                            size="m"
                            type="arrowDown"
                          >
                            <button
                              aria-label="Open list of options"
                              className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                              data-test-subj="comboBoxToggleListButton"
                              onClick={[Function]}
                              type="button"
                            >
                              <EuiIcon
                                aria-hidden="true"
                                className="euiFormControlLayoutCustomIcon__icon"
                                size="m"
                                type="arrowDown"
                              >
                                <EuiIconEmpty
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                  focusable="false"
                                  role="img"
                                  style={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                    focusable="false"
                                    height={16}
                                    role="img"
                                    style={null}
                                    viewBox="0 0 16 16"
                                    width={16}
                                    xmlns="http://www.w3.org/2000/svg"
                                  />
                                </EuiIconEmpty>
                              </EuiIcon>
                            </button>
                          </EuiFormControlLayoutCustomIcon>
                        </div>
                      </EuiFormControlLayoutIcons>
                    </div>
                  </div>
                </EuiFormControlLayout>
              </EuiComboBoxInput>
            </div>
          </EuiComboBox>
          <EuiSpacer
            size="xs"
          >
            <div
              className="euiSpacer euiSpacer--xs"
            />
          </EuiSpacer>
        </div>
      </EuiFlexItem>
      <EuiFlexItem>
        <div
          className="euiFlexItem"
        >
          <EuiPanel
            paddingSize="s"
          >
            <div
              className="euiPanel euiPanel--paddingSmall euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
            >
              <EuiTabbedContent
                autoFocus="initial"
                className="vis-config-tabs"
                onTabClick={[Function]}
                selectedTab={
                  Object {
                    "content": <VizDataPanel
                      curVisId="bar"
                      onConfigChange={[Function]}
                      tabProps={
                        Object {
                          "editor": [Function],
                          "id": "data-panel",
                          "mapTo": "dataConfig",
                          "name": "Data",
                          "sections": Array [
                            Object {
                              "editor": [Function],
                              "id": "value_options",
                              "mapTo": "valueOptions",
                              "name": "Value options",
                              "schemas": Array [
                                Object {
                                  "component": null,
                                  "isSingleSelection": false,
                                  "mapTo": "xaxis",
                                  "name": "X-axis",
                                },
                                Object {
                                  "component": null,
                                  "isSingleSelection": false,
                                  "mapTo": "yaxis",
                                  "name": "Y-axis",
                                },
                              ],
                            },
                            Object {
                              "editor": [Function],
                              "id": "chart_options",
                              "mapTo": "chartOptions",
                              "name": "Chart options",
                              "schemas": Array [
                                Object {
                                  "component": null,
                                  "isSingleSelection": true,
                                  "mapTo": "orientation",
                                  "name": "Orientation",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "name": "Vertical",
                                        "orientationId": "v",
                                      },
                                    ],
                                    "dropdownList": Array [
                                      Object {
                                        "name": "Vertical",
                                        "orientationId": "v",
                                      },
                                      Object {
                                        "name": "Horizontal",
                                        "orientationId": "h",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": null,
                                  "isSingleSelection": true,
                                  "mapTo": "mode",
                                  "name": "Mode",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "modeId": "group",
                                        "name": "Group",
                                      },
                                    ],
                                    "dropdownList": Array [
                                      Object {
                                        "modeId": "group",
                                        "name": "Group",
                                      },
                                      Object {
                                        "modeId": "stack",
                                        "name": "Stack",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          ],
                        }
                      }
                      visualizations={
                        Object {
                          "data": Object {
                            "appData": Object {
                              "fromApp": false,
                            },
                            "defaultAxes": Object {},
                            "indexFields": Object {
                              "availableFields": Array [
                                Object {
                                  "name": "agent",
                                  "type": "string",
                                },
                                Object {
                                  "name": "bytes",
                                  "type": "long",
                                },
                                Object {
                                  "name": "clientip",
                                  "type": "ip",
                                },
                                Object {
                                  "name": "event",
                                  "type": "struct",
                                },
                                Object {
                                  "name": "extension",
                                  "type": "string",
                                },
                                Object {
                                  "name": "geo",
                                  "type": "struct",
                                },
                                Object {
                                  "name": "host",
                                  "type": "string",
                                },
                                Object {
                                  "name": "index",
                                  "type": "string",
                                },
                                Object {
                                  "name": "ip",
                                  "type": "ip",
                                },
                                Object {
                                  "name": "machine",
                                  "type": "struct",
                                },
                                Object {
                                  "name": "memory",
                                  "type": "double",
                                },
                                Object {
                                  "name": "message",
                                  "type": "string",
                                },
                                Object {
                                  "name": "phpmemory",
                                  "type": "long",
                                },
                                Object {
                                  "name": "referer",
                                  "type": "string",
                                },
                                Object {
                                  "name": "request",
                                  "type": "string",
                                },
                                Object {
                                  "name": "response",
                                  "type": "string",
                                },
                                Object {
                                  "name": "tags",
                                  "type": "string",
                                },
                                Object {
                                  "name": "timestamp",
                                  "type": "timestamp",
                                },
                                Object {
                                  "name": "url",
                                  "type": "string",
                                },
                                Object {
                                  "name": "utc_time",
                                  "type": "timestamp",
                                },
                              ],
                              "queriedFields": Array [
                                Object {
                                  "name": "double_per_ip_bytes",
                                  "type": "long",
                                },
                                Object {
                                  "name": "host",
                                  "type": "text",
                                },
                                Object {
                                  "name": "ip_count",
                                  "type": "integer",
                                },
                                Object {
                                  "name": "per_ip_bytes",
                                  "type": "long",
                                },
                                Object {
                                  "name": "resp_code",
                                  "type": "text",
                                },
                                Object {
                                  "name": "sum_bytes",
                                  "type": "long",
                                },
                              ],
                              "selectedFields": Array [],
                              "unselectedFields": Array [],
                            },
                            "query": Object {},
                            "rawVizData": Object {
                              "data": Object {
                                "count()": Array [
                                  154,
                                  1753,
                                  116,
                                  468,
                                  1964,
                                  219,
                                ],
                                "tags": Array [
                                  "error",
                                  "info",
                                  "login",
                                  "security",
                                  "success",
                                  "warning",
                                ],
                              },
                              "jsonData": Array [
                                Object {
                                  "count()": 154,
                                  "tags": "error",
                                },
                                Object {
                                  "count()": 1753,
                                  "tags": "info",
                                },
                                Object {
                                  "count()": 116,
                                  "tags": "login",
                                },
                                Object {
                                  "count()": 468,
                                  "tags": "security",
                                },
                                Object {
                                  "count()": 1964,
                                  "tags": "success",
                                },
                                Object {
                                  "count()": 219,
                                  "tags": "warning",
                                },
                              ],
                              "metadata": Object {
                                "fields": Array [
                                  Object {
                                    "name": "count()",
                                    "type": "integer",
                                  },
                                  Object {
                                    "name": "tags",
                                    "type": "text",
                                  },
                                ],
                                "size": 6,
                                "status": 200,
                              },
                            },
                            "userConfigs": Object {},
                          },
                          "vis": Object {
                            "category": "Visualizations",
                            "categoryAxis": "xaxis",
                            "component": [Function],
                            "editorConfig": Object {
                              "panelTabs": Array [
                                Object {
                                  "editor": [Function],
                                  "id": "data-panel",
                                  "mapTo": "dataConfig",
                                  "name": "Data",
                                  "sections": Array [
                                    Object {
                                      "editor": [Function],
                                      "id": "value_options",
                                      "mapTo": "valueOptions",
                                      "name": "Value options",
                                      "schemas": Array [
                                        Object {
                                          "component": null,
                                          "isSingleSelection": false,
                                          "mapTo": "xaxis",
                                          "name": "X-axis",
                                        },
                                        Object {
                                          "component": null,
                                          "isSingleSelection": false,
                                          "mapTo": "yaxis",
                                          "name": "Y-axis",
                                        },
                                      ],
                                    },
                                    Object {
                                      "editor": [Function],
                                      "id": "chart_options",
                                      "mapTo": "chartOptions",
                                      "name": "Chart options",
                                      "schemas": Array [
                                        Object {
                                          "component": null,
                                          "isSingleSelection": true,
                                          "mapTo": "orientation",
                                          "name": "Orientation",
                                          "props": Object {
                                            "defaultSelections": Array [
                                              Object {
                                                "name": "Vertical",
                                                "orientationId": "v",
                                              },
                                            ],
                                            "dropdownList": Array [
                                              Object {
                                                "name": "Vertical",
                                                "orientationId": "v",
                                              },
                                              Object {
                                                "name": "Horizontal",
                                                "orientationId": "h",
                                              },
                                            ],
                                          },
                                        },
                                        Object {
                                          "component": null,
                                          "isSingleSelection": true,
                                          "mapTo": "mode",
                                          "name": "Mode",
                                          "props": Object {
                                            "defaultSelections": Array [
                                              Object {
                                                "modeId": "group",
                                                "name": "Group",
                                              },
                                            ],
                                            "dropdownList": Array [
                                              Object {
                                                "modeId": "group",
                                                "name": "Group",
                                              },
                                              Object {
                                                "modeId": "stack",
                                                "name": "Stack",
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "content": Array [],
                                  "editor": [Function],
                                  "id": "style-panel",
                                  "mapTo": "layoutConfig",
                                  "name": "Layout",
                                },
                                Object {
                                  "editor": [Function],
                                  "id": "availability-panel",
                                  "mapTo": "availabilityConfig",
                                  "name": "Availability",
                                },
                              ],
                            },
                            "fullLabel": "Bar",
                            "icon": [Function],
                            "iconType": "visBarVerticalStacked",
                            "id": "bar",
                            "label": "Bar",
                            "name": "bar",
                            "orientation": "v",
                            "selection": Object {
                              "dataLoss": "nothing",
                            },
                            "seriesAxis": "yaxis",
                            "type": "bar",
                            "visConfig": Object {
                              "config": Object {
                                "displaylogo": false,
                                "responsive": true,
                              },
                              "isUniColor": false,
                              "layout": Object {
                                "height": 500,
                                "legend": Object {
                                  "orientation": "v",
                                  "traceorder": "normal",
                                },
                                "margin": Object {
                                  "b": 30,
                                  "l": 60,
                                  "pad": 0,
                                  "r": 30,
                                  "t": 50,
                                },
                                "showlegend": true,
                              },
                            },
                          },
                        }
                      }
                    />,
                    "id": "data-panel",
                    "name": "Data",
                  }
                }
                tabs={
                  Array [
                    Object {
                      "content": <VizDataPanel
                        curVisId="bar"
                        onConfigChange={[Function]}
                        tabProps={
                          Object {
                            "editor": [Function],
                            "id": "data-panel",
                            "mapTo": "dataConfig",
                            "name": "Data",
                            "sections": Array [
                              Object {
                                "editor": [Function],
                                "id": "value_options",
                                "mapTo": "valueOptions",
                                "name": "Value options",
                                "schemas": Array [
                                  Object {
                                    "component": null,
                                    "isSingleSelection": false,
                                    "mapTo": "xaxis",
                                    "name": "X-axis",
                                  },
                                  Object {
                                    "component": null,
                                    "isSingleSelection": false,
                                    "mapTo": "yaxis",
                                    "name": "Y-axis",
                                  },
                                ],
                              },
                              Object {
                                "editor": [Function],
                                "id": "chart_options",
                                "mapTo": "chartOptions",
                                "name": "Chart options",
                                "schemas": Array [
                                  Object {
                                    "component": null,
                                    "isSingleSelection": true,
                                    "mapTo": "orientation",
                                    "name": "Orientation",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "name": "Vertical",
                                          "orientationId": "v",
                                        },
                                      ],
                                      "dropdownList": Array [
                                        Object {
                                          "name": "Vertical",
                                          "orientationId": "v",
                                        },
                                        Object {
                                          "name": "Horizontal",
                                          "orientationId": "h",
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "component": null,
                                    "isSingleSelection": true,
                                    "mapTo": "mode",
                                    "name": "Mode",
                                    "props": Object {
                                      "defaultSelections": Array [
                                        Object {
                                          "modeId": "group",
                                          "name": "Group",
                                        },
                                      ],
                                      "dropdownList": Array [
                                        Object {
                                          "modeId": "group",
                                          "name": "Group",
                                        },
                                        Object {
                                          "modeId": "stack",
                                          "name": "Stack",
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            ],
                          }
                        }
                        visualizations={
                          Object {
                            "data": Object {
                              "appData": Object {
                                "fromApp": false,
                              },
                              "defaultAxes": Object {},
                              "indexFields": Object {
                                "availableFields": Array [
                                  Object {
                                    "name": "agent",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "bytes",
                                    "type": "long",
                                  },
                                  Object {
                                    "name": "clientip",
                                    "type": "ip",
                                  },
                                  Object {
                                    "name": "event",
                                    "type": "struct",
                                  },
                                  Object {
                                    "name": "extension",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "geo",
                                    "type": "struct",
                                  },
                                  Object {
                                    "name": "host",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "index",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "ip",
                                    "type": "ip",
                                  },
                                  Object {
                                    "name": "machine",
                                    "type": "struct",
                                  },
                                  Object {
                                    "name": "memory",
                                    "type": "double",
                                  },
                                  Object {
                                    "name": "message",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "phpmemory",
                                    "type": "long",
                                  },
                                  Object {
                                    "name": "referer",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "request",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "response",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "tags",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "timestamp",
                                    "type": "timestamp",
                                  },
                                  Object {
                                    "name": "url",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "utc_time",
                                    "type": "timestamp",
                                  },
                                ],
                                "queriedFields": Array [
                                  Object {
                                    "name": "double_per_ip_bytes",
                                    "type": "long",
                                  },
                                  Object {
                                    "name": "host",
                                    "type": "text",
                                  },
                                  Object {
                                    "name": "ip_count",
                                    "type": "integer",
                                  },
                                  Object {
                                    "name": "per_ip_bytes",
                                    "type": "long",
                                  },
                                  Object {
                                    "name": "resp_code",
                                    "type": "text",
                                  },
                                  Object {
                                    "name": "sum_bytes",
                                    "type": "long",
                                  },
                                ],
                                "selectedFields": Array [],
                                "unselectedFields": Array [],
                              },
                              "query": Object {},
                              "rawVizData": Object {
                                "data": Object {
                                  "count()": Array [
                                    154,
                                    1753,
                                    116,
                                    468,
                                    1964,
                                    219,
                                  ],
                                  "tags": Array [
                                    "error",
                                    "info",
                                    "login",
                                    "security",
                                    "success",
                                    "warning",
                                  ],
                                },
                                "jsonData": Array [
                                  Object {
                                    "count()": 154,
                                    "tags": "error",
                                  },
                                  Object {
                                    "count()": 1753,
                                    "tags": "info",
                                  },
                                  Object {
                                    "count()": 116,
                                    "tags": "login",
                                  },
                                  Object {
                                    "count()": 468,
                                    "tags": "security",
                                  },
                                  Object {
                                    "count()": 1964,
                                    "tags": "success",
                                  },
                                  Object {
                                    "count()": 219,
                                    "tags": "warning",
                                  },
                                ],
                                "metadata": Object {
                                  "fields": Array [
                                    Object {
                                      "name": "count()",
                                      "type": "integer",
                                    },
                                    Object {
                                      "name": "tags",
                                      "type": "text",
                                    },
                                  ],
                                  "size": 6,
                                  "status": 200,
                                },
                              },
                              "userConfigs": Object {},
                            },
                            "vis": Object {
                              "category": "Visualizations",
                              "categoryAxis": "xaxis",
                              "component": [Function],
                              "editorConfig": Object {
                                "panelTabs": Array [
                                  Object {
                                    "editor": [Function],
                                    "id": "data-panel",
                                    "mapTo": "dataConfig",
                                    "name": "Data",
                                    "sections": Array [
                                      Object {
                                        "editor": [Function],
                                        "id": "value_options",
                                        "mapTo": "valueOptions",
                                        "name": "Value options",
                                        "schemas": Array [
                                          Object {
                                            "component": null,
                                            "isSingleSelection": false,
                                            "mapTo": "xaxis",
                                            "name": "X-axis",
                                          },
                                          Object {
                                            "component": null,
                                            "isSingleSelection": false,
                                            "mapTo": "yaxis",
                                            "name": "Y-axis",
                                          },
                                        ],
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "chart_options",
                                        "mapTo": "chartOptions",
                                        "name": "Chart options",
                                        "schemas": Array [
                                          Object {
                                            "component": null,
                                            "isSingleSelection": true,
                                            "mapTo": "orientation",
                                            "name": "Orientation",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "name": "Vertical",
                                                  "orientationId": "v",
                                                },
                                              ],
                                              "dropdownList": Array [
                                                Object {
                                                  "name": "Vertical",
                                                  "orientationId": "v",
                                                },
                                                Object {
                                                  "name": "Horizontal",
                                                  "orientationId": "h",
                                                },
                                              ],
                                            },
                                          },
                                          Object {
                                            "component": null,
                                            "isSingleSelection": true,
                                            "mapTo": "mode",
                                            "name": "Mode",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "modeId": "group",
                                                  "name": "Group",
                                                },
                                              ],
                                              "dropdownList": Array [
                                                Object {
                                                  "modeId": "group",
                                                  "name": "Group",
                                                },
                                                Object {
                                                  "modeId": "stack",
                                                  "name": "Stack",
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                  Object {
                                    "content": Array [],
                                    "editor": [Function],
                                    "id": "style-panel",
                                    "mapTo": "layoutConfig",
                                    "name": "Layout",
                                  },
                                  Object {
                                    "editor": [Function],
                                    "id": "availability-panel",
                                    "mapTo": "availabilityConfig",
                                    "name": "Availability",
                                  },
                                ],
                              },
                              "fullLabel": "Bar",
                              "icon": [Function],
                              "iconType": "visBarVerticalStacked",
                              "id": "bar",
                              "label": "Bar",
                              "name": "bar",
                              "orientation": "v",
                              "selection": Object {
                                "dataLoss": "nothing",
                              },
                              "seriesAxis": "yaxis",
                              "type": "bar",
                              "visConfig": Object {
                                "config": Object {
                                  "displaylogo": false,
                                  "responsive": true,
                                },
                                "isUniColor": false,
                                "layout": Object {
                                  "height": 500,
                                  "legend": Object {
                                    "orientation": "v",
                                    "traceorder": "normal",
                                  },
                                  "margin": Object {
                                    "b": 30,
                                    "l": 60,
                                    "pad": 0,
                                    "r": 30,
                                    "t": 50,
                                  },
                                  "showlegend": true,
                                },
                              },
                            },
                          }
                        }
                      />,
                      "id": "data-panel",
                      "name": "Data",
                    },
                    Object {
                      "content": <ConfigEditor
                        onConfigEditorChange={[Function]}
                        setToast={[MockFunction]}
                        spec="MOCK HJSON STRING"
                        tabProps={
                          Object {
                            "content": Array [],
                            "editor": [Function],
                            "id": "style-panel",
                            "mapTo": "layoutConfig",
                            "name": "Layout",
                          }
                        }
                      />,
                      "id": "style-panel",
                      "name": "Layout",
                    },
                    Object {
                      "content": <ConfigAvailability
                        curVisId="bar"
                        onConfigChange={[Function]}
                        tabProps={
                          Object {
                            "editor": [Function],
                            "id": "availability-panel",
                            "mapTo": "availabilityConfig",
                            "name": "Availability",
                          }
                        }
                        visualizations={
                          Object {
                            "data": Object {
                              "appData": Object {
                                "fromApp": false,
                              },
                              "defaultAxes": Object {},
                              "indexFields": Object {
                                "availableFields": Array [
                                  Object {
                                    "name": "agent",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "bytes",
                                    "type": "long",
                                  },
                                  Object {
                                    "name": "clientip",
                                    "type": "ip",
                                  },
                                  Object {
                                    "name": "event",
                                    "type": "struct",
                                  },
                                  Object {
                                    "name": "extension",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "geo",
                                    "type": "struct",
                                  },
                                  Object {
                                    "name": "host",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "index",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "ip",
                                    "type": "ip",
                                  },
                                  Object {
                                    "name": "machine",
                                    "type": "struct",
                                  },
                                  Object {
                                    "name": "memory",
                                    "type": "double",
                                  },
                                  Object {
                                    "name": "message",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "phpmemory",
                                    "type": "long",
                                  },
                                  Object {
                                    "name": "referer",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "request",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "response",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "tags",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "timestamp",
                                    "type": "timestamp",
                                  },
                                  Object {
                                    "name": "url",
                                    "type": "string",
                                  },
                                  Object {
                                    "name": "utc_time",
                                    "type": "timestamp",
                                  },
                                ],
                                "queriedFields": Array [
                                  Object {
                                    "name": "double_per_ip_bytes",
                                    "type": "long",
                                  },
                                  Object {
                                    "name": "host",
                                    "type": "text",
                                  },
                                  Object {
                                    "name": "ip_count",
                                    "type": "integer",
                                  },
                                  Object {
                                    "name": "per_ip_bytes",
                                    "type": "long",
                                  },
                                  Object {
                                    "name": "resp_code",
                                    "type": "text",
                                  },
                                  Object {
                                    "name": "sum_bytes",
                                    "type": "long",
                                  },
                                ],
                                "selectedFields": Array [],
                                "unselectedFields": Array [],
                              },
                              "query": Object {},
                              "rawVizData": Object {
                                "data": Object {
                                  "count()": Array [
                                    154,
                                    1753,
                                    116,
                                    468,
                                    1964,
                                    219,
                                  ],
                                  "tags": Array [
                                    "error",
                                    "info",
                                    "login",
                                    "security",
                                    "success",
                                    "warning",
                                  ],
                                },
                                "jsonData": Array [
                                  Object {
                                    "count()": 154,
                                    "tags": "error",
                                  },
                                  Object {
                                    "count()": 1753,
                                    "tags": "info",
                                  },
                                  Object {
                                    "count()": 116,
                                    "tags": "login",
                                  },
                                  Object {
                                    "count()": 468,
                                    "tags": "security",
                                  },
                                  Object {
                                    "count()": 1964,
                                    "tags": "success",
                                  },
                                  Object {
                                    "count()": 219,
                                    "tags": "warning",
                                  },
                                ],
                                "metadata": Object {
                                  "fields": Array [
                                    Object {
                                      "name": "count()",
                                      "type": "integer",
                                    },
                                    Object {
                                      "name": "tags",
                                      "type": "text",
                                    },
                                  ],
                                  "size": 6,
                                  "status": 200,
                                },
                              },
                              "userConfigs": Object {},
                            },
                            "vis": Object {
                              "category": "Visualizations",
                              "categoryAxis": "xaxis",
                              "component": [Function],
                              "editorConfig": Object {
                                "panelTabs": Array [
                                  Object {
                                    "editor": [Function],
                                    "id": "data-panel",
                                    "mapTo": "dataConfig",
                                    "name": "Data",
                                    "sections": Array [
                                      Object {
                                        "editor": [Function],
                                        "id": "value_options",
                                        "mapTo": "valueOptions",
                                        "name": "Value options",
                                        "schemas": Array [
                                          Object {
                                            "component": null,
                                            "isSingleSelection": false,
                                            "mapTo": "xaxis",
                                            "name": "X-axis",
                                          },
                                          Object {
                                            "component": null,
                                            "isSingleSelection": false,
                                            "mapTo": "yaxis",
                                            "name": "Y-axis",
                                          },
                                        ],
                                      },
                                      Object {
                                        "editor": [Function],
                                        "id": "chart_options",
                                        "mapTo": "chartOptions",
                                        "name": "Chart options",
                                        "schemas": Array [
                                          Object {
                                            "component": null,
                                            "isSingleSelection": true,
                                            "mapTo": "orientation",
                                            "name": "Orientation",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "name": "Vertical",
                                                  "orientationId": "v",
                                                },
                                              ],
                                              "dropdownList": Array [
                                                Object {
                                                  "name": "Vertical",
                                                  "orientationId": "v",
                                                },
                                                Object {
                                                  "name": "Horizontal",
                                                  "orientationId": "h",
                                                },
                                              ],
                                            },
                                          },
                                          Object {
                                            "component": null,
                                            "isSingleSelection": true,
                                            "mapTo": "mode",
                                            "name": "Mode",
                                            "props": Object {
                                              "defaultSelections": Array [
                                                Object {
                                                  "modeId": "group",
                                                  "name": "Group",
                                                },
                                              ],
                                              "dropdownList": Array [
                                                Object {
                                                  "modeId": "group",
                                                  "name": "Group",
                                                },
                                                Object {
                                                  "modeId": "stack",
                                                  "name": "Stack",
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                  Object {
                                    "content": Array [],
                                    "editor": [Function],
                                    "id": "style-panel",
                                    "mapTo": "layoutConfig",
                                    "name": "Layout",
                                  },
                                  Object {
                                    "editor": [Function],
                                    "id": "availability-panel",
                                    "mapTo": "availabilityConfig",
                                    "name": "Availability",
                                  },
                                ],
                              },
                              "fullLabel": "Bar",
                              "icon": [Function],
                              "iconType": "visBarVerticalStacked",
                              "id": "bar",
                              "label": "Bar",
                              "name": "bar",
                              "orientation": "v",
                              "selection": Object {
                                "dataLoss": "nothing",
                              },
                              "seriesAxis": "yaxis",
                              "type": "bar",
                              "visConfig": Object {
                                "config": Object {
                                  "displaylogo": false,
                                  "responsive": true,
                                },
                                "isUniColor": false,
                                "layout": Object {
                                  "height": 500,
                                  "legend": Object {
                                    "orientation": "v",
                                    "traceorder": "normal",
                                  },
                                  "margin": Object {
                                    "b": 30,
                                    "l": 60,
                                    "pad": 0,
                                    "r": 30,
                                    "t": 50,
                                  },
                                  "showlegend": true,
                                },
                              },
                            },
                          }
                        }
                      />,
                      "id": "availability-panel",
                      "name": "Availability",
                    },
                  ]
                }
              >
                <div
                  className="vis-config-tabs"
                >
                  <EuiTabs
                    onFocus={[Function]}
                  >
                    <div
                      className="euiTabs"
                      onFocus={[Function]}
                      role="tablist"
                    >
                      <EuiTab
                        aria-controls="random_html_id"
                        id="data-panel"
                        isSelected={true}
                        key="data-panel"
                        onClick={[Function]}
                      >
                        <button
                          aria-controls="random_html_id"
                          aria-selected={true}
                          className="euiTab euiTab-isSelected"
                          disabled={false}
                          id="data-panel"
                          onClick={[Function]}
                          role="tab"
                          type="button"
                        >
                          <span
                            className="euiTab__content"
                          >
                            Data
                          </span>
                        </button>
                      </EuiTab>
                      <EuiTab
                        aria-controls="random_html_id"
                        id="style-panel"
                        isSelected={false}
                        key="style-panel"
                        onClick={[Function]}
                      >
                        <button
                          aria-controls="random_html_id"
                          aria-selected={false}
                          className="euiTab"
                          disabled={false}
                          id="style-panel"
                          onClick={[Function]}
                          role="tab"
                          type="button"
                        >
                          <span
                            className="euiTab__content"
                          >
                            Layout
                          </span>
                        </button>
                      </EuiTab>
                      <EuiTab
                        aria-controls="random_html_id"
                        id="availability-panel"
                        isSelected={false}
                        key="availability-panel"
                        onClick={[Function]}
                      >
                        <button
                          aria-controls="random_html_id"
                          aria-selected={false}
                          className="euiTab"
                          disabled={false}
                          id="availability-panel"
                          onClick={[Function]}
                          role="tab"
                          type="button"
                        >
                          <span
                            className="euiTab__content"
                          >
                            Availability
                          </span>
                        </button>
                      </EuiTab>
                    </div>
                  </EuiTabs>
                  <div
                    aria-labelledby="data-panel"
                    id="random_html_id"
                    role="tabpanel"
                  >
                    <VizDataPanel
                      curVisId="bar"
                      onConfigChange={[Function]}
                      tabProps={
                        Object {
                          "editor": [Function],
                          "id": "data-panel",
                          "mapTo": "dataConfig",
                          "name": "Data",
                          "sections": Array [
                            Object {
                              "editor": [Function],
                              "id": "value_options",
                              "mapTo": "valueOptions",
                              "name": "Value options",
                              "schemas": Array [
                                Object {
                                  "component": null,
                                  "isSingleSelection": false,
                                  "mapTo": "xaxis",
                                  "name": "X-axis",
                                },
                                Object {
                                  "component": null,
                                  "isSingleSelection": false,
                                  "mapTo": "yaxis",
                                  "name": "Y-axis",
                                },
                              ],
                            },
                            Object {
                              "editor": [Function],
                              "id": "chart_options",
                              "mapTo": "chartOptions",
                              "name": "Chart options",
                              "schemas": Array [
                                Object {
                                  "component": null,
                                  "isSingleSelection": true,
                                  "mapTo": "orientation",
                                  "name": "Orientation",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "name": "Vertical",
                                        "orientationId": "v",
                                      },
                                    ],
                                    "dropdownList": Array [
                                      Object {
                                        "name": "Vertical",
                                        "orientationId": "v",
                                      },
                                      Object {
                                        "name": "Horizontal",
                                        "orientationId": "h",
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "component": null,
                                  "isSingleSelection": true,
                                  "mapTo": "mode",
                                  "name": "Mode",
                                  "props": Object {
                                    "defaultSelections": Array [
                                      Object {
                                        "modeId": "group",
                                        "name": "Group",
                                      },
                                    ],
                                    "dropdownList": Array [
                                      Object {
                                        "modeId": "group",
                                        "name": "Group",
                                      },
                                      Object {
                                        "modeId": "stack",
                                        "name": "Stack",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          ],
                        }
                      }
                      visualizations={
                        Object {
                          "data": Object {
                            "appData": Object {
                              "fromApp": false,
                            },
                            "defaultAxes": Object {},
                            "indexFields": Object {
                              "availableFields": Array [
                                Object {
                                  "name": "agent",
                                  "type": "string",
                                },
                                Object {
                                  "name": "bytes",
                                  "type": "long",
                                },
                                Object {
                                  "name": "clientip",
                                  "type": "ip",
                                },
                                Object {
                                  "name": "event",
                                  "type": "struct",
                                },
                                Object {
                                  "name": "extension",
                                  "type": "string",
                                },
                                Object {
                                  "name": "geo",
                                  "type": "struct",
                                },
                                Object {
                                  "name": "host",
                                  "type": "string",
                                },
                                Object {
                                  "name": "index",
                                  "type": "string",
                                },
                                Object {
                                  "name": "ip",
                                  "type": "ip",
                                },
                                Object {
                                  "name": "machine",
                                  "type": "struct",
                                },
                                Object {
                                  "name": "memory",
                                  "type": "double",
                                },
                                Object {
                                  "name": "message",
                                  "type": "string",
                                },
                                Object {
                                  "name": "phpmemory",
                                  "type": "long",
                                },
                                Object {
                                  "name": "referer",
                                  "type": "string",
                                },
                                Object {
                                  "name": "request",
                                  "type": "string",
                                },
                                Object {
                                  "name": "response",
                                  "type": "string",
                                },
                                Object {
                                  "name": "tags",
                                  "type": "string",
                                },
                                Object {
                                  "name": "timestamp",
                                  "type": "timestamp",
                                },
                                Object {
                                  "name": "url",
                                  "type": "string",
                                },
                                Object {
                                  "name": "utc_time",
                                  "type": "timestamp",
                                },
                              ],
                              "queriedFields": Array [
                                Object {
                                  "name": "double_per_ip_bytes",
                                  "type": "long",
                                },
                                Object {
                                  "name": "host",
                                  "type": "text",
                                },
                                Object {
                                  "name": "ip_count",
                                  "type": "integer",
                                },
                                Object {
                                  "name": "per_ip_bytes",
                                  "type": "long",
                                },
                                Object {
                                  "name": "resp_code",
                                  "type": "text",
                                },
                                Object {
                                  "name": "sum_bytes",
                                  "type": "long",
                                },
                              ],
                              "selectedFields": Array [],
                              "unselectedFields": Array [],
                            },
                            "query": Object {},
                            "rawVizData": Object {
                              "data": Object {
                                "count()": Array [
                                  154,
                                  1753,
                                  116,
                                  468,
                                  1964,
                                  219,
                                ],
                                "tags": Array [
                                  "error",
                                  "info",
                                  "login",
                                  "security",
                                  "success",
                                  "warning",
                                ],
                              },
                              "jsonData": Array [
                                Object {
                                  "count()": 154,
                                  "tags": "error",
                                },
                                Object {
                                  "count()": 1753,
                                  "tags": "info",
                                },
                                Object {
                                  "count()": 116,
                                  "tags": "login",
                                },
                                Object {
                                  "count()": 468,
                                  "tags": "security",
                                },
                                Object {
                                  "count()": 1964,
                                  "tags": "success",
                                },
                                Object {
                                  "count()": 219,
                                  "tags": "warning",
                                },
                              ],
                              "metadata": Object {
                                "fields": Array [
                                  Object {
                                    "name": "count()",
                                    "type": "integer",
                                  },
                                  Object {
                                    "name": "tags",
                                    "type": "text",
                                  },
                                ],
                                "size": 6,
                                "status": 200,
                              },
                            },
                            "userConfigs": Object {},
                          },
                          "vis": Object {
                            "category": "Visualizations",
                            "categoryAxis": "xaxis",
                            "component": [Function],
                            "editorConfig": Object {
                              "panelTabs": Array [
                                Object {
                                  "editor": [Function],
                                  "id": "data-panel",
                                  "mapTo": "dataConfig",
                                  "name": "Data",
                                  "sections": Array [
                                    Object {
                                      "editor": [Function],
                                      "id": "value_options",
                                      "mapTo": "valueOptions",
                                      "name": "Value options",
                                      "schemas": Array [
                                        Object {
                                          "component": null,
                                          "isSingleSelection": false,
                                          "mapTo": "xaxis",
                                          "name": "X-axis",
                                        },
                                        Object {
                                          "component": null,
                                          "isSingleSelection": false,
                                          "mapTo": "yaxis",
                                          "name": "Y-axis",
                                        },
                                      ],
                                    },
                                    Object {
                                      "editor": [Function],
                                      "id": "chart_options",
                                      "mapTo": "chartOptions",
                                      "name": "Chart options",
                                      "schemas": Array [
                                        Object {
                                          "component": null,
                                          "isSingleSelection": true,
                                          "mapTo": "orientation",
                                          "name": "Orientation",
                                          "props": Object {
                                            "defaultSelections": Array [
                                              Object {
                                                "name": "Vertical",
                                                "orientationId": "v",
                                              },
                                            ],
                                            "dropdownList": Array [
                                              Object {
                                                "name": "Vertical",
                                                "orientationId": "v",
                                              },
                                              Object {
                                                "name": "Horizontal",
                                                "orientationId": "h",
                                              },
                                            ],
                                          },
                                        },
                                        Object {
                                          "component": null,
                                          "isSingleSelection": true,
                                          "mapTo": "mode",
                                          "name": "Mode",
                                          "props": Object {
                                            "defaultSelections": Array [
                                              Object {
                                                "modeId": "group",
                                                "name": "Group",
                                              },
                                            ],
                                            "dropdownList": Array [
                                              Object {
                                                "modeId": "group",
                                                "name": "Group",
                                              },
                                              Object {
                                                "modeId": "stack",
                                                "name": "Stack",
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "content": Array [],
                                  "editor": [Function],
                                  "id": "style-panel",
                                  "mapTo": "layoutConfig",
                                  "name": "Layout",
                                },
                                Object {
                                  "editor": [Function],
                                  "id": "availability-panel",
                                  "mapTo": "availabilityConfig",
                                  "name": "Availability",
                                },
                              ],
                            },
                            "fullLabel": "Bar",
                            "icon": [Function],
                            "iconType": "visBarVerticalStacked",
                            "id": "bar",
                            "label": "Bar",
                            "name": "bar",
                            "orientation": "v",
                            "selection": Object {
                              "dataLoss": "nothing",
                            },
                            "seriesAxis": "yaxis",
                            "type": "bar",
                            "visConfig": Object {
                              "config": Object {
                                "displaylogo": false,
                                "responsive": true,
                              },
                              "isUniColor": false,
                              "layout": Object {
                                "height": 500,
                                "legend": Object {
                                  "orientation": "v",
                                  "traceorder": "normal",
                                },
                                "margin": Object {
                                  "b": 30,
                                  "l": 60,
                                  "pad": 0,
                                  "r": 30,
                                  "t": 50,
                                },
                                "showlegend": true,
                              },
                            },
                          },
                        }
                      }
                    >
                      <div
                        className="visEditorSidebar__config"
                      >
                        <EuiForm
                          className="visEditorSidebar__form"
                        >
                          <div
                            className="euiForm visEditorSidebar__form"
                          >
                            <EuiFormRow
                              describedByIds={Array []}
                              display="row"
                              fullWidth={false}
                              hasChildLabel={true}
                              hasEmptyLabelSpace={false}
                              labelType="label"
                            >
                              <div
                                className="euiFormRow"
                                id="random_html_id-row"
                              >
                                <div
                                  className="euiFormRow__fieldWrapper"
                                >
                                  <ConfigPanelOptions
                                    handleConfigChange={[Function]}
                                    id="random_html_id"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    visualizations={
                                      Object {
                                        "data": Object {
                                          "appData": Object {
                                            "fromApp": false,
                                          },
                                          "defaultAxes": Object {},
                                          "indexFields": Object {
                                            "availableFields": Array [
                                              Object {
                                                "name": "agent",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "bytes",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "clientip",
                                                "type": "ip",
                                              },
                                              Object {
                                                "name": "event",
                                                "type": "struct",
                                              },
                                              Object {
                                                "name": "extension",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "geo",
                                                "type": "struct",
                                              },
                                              Object {
                                                "name": "host",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "index",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "ip",
                                                "type": "ip",
                                              },
                                              Object {
                                                "name": "machine",
                                                "type": "struct",
                                              },
                                              Object {
                                                "name": "memory",
                                                "type": "double",
                                              },
                                              Object {
                                                "name": "message",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "phpmemory",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "referer",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "request",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "response",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "tags",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "timestamp",
                                                "type": "timestamp",
                                              },
                                              Object {
                                                "name": "url",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "utc_time",
                                                "type": "timestamp",
                                              },
                                            ],
                                            "queriedFields": Array [
                                              Object {
                                                "name": "double_per_ip_bytes",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "host",
                                                "type": "text",
                                              },
                                              Object {
                                                "name": "ip_count",
                                                "type": "integer",
                                              },
                                              Object {
                                                "name": "per_ip_bytes",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "resp_code",
                                                "type": "text",
                                              },
                                              Object {
                                                "name": "sum_bytes",
                                                "type": "long",
                                              },
                                            ],
                                            "selectedFields": Array [],
                                            "unselectedFields": Array [],
                                          },
                                          "query": Object {},
                                          "rawVizData": Object {
                                            "data": Object {
                                              "count()": Array [
                                                154,
                                                1753,
                                                116,
                                                468,
                                                1964,
                                                219,
                                              ],
                                              "tags": Array [
                                                "error",
                                                "info",
                                                "login",
                                                "security",
                                                "success",
                                                "warning",
                                              ],
                                            },
                                            "jsonData": Array [
                                              Object {
                                                "count()": 154,
                                                "tags": "error",
                                              },
                                              Object {
                                                "count()": 1753,
                                                "tags": "info",
                                              },
                                              Object {
                                                "count()": 116,
                                                "tags": "login",
                                              },
                                              Object {
                                                "count()": 468,
                                                "tags": "security",
                                              },
                                              Object {
                                                "count()": 1964,
                                                "tags": "success",
                                              },
                                              Object {
                                                "count()": 219,
                                                "tags": "warning",
                                              },
                                            ],
                                            "metadata": Object {
                                              "fields": Array [
                                                Object {
                                                  "name": "count()",
                                                  "type": "integer",
                                                },
                                                Object {
                                                  "name": "tags",
                                                  "type": "text",
                                                },
                                              ],
                                              "size": 6,
                                              "status": 200,
                                            },
                                          },
                                          "userConfigs": Object {},
                                        },
                                        "vis": Object {
                                          "category": "Visualizations",
                                          "categoryAxis": "xaxis",
                                          "component": [Function],
                                          "editorConfig": Object {
                                            "panelTabs": Array [
                                              Object {
                                                "editor": [Function],
                                                "id": "data-panel",
                                                "mapTo": "dataConfig",
                                                "name": "Data",
                                                "sections": Array [
                                                  Object {
                                                    "editor": [Function],
                                                    "id": "value_options",
                                                    "mapTo": "valueOptions",
                                                    "name": "Value options",
                                                    "schemas": Array [
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": false,
                                                        "mapTo": "xaxis",
                                                        "name": "X-axis",
                                                      },
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": false,
                                                        "mapTo": "yaxis",
                                                        "name": "Y-axis",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "editor": [Function],
                                                    "id": "chart_options",
                                                    "mapTo": "chartOptions",
                                                    "name": "Chart options",
                                                    "schemas": Array [
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": true,
                                                        "mapTo": "orientation",
                                                        "name": "Orientation",
                                                        "props": Object {
                                                          "defaultSelections": Array [
                                                            Object {
                                                              "name": "Vertical",
                                                              "orientationId": "v",
                                                            },
                                                          ],
                                                          "dropdownList": Array [
                                                            Object {
                                                              "name": "Vertical",
                                                              "orientationId": "v",
                                                            },
                                                            Object {
                                                              "name": "Horizontal",
                                                              "orientationId": "h",
                                                            },
                                                          ],
                                                        },
                                                      },
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": true,
                                                        "mapTo": "mode",
                                                        "name": "Mode",
                                                        "props": Object {
                                                          "defaultSelections": Array [
                                                            Object {
                                                              "modeId": "group",
                                                              "name": "Group",
                                                            },
                                                          ],
                                                          "dropdownList": Array [
                                                            Object {
                                                              "modeId": "group",
                                                              "name": "Group",
                                                            },
                                                            Object {
                                                              "modeId": "stack",
                                                              "name": "Stack",
                                                            },
                                                          ],
                                                        },
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                              Object {
                                                "content": Array [],
                                                "editor": [Function],
                                                "id": "style-panel",
                                                "mapTo": "layoutConfig",
                                                "name": "Layout",
                                              },
                                              Object {
                                                "editor": [Function],
                                                "id": "availability-panel",
                                                "mapTo": "availabilityConfig",
                                                "name": "Availability",
                                              },
                                            ],
                                          },
                                          "fullLabel": "Bar",
                                          "icon": [Function],
                                          "iconType": "visBarVerticalStacked",
                                          "id": "bar",
                                          "label": "Bar",
                                          "name": "bar",
                                          "orientation": "v",
                                          "selection": Object {
                                            "dataLoss": "nothing",
                                          },
                                          "seriesAxis": "yaxis",
                                          "type": "bar",
                                          "visConfig": Object {
                                            "config": Object {
                                              "displaylogo": false,
                                              "responsive": true,
                                            },
                                            "isUniColor": false,
                                            "layout": Object {
                                              "height": 500,
                                              "legend": Object {
                                                "orientation": "v",
                                                "traceorder": "normal",
                                              },
                                              "margin": Object {
                                                "b": 30,
                                                "l": 60,
                                                "pad": 0,
                                                "r": 30,
                                                "t": 50,
                                              },
                                              "showlegend": true,
                                            },
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <EuiAccordion
                                      arrowDisplay="left"
                                      buttonContent="Panel options"
                                      id="configPanel__panelOptions"
                                      initialIsOpen={true}
                                      isLoading={false}
                                      isLoadingMessage={false}
                                      paddingSize="s"
                                    >
                                      <div
                                        className="euiAccordion euiAccordion-isOpen"
                                      >
                                        <div
                                          className="euiAccordion__triggerWrapper"
                                        >
                                          <button
                                            aria-controls="configPanel__panelOptions"
                                            aria-expanded={true}
                                            className="euiAccordion__button"
                                            id="random_html_id"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <span
                                              className="euiAccordion__iconWrapper"
                                            >
                                              <EuiIcon
                                                className="euiAccordion__icon euiAccordion__icon-isOpen"
                                                size="m"
                                                type="arrowRight"
                                              >
                                                <EuiIconEmpty
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  />
                                                </EuiIconEmpty>
                                              </EuiIcon>
                                            </span>
                                            <span
                                              className="euiIEFlexWrapFix"
                                            >
                                              Panel options
                                            </span>
                                          </button>
                                        </div>
                                        <div
                                          aria-labelledby="random_html_id"
                                          className="euiAccordion__childWrapper"
                                          id="configPanel__panelOptions"
                                          role="region"
                                          tabIndex={-1}
                                        >
                                          <EuiResizeObserver
                                            onResize={[Function]}
                                          >
                                            <div>
                                              <div
                                                className="euiAccordion__padding--s"
                                              >
                                                <EuiForm
                                                  component="form"
                                                >
                                                  <form
                                                    className="euiForm"
                                                  >
                                                    <EuiFormRow
                                                      describedByIds={Array []}
                                                      display="row"
                                                      fullWidth={true}
                                                      hasChildLabel={true}
                                                      hasEmptyLabelSpace={false}
                                                      helpText="Name your visualization."
                                                      label="Title"
                                                      labelType="label"
                                                    >
                                                      <div
                                                        className="euiFormRow euiFormRow--fullWidth"
                                                        id="random_html_id-row"
                                                      >
                                                        <div
                                                          className="euiFormRow__labelWrapper"
                                                        >
                                                          <EuiFormLabel
                                                            className="euiFormRow__label"
                                                            htmlFor="random_html_id"
                                                            isFocused={false}
                                                            type="label"
                                                          >
                                                            <label
                                                              className="euiFormLabel euiFormRow__label"
                                                              htmlFor="random_html_id"
                                                            >
                                                              Title
                                                            </label>
                                                          </EuiFormLabel>
                                                        </div>
                                                        <div
                                                          className="euiFormRow__fieldWrapper"
                                                        >
                                                          <EuiFieldText
                                                            aria-describedby="random_html_id-help-0"
                                                            id="random_html_id"
                                                            name="first"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder="Title"
                                                            value=""
                                                          >
                                                            <EuiFormControlLayout
                                                              fullWidth={false}
                                                              inputId="random_html_id"
                                                            >
                                                              <div
                                                                className="euiFormControlLayout"
                                                              >
                                                                <div
                                                                  className="euiFormControlLayout__childrenWrapper"
                                                                >
                                                                  <EuiValidatableControl>
                                                                    <input
                                                                      aria-describedby="random_html_id-help-0"
                                                                      className="euiFieldText"
                                                                      id="random_html_id"
                                                                      name="first"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      placeholder="Title"
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                  </EuiValidatableControl>
                                                                  <EuiFormControlLayoutIcons />
                                                                </div>
                                                              </div>
                                                            </EuiFormControlLayout>
                                                          </EuiFieldText>
                                                          <EuiFormHelpText
                                                            className="euiFormRow__text"
                                                            id="random_html_id-help-0"
                                                            key="Name your visualization."
                                                          >
                                                            <div
                                                              className="euiFormHelpText euiFormRow__text"
                                                              id="random_html_id-help-0"
                                                            >
                                                              Name your visualization.
                                                            </div>
                                                          </EuiFormHelpText>
                                                        </div>
                                                      </div>
                                                    </EuiFormRow>
                                                    <EuiFormRow
                                                      describedByIds={Array []}
                                                      display="row"
                                                      fullWidth={false}
                                                      hasChildLabel={true}
                                                      hasEmptyLabelSpace={false}
                                                      label="Description"
                                                      labelType="label"
                                                    >
                                                      <div
                                                        className="euiFormRow"
                                                        id="random_html_id-row"
                                                      >
                                                        <div
                                                          className="euiFormRow__labelWrapper"
                                                        >
                                                          <EuiFormLabel
                                                            className="euiFormRow__label"
                                                            htmlFor="random_html_id"
                                                            isFocused={false}
                                                            type="label"
                                                          >
                                                            <label
                                                              className="euiFormLabel euiFormRow__label"
                                                              htmlFor="random_html_id"
                                                            >
                                                              Description
                                                            </label>
                                                          </EuiFormLabel>
                                                        </div>
                                                        <div
                                                          className="euiFormRow__fieldWrapper"
                                                        >
                                                          <EuiTextArea
                                                            aria-label="Use aria labels when no actual label is in use"
                                                            id="random_html_id"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder="Description"
                                                            value=""
                                                          >
                                                            <EuiValidatableControl>
                                                              <textarea
                                                                aria-label="Use aria labels when no actual label is in use"
                                                                className="euiTextArea euiTextArea--resizeVertical"
                                                                id="random_html_id"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                placeholder="Description"
                                                                rows={6}
                                                                value=""
                                                              />
                                                            </EuiValidatableControl>
                                                          </EuiTextArea>
                                                        </div>
                                                      </div>
                                                    </EuiFormRow>
                                                  </form>
                                                </EuiForm>
                                              </div>
                                            </div>
                                          </EuiResizeObserver>
                                        </div>
                                      </div>
                                    </EuiAccordion>
                                  </ConfigPanelOptions>
                                </div>
                              </div>
                            </EuiFormRow>
                            <EuiFormRow
                              describedByIds={Array []}
                              display="row"
                              fullWidth={true}
                              hasChildLabel={true}
                              hasEmptyLabelSpace={false}
                              labelType="label"
                            >
                              <div
                                className="euiFormRow euiFormRow--fullWidth"
                                id="random_html_id-row"
                              >
                                <div
                                  className="euiFormRow__fieldWrapper"
                                >
                                  <ConfigValueOptions
                                    handleConfigChange={[Function]}
                                    id="random_html_id"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    schemas={
                                      Array [
                                        Object {
                                          "component": null,
                                          "isSingleSelection": false,
                                          "mapTo": "xaxis",
                                          "name": "X-axis",
                                        },
                                        Object {
                                          "component": null,
                                          "isSingleSelection": false,
                                          "mapTo": "yaxis",
                                          "name": "Y-axis",
                                        },
                                      ]
                                    }
                                    sectionId="value_options"
                                    sectionName="Value options"
                                    visualizations={
                                      Object {
                                        "data": Object {
                                          "appData": Object {
                                            "fromApp": false,
                                          },
                                          "defaultAxes": Object {},
                                          "indexFields": Object {
                                            "availableFields": Array [
                                              Object {
                                                "name": "agent",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "bytes",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "clientip",
                                                "type": "ip",
                                              },
                                              Object {
                                                "name": "event",
                                                "type": "struct",
                                              },
                                              Object {
                                                "name": "extension",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "geo",
                                                "type": "struct",
                                              },
                                              Object {
                                                "name": "host",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "index",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "ip",
                                                "type": "ip",
                                              },
                                              Object {
                                                "name": "machine",
                                                "type": "struct",
                                              },
                                              Object {
                                                "name": "memory",
                                                "type": "double",
                                              },
                                              Object {
                                                "name": "message",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "phpmemory",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "referer",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "request",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "response",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "tags",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "timestamp",
                                                "type": "timestamp",
                                              },
                                              Object {
                                                "name": "url",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "utc_time",
                                                "type": "timestamp",
                                              },
                                            ],
                                            "queriedFields": Array [
                                              Object {
                                                "name": "double_per_ip_bytes",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "host",
                                                "type": "text",
                                              },
                                              Object {
                                                "name": "ip_count",
                                                "type": "integer",
                                              },
                                              Object {
                                                "name": "per_ip_bytes",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "resp_code",
                                                "type": "text",
                                              },
                                              Object {
                                                "name": "sum_bytes",
                                                "type": "long",
                                              },
                                            ],
                                            "selectedFields": Array [],
                                            "unselectedFields": Array [],
                                          },
                                          "query": Object {},
                                          "rawVizData": Object {
                                            "data": Object {
                                              "count()": Array [
                                                154,
                                                1753,
                                                116,
                                                468,
                                                1964,
                                                219,
                                              ],
                                              "tags": Array [
                                                "error",
                                                "info",
                                                "login",
                                                "security",
                                                "success",
                                                "warning",
                                              ],
                                            },
                                            "jsonData": Array [
                                              Object {
                                                "count()": 154,
                                                "tags": "error",
                                              },
                                              Object {
                                                "count()": 1753,
                                                "tags": "info",
                                              },
                                              Object {
                                                "count()": 116,
                                                "tags": "login",
                                              },
                                              Object {
                                                "count()": 468,
                                                "tags": "security",
                                              },
                                              Object {
                                                "count()": 1964,
                                                "tags": "success",
                                              },
                                              Object {
                                                "count()": 219,
                                                "tags": "warning",
                                              },
                                            ],
                                            "metadata": Object {
                                              "fields": Array [
                                                Object {
                                                  "name": "count()",
                                                  "type": "integer",
                                                },
                                                Object {
                                                  "name": "tags",
                                                  "type": "text",
                                                },
                                              ],
                                              "size": 6,
                                              "status": 200,
                                            },
                                          },
                                          "userConfigs": Object {},
                                        },
                                        "vis": Object {
                                          "category": "Visualizations",
                                          "categoryAxis": "xaxis",
                                          "component": [Function],
                                          "editorConfig": Object {
                                            "panelTabs": Array [
                                              Object {
                                                "editor": [Function],
                                                "id": "data-panel",
                                                "mapTo": "dataConfig",
                                                "name": "Data",
                                                "sections": Array [
                                                  Object {
                                                    "editor": [Function],
                                                    "id": "value_options",
                                                    "mapTo": "valueOptions",
                                                    "name": "Value options",
                                                    "schemas": Array [
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": false,
                                                        "mapTo": "xaxis",
                                                        "name": "X-axis",
                                                      },
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": false,
                                                        "mapTo": "yaxis",
                                                        "name": "Y-axis",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "editor": [Function],
                                                    "id": "chart_options",
                                                    "mapTo": "chartOptions",
                                                    "name": "Chart options",
                                                    "schemas": Array [
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": true,
                                                        "mapTo": "orientation",
                                                        "name": "Orientation",
                                                        "props": Object {
                                                          "defaultSelections": Array [
                                                            Object {
                                                              "name": "Vertical",
                                                              "orientationId": "v",
                                                            },
                                                          ],
                                                          "dropdownList": Array [
                                                            Object {
                                                              "name": "Vertical",
                                                              "orientationId": "v",
                                                            },
                                                            Object {
                                                              "name": "Horizontal",
                                                              "orientationId": "h",
                                                            },
                                                          ],
                                                        },
                                                      },
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": true,
                                                        "mapTo": "mode",
                                                        "name": "Mode",
                                                        "props": Object {
                                                          "defaultSelections": Array [
                                                            Object {
                                                              "modeId": "group",
                                                              "name": "Group",
                                                            },
                                                          ],
                                                          "dropdownList": Array [
                                                            Object {
                                                              "modeId": "group",
                                                              "name": "Group",
                                                            },
                                                            Object {
                                                              "modeId": "stack",
                                                              "name": "Stack",
                                                            },
                                                          ],
                                                        },
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                              Object {
                                                "content": Array [],
                                                "editor": [Function],
                                                "id": "style-panel",
                                                "mapTo": "layoutConfig",
                                                "name": "Layout",
                                              },
                                              Object {
                                                "editor": [Function],
                                                "id": "availability-panel",
                                                "mapTo": "availabilityConfig",
                                                "name": "Availability",
                                              },
                                            ],
                                          },
                                          "fullLabel": "Bar",
                                          "icon": [Function],
                                          "iconType": "visBarVerticalStacked",
                                          "id": "bar",
                                          "label": "Bar",
                                          "name": "bar",
                                          "orientation": "v",
                                          "selection": Object {
                                            "dataLoss": "nothing",
                                          },
                                          "seriesAxis": "yaxis",
                                          "type": "bar",
                                          "visConfig": Object {
                                            "config": Object {
                                              "displaylogo": false,
                                              "responsive": true,
                                            },
                                            "isUniColor": false,
                                            "layout": Object {
                                              "height": 500,
                                              "legend": Object {
                                                "orientation": "v",
                                                "traceorder": "normal",
                                              },
                                              "margin": Object {
                                                "b": 30,
                                                "l": 60,
                                                "pad": 0,
                                                "r": 30,
                                                "t": 50,
                                              },
                                              "showlegend": true,
                                            },
                                          },
                                        },
                                      }
                                    }
                                    vizState={Object {}}
                                  >
                                    <EuiAccordion
                                      arrowDisplay="left"
                                      buttonContent="Value options"
                                      id="configPanel__value_options"
                                      initialIsOpen={true}
                                      isLoading={false}
                                      isLoadingMessage={false}
                                      paddingSize="s"
                                    >
                                      <div
                                        className="euiAccordion euiAccordion-isOpen"
                                      >
                                        <div
                                          className="euiAccordion__triggerWrapper"
                                        >
                                          <button
                                            aria-controls="configPanel__value_options"
                                            aria-expanded={true}
                                            className="euiAccordion__button"
                                            id="random_html_id"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <span
                                              className="euiAccordion__iconWrapper"
                                            >
                                              <EuiIcon
                                                className="euiAccordion__icon euiAccordion__icon-isOpen"
                                                size="m"
                                                type="arrowRight"
                                              >
                                                <EuiIconEmpty
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  />
                                                </EuiIconEmpty>
                                              </EuiIcon>
                                            </span>
                                            <span
                                              className="euiIEFlexWrapFix"
                                            >
                                              Value options
                                            </span>
                                          </button>
                                        </div>
                                        <div
                                          aria-labelledby="random_html_id"
                                          className="euiAccordion__childWrapper"
                                          id="configPanel__value_options"
                                          role="region"
                                          tabIndex={-1}
                                        >
                                          <EuiResizeObserver
                                            onResize={[Function]}
                                          >
                                            <div>
                                              <div
                                                className="euiAccordion__padding--s"
                                              >
                                                <PanelItem
                                                  advancedTitle="advancedTitle"
                                                  dropdownList={
                                                    Array [
                                                      Object {
                                                        "name": "count()",
                                                        "type": "integer",
                                                      },
                                                      Object {
                                                        "name": "tags",
                                                        "type": "text",
                                                      },
                                                    ]
                                                  }
                                                  isSingleSelection={false}
                                                  key="viz-series-0"
                                                  onSelectChange={[Function]}
                                                  paddingTitle="X-axis"
                                                  vizState={Object {}}
                                                >
                                                  <EuiTitle
                                                    size="xxs"
                                                  >
                                                    <h3
                                                      className="euiTitle euiTitle--xxsmall"
                                                    >
                                                      X-axis
                                                    </h3>
                                                  </EuiTitle>
                                                  <EuiSpacer
                                                    size="s"
                                                  >
                                                    <div
                                                      className="euiSpacer euiSpacer--s"
                                                    />
                                                  </EuiSpacer>
                                                  <EuiComboBox
                                                    aria-label="Use aria labels when no actual label is in use"
                                                    async={false}
                                                    compressed={false}
                                                    fullWidth={false}
                                                    id="axis-select-6"
                                                    isClearable={true}
                                                    isInvalid={true}
                                                    onChange={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "count()",
                                                          "name": "count()",
                                                          "type": "integer",
                                                        },
                                                        Object {
                                                          "label": "tags",
                                                          "name": "tags",
                                                          "type": "text",
                                                        },
                                                      ]
                                                    }
                                                    placeholder="Select a field"
                                                    selectedOptions={Array []}
                                                    singleSelection={false}
                                                    sortMatchesBy="none"
                                                  >
                                                    <div
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-label="Use aria labels when no actual label is in use"
                                                      className="euiComboBox euiComboBox-isInvalid"
                                                      onKeyDown={[Function]}
                                                      role="combobox"
                                                    >
                                                      <EuiComboBoxInput
                                                        autoSizeInputRef={[Function]}
                                                        compressed={false}
                                                        fullWidth={false}
                                                        hasSelectedOptions={false}
                                                        id="axis-select-6"
                                                        inputRef={[Function]}
                                                        isListOpen={false}
                                                        noIcon={false}
                                                        onChange={[Function]}
                                                        onClear={[Function]}
                                                        onClick={[Function]}
                                                        onCloseListClick={[Function]}
                                                        onFocus={[Function]}
                                                        onOpenListClick={[Function]}
                                                        onRemoveOption={[Function]}
                                                        placeholder="Select a field"
                                                        rootId={[Function]}
                                                        searchValue=""
                                                        selectedOptions={Array []}
                                                        singleSelection={false}
                                                        toggleButtonRef={[Function]}
                                                        updatePosition={[Function]}
                                                        value=""
                                                      >
                                                        <EuiFormControlLayout
                                                          compressed={false}
                                                          fullWidth={false}
                                                          icon={
                                                            Object {
                                                              "aria-label": "Open list of options",
                                                              "data-test-subj": "comboBoxToggleListButton",
                                                              "disabled": undefined,
                                                              "onClick": [Function],
                                                              "ref": [Function],
                                                              "side": "right",
                                                              "type": "arrowDown",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="euiFormControlLayout"
                                                          >
                                                            <div
                                                              className="euiFormControlLayout__childrenWrapper"
                                                            >
                                                              <div
                                                                className="euiComboBox__inputWrap euiComboBox__inputWrap-isClearable"
                                                                data-test-subj="comboBoxInput"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                              >
                                                                <p
                                                                  className="euiComboBoxPlaceholder"
                                                                >
                                                                  Select a field
                                                                </p>
                                                                <AutosizeInput
                                                                  aria-controls=""
                                                                  className="euiComboBox__input"
                                                                  data-test-subj="comboBoxSearchInput"
                                                                  id="axis-select-6"
                                                                  injectStyles={true}
                                                                  inputRef={[Function]}
                                                                  minWidth={1}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  role="textbox"
                                                                  style={
                                                                    Object {
                                                                      "fontSize": 14,
                                                                    }
                                                                  }
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="euiComboBox__input"
                                                                    style={
                                                                      Object {
                                                                        "display": "inline-block",
                                                                        "fontSize": 14,
                                                                      }
                                                                    }
                                                                  >
                                                                    <input
                                                                      aria-controls=""
                                                                      data-test-subj="comboBoxSearchInput"
                                                                      id="axis-select-6"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      role="textbox"
                                                                      style={
                                                                        Object {
                                                                          "boxSizing": "content-box",
                                                                          "width": "2px",
                                                                        }
                                                                      }
                                                                      value=""
                                                                    />
                                                                    <div
                                                                      style={
                                                                        Object {
                                                                          "height": 0,
                                                                          "left": 0,
                                                                          "overflow": "scroll",
                                                                          "position": "absolute",
                                                                          "top": 0,
                                                                          "visibility": "hidden",
                                                                          "whiteSpace": "pre",
                                                                        }
                                                                      }
                                                                    />
                                                                  </div>
                                                                </AutosizeInput>
                                                              </div>
                                                              <EuiFormControlLayoutIcons
                                                                compressed={false}
                                                                icon={
                                                                  Object {
                                                                    "aria-label": "Open list of options",
                                                                    "data-test-subj": "comboBoxToggleListButton",
                                                                    "disabled": undefined,
                                                                    "onClick": [Function],
                                                                    "ref": [Function],
                                                                    "side": "right",
                                                                    "type": "arrowDown",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                                >
                                                                  <EuiFormControlLayoutCustomIcon
                                                                    aria-label="Open list of options"
                                                                    data-test-subj="comboBoxToggleListButton"
                                                                    iconRef={[Function]}
                                                                    onClick={[Function]}
                                                                    size="m"
                                                                    type="arrowDown"
                                                                  >
                                                                    <button
                                                                      aria-label="Open list of options"
                                                                      className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                                                      data-test-subj="comboBoxToggleListButton"
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <EuiIcon
                                                                        aria-hidden="true"
                                                                        className="euiFormControlLayoutCustomIcon__icon"
                                                                        size="m"
                                                                        type="arrowDown"
                                                                      >
                                                                        <EuiIconEmpty
                                                                          aria-hidden={true}
                                                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                          focusable="false"
                                                                          role="img"
                                                                          style={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                            focusable="false"
                                                                            height={16}
                                                                            role="img"
                                                                            style={null}
                                                                            viewBox="0 0 16 16"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          />
                                                                        </EuiIconEmpty>
                                                                      </EuiIcon>
                                                                    </button>
                                                                  </EuiFormControlLayoutCustomIcon>
                                                                </div>
                                                              </EuiFormControlLayoutIcons>
                                                            </div>
                                                          </div>
                                                        </EuiFormControlLayout>
                                                      </EuiComboBoxInput>
                                                    </div>
                                                  </EuiComboBox>
                                                </PanelItem>
                                                <EuiSpacer
                                                  size="s"
                                                >
                                                  <div
                                                    className="euiSpacer euiSpacer--s"
                                                  />
                                                </EuiSpacer>
                                                <PanelItem
                                                  advancedTitle="advancedTitle"
                                                  dropdownList={
                                                    Array [
                                                      Object {
                                                        "name": "count()",
                                                        "type": "integer",
                                                      },
                                                      Object {
                                                        "name": "tags",
                                                        "type": "text",
                                                      },
                                                    ]
                                                  }
                                                  isSingleSelection={false}
                                                  key="viz-series-1"
                                                  onSelectChange={[Function]}
                                                  paddingTitle="Y-axis"
                                                  vizState={Object {}}
                                                >
                                                  <EuiTitle
                                                    size="xxs"
                                                  >
                                                    <h3
                                                      className="euiTitle euiTitle--xxsmall"
                                                    >
                                                      Y-axis
                                                    </h3>
                                                  </EuiTitle>
                                                  <EuiSpacer
                                                    size="s"
                                                  >
                                                    <div
                                                      className="euiSpacer euiSpacer--s"
                                                    />
                                                  </EuiSpacer>
                                                  <EuiComboBox
                                                    aria-label="Use aria labels when no actual label is in use"
                                                    async={false}
                                                    compressed={false}
                                                    fullWidth={false}
                                                    id="axis-select-7"
                                                    isClearable={true}
                                                    isInvalid={true}
                                                    onChange={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "count()",
                                                          "name": "count()",
                                                          "type": "integer",
                                                        },
                                                        Object {
                                                          "label": "tags",
                                                          "name": "tags",
                                                          "type": "text",
                                                        },
                                                      ]
                                                    }
                                                    placeholder="Select a field"
                                                    selectedOptions={Array []}
                                                    singleSelection={false}
                                                    sortMatchesBy="none"
                                                  >
                                                    <div
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-label="Use aria labels when no actual label is in use"
                                                      className="euiComboBox euiComboBox-isInvalid"
                                                      onKeyDown={[Function]}
                                                      role="combobox"
                                                    >
                                                      <EuiComboBoxInput
                                                        autoSizeInputRef={[Function]}
                                                        compressed={false}
                                                        fullWidth={false}
                                                        hasSelectedOptions={false}
                                                        id="axis-select-7"
                                                        inputRef={[Function]}
                                                        isListOpen={false}
                                                        noIcon={false}
                                                        onChange={[Function]}
                                                        onClear={[Function]}
                                                        onClick={[Function]}
                                                        onCloseListClick={[Function]}
                                                        onFocus={[Function]}
                                                        onOpenListClick={[Function]}
                                                        onRemoveOption={[Function]}
                                                        placeholder="Select a field"
                                                        rootId={[Function]}
                                                        searchValue=""
                                                        selectedOptions={Array []}
                                                        singleSelection={false}
                                                        toggleButtonRef={[Function]}
                                                        updatePosition={[Function]}
                                                        value=""
                                                      >
                                                        <EuiFormControlLayout
                                                          compressed={false}
                                                          fullWidth={false}
                                                          icon={
                                                            Object {
                                                              "aria-label": "Open list of options",
                                                              "data-test-subj": "comboBoxToggleListButton",
                                                              "disabled": undefined,
                                                              "onClick": [Function],
                                                              "ref": [Function],
                                                              "side": "right",
                                                              "type": "arrowDown",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="euiFormControlLayout"
                                                          >
                                                            <div
                                                              className="euiFormControlLayout__childrenWrapper"
                                                            >
                                                              <div
                                                                className="euiComboBox__inputWrap euiComboBox__inputWrap-isClearable"
                                                                data-test-subj="comboBoxInput"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                              >
                                                                <p
                                                                  className="euiComboBoxPlaceholder"
                                                                >
                                                                  Select a field
                                                                </p>
                                                                <AutosizeInput
                                                                  aria-controls=""
                                                                  className="euiComboBox__input"
                                                                  data-test-subj="comboBoxSearchInput"
                                                                  id="axis-select-7"
                                                                  injectStyles={true}
                                                                  inputRef={[Function]}
                                                                  minWidth={1}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  role="textbox"
                                                                  style={
                                                                    Object {
                                                                      "fontSize": 14,
                                                                    }
                                                                  }
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="euiComboBox__input"
                                                                    style={
                                                                      Object {
                                                                        "display": "inline-block",
                                                                        "fontSize": 14,
                                                                      }
                                                                    }
                                                                  >
                                                                    <input
                                                                      aria-controls=""
                                                                      data-test-subj="comboBoxSearchInput"
                                                                      id="axis-select-7"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      role="textbox"
                                                                      style={
                                                                        Object {
                                                                          "boxSizing": "content-box",
                                                                          "width": "2px",
                                                                        }
                                                                      }
                                                                      value=""
                                                                    />
                                                                    <div
                                                                      style={
                                                                        Object {
                                                                          "height": 0,
                                                                          "left": 0,
                                                                          "overflow": "scroll",
                                                                          "position": "absolute",
                                                                          "top": 0,
                                                                          "visibility": "hidden",
                                                                          "whiteSpace": "pre",
                                                                        }
                                                                      }
                                                                    />
                                                                  </div>
                                                                </AutosizeInput>
                                                              </div>
                                                              <EuiFormControlLayoutIcons
                                                                compressed={false}
                                                                icon={
                                                                  Object {
                                                                    "aria-label": "Open list of options",
                                                                    "data-test-subj": "comboBoxToggleListButton",
                                                                    "disabled": undefined,
                                                                    "onClick": [Function],
                                                                    "ref": [Function],
                                                                    "side": "right",
                                                                    "type": "arrowDown",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                                >
                                                                  <EuiFormControlLayoutCustomIcon
                                                                    aria-label="Open list of options"
                                                                    data-test-subj="comboBoxToggleListButton"
                                                                    iconRef={[Function]}
                                                                    onClick={[Function]}
                                                                    size="m"
                                                                    type="arrowDown"
                                                                  >
                                                                    <button
                                                                      aria-label="Open list of options"
                                                                      className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                                                      data-test-subj="comboBoxToggleListButton"
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <EuiIcon
                                                                        aria-hidden="true"
                                                                        className="euiFormControlLayoutCustomIcon__icon"
                                                                        size="m"
                                                                        type="arrowDown"
                                                                      >
                                                                        <EuiIconEmpty
                                                                          aria-hidden={true}
                                                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                          focusable="false"
                                                                          role="img"
                                                                          style={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                            focusable="false"
                                                                            height={16}
                                                                            role="img"
                                                                            style={null}
                                                                            viewBox="0 0 16 16"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          />
                                                                        </EuiIconEmpty>
                                                                      </EuiIcon>
                                                                    </button>
                                                                  </EuiFormControlLayoutCustomIcon>
                                                                </div>
                                                              </EuiFormControlLayoutIcons>
                                                            </div>
                                                          </div>
                                                        </EuiFormControlLayout>
                                                      </EuiComboBoxInput>
                                                    </div>
                                                  </EuiComboBox>
                                                </PanelItem>
                                                <EuiSpacer
                                                  size="s"
                                                >
                                                  <div
                                                    className="euiSpacer euiSpacer--s"
                                                  />
                                                </EuiSpacer>
                                              </div>
                                            </div>
                                          </EuiResizeObserver>
                                        </div>
                                      </div>
                                    </EuiAccordion>
                                  </ConfigValueOptions>
                                </div>
                              </div>
                            </EuiFormRow>
                            <EuiFormRow
                              describedByIds={Array []}
                              display="row"
                              fullWidth={true}
                              hasChildLabel={true}
                              hasEmptyLabelSpace={false}
                              labelType="label"
                            >
                              <div
                                className="euiFormRow euiFormRow--fullWidth"
                                id="random_html_id-row"
                              >
                                <div
                                  className="euiFormRow__fieldWrapper"
                                >
                                  <ConfigValueOptions
                                    handleConfigChange={[Function]}
                                    id="random_html_id"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    schemas={
                                      Array [
                                        Object {
                                          "component": null,
                                          "isSingleSelection": true,
                                          "mapTo": "orientation",
                                          "name": "Orientation",
                                          "props": Object {
                                            "defaultSelections": Array [
                                              Object {
                                                "name": "Vertical",
                                                "orientationId": "v",
                                              },
                                            ],
                                            "dropdownList": Array [
                                              Object {
                                                "name": "Vertical",
                                                "orientationId": "v",
                                              },
                                              Object {
                                                "name": "Horizontal",
                                                "orientationId": "h",
                                              },
                                            ],
                                          },
                                        },
                                        Object {
                                          "component": null,
                                          "isSingleSelection": true,
                                          "mapTo": "mode",
                                          "name": "Mode",
                                          "props": Object {
                                            "defaultSelections": Array [
                                              Object {
                                                "modeId": "group",
                                                "name": "Group",
                                              },
                                            ],
                                            "dropdownList": Array [
                                              Object {
                                                "modeId": "group",
                                                "name": "Group",
                                              },
                                              Object {
                                                "modeId": "stack",
                                                "name": "Stack",
                                              },
                                            ],
                                          },
                                        },
                                      ]
                                    }
                                    sectionId="chart_options"
                                    sectionName="Chart options"
                                    visualizations={
                                      Object {
                                        "data": Object {
                                          "appData": Object {
                                            "fromApp": false,
                                          },
                                          "defaultAxes": Object {},
                                          "indexFields": Object {
                                            "availableFields": Array [
                                              Object {
                                                "name": "agent",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "bytes",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "clientip",
                                                "type": "ip",
                                              },
                                              Object {
                                                "name": "event",
                                                "type": "struct",
                                              },
                                              Object {
                                                "name": "extension",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "geo",
                                                "type": "struct",
                                              },
                                              Object {
                                                "name": "host",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "index",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "ip",
                                                "type": "ip",
                                              },
                                              Object {
                                                "name": "machine",
                                                "type": "struct",
                                              },
                                              Object {
                                                "name": "memory",
                                                "type": "double",
                                              },
                                              Object {
                                                "name": "message",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "phpmemory",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "referer",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "request",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "response",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "tags",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "timestamp",
                                                "type": "timestamp",
                                              },
                                              Object {
                                                "name": "url",
                                                "type": "string",
                                              },
                                              Object {
                                                "name": "utc_time",
                                                "type": "timestamp",
                                              },
                                            ],
                                            "queriedFields": Array [
                                              Object {
                                                "name": "double_per_ip_bytes",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "host",
                                                "type": "text",
                                              },
                                              Object {
                                                "name": "ip_count",
                                                "type": "integer",
                                              },
                                              Object {
                                                "name": "per_ip_bytes",
                                                "type": "long",
                                              },
                                              Object {
                                                "name": "resp_code",
                                                "type": "text",
                                              },
                                              Object {
                                                "name": "sum_bytes",
                                                "type": "long",
                                              },
                                            ],
                                            "selectedFields": Array [],
                                            "unselectedFields": Array [],
                                          },
                                          "query": Object {},
                                          "rawVizData": Object {
                                            "data": Object {
                                              "count()": Array [
                                                154,
                                                1753,
                                                116,
                                                468,
                                                1964,
                                                219,
                                              ],
                                              "tags": Array [
                                                "error",
                                                "info",
                                                "login",
                                                "security",
                                                "success",
                                                "warning",
                                              ],
                                            },
                                            "jsonData": Array [
                                              Object {
                                                "count()": 154,
                                                "tags": "error",
                                              },
                                              Object {
                                                "count()": 1753,
                                                "tags": "info",
                                              },
                                              Object {
                                                "count()": 116,
                                                "tags": "login",
                                              },
                                              Object {
                                                "count()": 468,
                                                "tags": "security",
                                              },
                                              Object {
                                                "count()": 1964,
                                                "tags": "success",
                                              },
                                              Object {
                                                "count()": 219,
                                                "tags": "warning",
                                              },
                                            ],
                                            "metadata": Object {
                                              "fields": Array [
                                                Object {
                                                  "name": "count()",
                                                  "type": "integer",
                                                },
                                                Object {
                                                  "name": "tags",
                                                  "type": "text",
                                                },
                                              ],
                                              "size": 6,
                                              "status": 200,
                                            },
                                          },
                                          "userConfigs": Object {},
                                        },
                                        "vis": Object {
                                          "category": "Visualizations",
                                          "categoryAxis": "xaxis",
                                          "component": [Function],
                                          "editorConfig": Object {
                                            "panelTabs": Array [
                                              Object {
                                                "editor": [Function],
                                                "id": "data-panel",
                                                "mapTo": "dataConfig",
                                                "name": "Data",
                                                "sections": Array [
                                                  Object {
                                                    "editor": [Function],
                                                    "id": "value_options",
                                                    "mapTo": "valueOptions",
                                                    "name": "Value options",
                                                    "schemas": Array [
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": false,
                                                        "mapTo": "xaxis",
                                                        "name": "X-axis",
                                                      },
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": false,
                                                        "mapTo": "yaxis",
                                                        "name": "Y-axis",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "editor": [Function],
                                                    "id": "chart_options",
                                                    "mapTo": "chartOptions",
                                                    "name": "Chart options",
                                                    "schemas": Array [
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": true,
                                                        "mapTo": "orientation",
                                                        "name": "Orientation",
                                                        "props": Object {
                                                          "defaultSelections": Array [
                                                            Object {
                                                              "name": "Vertical",
                                                              "orientationId": "v",
                                                            },
                                                          ],
                                                          "dropdownList": Array [
                                                            Object {
                                                              "name": "Vertical",
                                                              "orientationId": "v",
                                                            },
                                                            Object {
                                                              "name": "Horizontal",
                                                              "orientationId": "h",
                                                            },
                                                          ],
                                                        },
                                                      },
                                                      Object {
                                                        "component": null,
                                                        "isSingleSelection": true,
                                                        "mapTo": "mode",
                                                        "name": "Mode",
                                                        "props": Object {
                                                          "defaultSelections": Array [
                                                            Object {
                                                              "modeId": "group",
                                                              "name": "Group",
                                                            },
                                                          ],
                                                          "dropdownList": Array [
                                                            Object {
                                                              "modeId": "group",
                                                              "name": "Group",
                                                            },
                                                            Object {
                                                              "modeId": "stack",
                                                              "name": "Stack",
                                                            },
                                                          ],
                                                        },
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                              Object {
                                                "content": Array [],
                                                "editor": [Function],
                                                "id": "style-panel",
                                                "mapTo": "layoutConfig",
                                                "name": "Layout",
                                              },
                                              Object {
                                                "editor": [Function],
                                                "id": "availability-panel",
                                                "mapTo": "availabilityConfig",
                                                "name": "Availability",
                                              },
                                            ],
                                          },
                                          "fullLabel": "Bar",
                                          "icon": [Function],
                                          "iconType": "visBarVerticalStacked",
                                          "id": "bar",
                                          "label": "Bar",
                                          "name": "bar",
                                          "orientation": "v",
                                          "selection": Object {
                                            "dataLoss": "nothing",
                                          },
                                          "seriesAxis": "yaxis",
                                          "type": "bar",
                                          "visConfig": Object {
                                            "config": Object {
                                              "displaylogo": false,
                                              "responsive": true,
                                            },
                                            "isUniColor": false,
                                            "layout": Object {
                                              "height": 500,
                                              "legend": Object {
                                                "orientation": "v",
                                                "traceorder": "normal",
                                              },
                                              "margin": Object {
                                                "b": 30,
                                                "l": 60,
                                                "pad": 0,
                                                "r": 30,
                                                "t": 50,
                                              },
                                              "showlegend": true,
                                            },
                                          },
                                        },
                                      }
                                    }
                                    vizState={Object {}}
                                  >
                                    <EuiAccordion
                                      arrowDisplay="left"
                                      buttonContent="Chart options"
                                      id="configPanel__chart_options"
                                      initialIsOpen={true}
                                      isLoading={false}
                                      isLoadingMessage={false}
                                      paddingSize="s"
                                    >
                                      <div
                                        className="euiAccordion euiAccordion-isOpen"
                                      >
                                        <div
                                          className="euiAccordion__triggerWrapper"
                                        >
                                          <button
                                            aria-controls="configPanel__chart_options"
                                            aria-expanded={true}
                                            className="euiAccordion__button"
                                            id="random_html_id"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <span
                                              className="euiAccordion__iconWrapper"
                                            >
                                              <EuiIcon
                                                className="euiAccordion__icon euiAccordion__icon-isOpen"
                                                size="m"
                                                type="arrowRight"
                                              >
                                                <EuiIconEmpty
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  />
                                                </EuiIconEmpty>
                                              </EuiIcon>
                                            </span>
                                            <span
                                              className="euiIEFlexWrapFix"
                                            >
                                              Chart options
                                            </span>
                                          </button>
                                        </div>
                                        <div
                                          aria-labelledby="random_html_id"
                                          className="euiAccordion__childWrapper"
                                          id="configPanel__chart_options"
                                          role="region"
                                          tabIndex={-1}
                                        >
                                          <EuiResizeObserver
                                            onResize={[Function]}
                                          >
                                            <div>
                                              <div
                                                className="euiAccordion__padding--s"
                                              >
                                                <PanelItem
                                                  advancedTitle="advancedTitle"
                                                  defaultSelections={
                                                    Array [
                                                      Object {
                                                        "name": "Vertical",
                                                        "orientationId": "v",
                                                      },
                                                    ]
                                                  }
                                                  dropdownList={
                                                    Array [
                                                      Object {
                                                        "name": "Vertical",
                                                        "orientationId": "v",
                                                      },
                                                      Object {
                                                        "name": "Horizontal",
                                                        "orientationId": "h",
                                                      },
                                                    ]
                                                  }
                                                  isSingleSelection={true}
                                                  key="viz-series-0"
                                                  onSelectChange={[Function]}
                                                  paddingTitle="Orientation"
                                                  vizState={Object {}}
                                                >
                                                  <EuiTitle
                                                    size="xxs"
                                                  >
                                                    <h3
                                                      className="euiTitle euiTitle--xxsmall"
                                                    >
                                                      Orientation
                                                    </h3>
                                                  </EuiTitle>
                                                  <EuiSpacer
                                                    size="s"
                                                  >
                                                    <div
                                                      className="euiSpacer euiSpacer--s"
                                                    />
                                                  </EuiSpacer>
                                                  <EuiComboBox
                                                    aria-label="Use aria labels when no actual label is in use"
                                                    async={false}
                                                    compressed={false}
                                                    fullWidth={false}
                                                    id="axis-select-8"
                                                    isClearable={true}
                                                    isInvalid={true}
                                                    onChange={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "Vertical",
                                                          "name": "Vertical",
                                                          "orientationId": "v",
                                                        },
                                                        Object {
                                                          "label": "Horizontal",
                                                          "name": "Horizontal",
                                                          "orientationId": "h",
                                                        },
                                                      ]
                                                    }
                                                    placeholder="Select a field"
                                                    selectedOptions={Array []}
                                                    singleSelection={true}
                                                    sortMatchesBy="none"
                                                  >
                                                    <div
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-label="Use aria labels when no actual label is in use"
                                                      className="euiComboBox euiComboBox-isInvalid"
                                                      onKeyDown={[Function]}
                                                      role="combobox"
                                                    >
                                                      <EuiComboBoxInput
                                                        autoSizeInputRef={[Function]}
                                                        compressed={false}
                                                        fullWidth={false}
                                                        hasSelectedOptions={false}
                                                        id="axis-select-8"
                                                        inputRef={[Function]}
                                                        isListOpen={false}
                                                        noIcon={false}
                                                        onChange={[Function]}
                                                        onClear={[Function]}
                                                        onClick={[Function]}
                                                        onCloseListClick={[Function]}
                                                        onFocus={[Function]}
                                                        onOpenListClick={[Function]}
                                                        onRemoveOption={[Function]}
                                                        placeholder="Select a field"
                                                        rootId={[Function]}
                                                        searchValue=""
                                                        selectedOptions={Array []}
                                                        singleSelection={true}
                                                        toggleButtonRef={[Function]}
                                                        updatePosition={[Function]}
                                                        value=""
                                                      >
                                                        <EuiFormControlLayout
                                                          compressed={false}
                                                          fullWidth={false}
                                                          icon={
                                                            Object {
                                                              "aria-label": "Open list of options",
                                                              "data-test-subj": "comboBoxToggleListButton",
                                                              "disabled": undefined,
                                                              "onClick": [Function],
                                                              "ref": [Function],
                                                              "side": "right",
                                                              "type": "arrowDown",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="euiFormControlLayout"
                                                          >
                                                            <div
                                                              className="euiFormControlLayout__childrenWrapper"
                                                            >
                                                              <div
                                                                className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                                                data-test-subj="comboBoxInput"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                              >
                                                                <p
                                                                  className="euiComboBoxPlaceholder"
                                                                >
                                                                  Select a field
                                                                </p>
                                                                <AutosizeInput
                                                                  aria-controls=""
                                                                  className="euiComboBox__input"
                                                                  data-test-subj="comboBoxSearchInput"
                                                                  id="axis-select-8"
                                                                  injectStyles={true}
                                                                  inputRef={[Function]}
                                                                  minWidth={1}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  role="textbox"
                                                                  style={
                                                                    Object {
                                                                      "fontSize": 14,
                                                                    }
                                                                  }
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="euiComboBox__input"
                                                                    style={
                                                                      Object {
                                                                        "display": "inline-block",
                                                                        "fontSize": 14,
                                                                      }
                                                                    }
                                                                  >
                                                                    <input
                                                                      aria-controls=""
                                                                      data-test-subj="comboBoxSearchInput"
                                                                      id="axis-select-8"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      role="textbox"
                                                                      style={
                                                                        Object {
                                                                          "boxSizing": "content-box",
                                                                          "width": "2px",
                                                                        }
                                                                      }
                                                                      value=""
                                                                    />
                                                                    <div
                                                                      style={
                                                                        Object {
                                                                          "height": 0,
                                                                          "left": 0,
                                                                          "overflow": "scroll",
                                                                          "position": "absolute",
                                                                          "top": 0,
                                                                          "visibility": "hidden",
                                                                          "whiteSpace": "pre",
                                                                        }
                                                                      }
                                                                    />
                                                                  </div>
                                                                </AutosizeInput>
                                                              </div>
                                                              <EuiFormControlLayoutIcons
                                                                compressed={false}
                                                                icon={
                                                                  Object {
                                                                    "aria-label": "Open list of options",
                                                                    "data-test-subj": "comboBoxToggleListButton",
                                                                    "disabled": undefined,
                                                                    "onClick": [Function],
                                                                    "ref": [Function],
                                                                    "side": "right",
                                                                    "type": "arrowDown",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                                >
                                                                  <EuiFormControlLayoutCustomIcon
                                                                    aria-label="Open list of options"
                                                                    data-test-subj="comboBoxToggleListButton"
                                                                    iconRef={[Function]}
                                                                    onClick={[Function]}
                                                                    size="m"
                                                                    type="arrowDown"
                                                                  >
                                                                    <button
                                                                      aria-label="Open list of options"
                                                                      className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                                                      data-test-subj="comboBoxToggleListButton"
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <EuiIcon
                                                                        aria-hidden="true"
                                                                        className="euiFormControlLayoutCustomIcon__icon"
                                                                        size="m"
                                                                        type="arrowDown"
                                                                      >
                                                                        <EuiIconEmpty
                                                                          aria-hidden={true}
                                                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                          focusable="false"
                                                                          role="img"
                                                                          style={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                            focusable="false"
                                                                            height={16}
                                                                            role="img"
                                                                            style={null}
                                                                            viewBox="0 0 16 16"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          />
                                                                        </EuiIconEmpty>
                                                                      </EuiIcon>
                                                                    </button>
                                                                  </EuiFormControlLayoutCustomIcon>
                                                                </div>
                                                              </EuiFormControlLayoutIcons>
                                                            </div>
                                                          </div>
                                                        </EuiFormControlLayout>
                                                      </EuiComboBoxInput>
                                                    </div>
                                                  </EuiComboBox>
                                                </PanelItem>
                                                <EuiSpacer
                                                  size="s"
                                                >
                                                  <div
                                                    className="euiSpacer euiSpacer--s"
                                                  />
                                                </EuiSpacer>
                                                <PanelItem
                                                  advancedTitle="advancedTitle"
                                                  defaultSelections={
                                                    Array [
                                                      Object {
                                                        "modeId": "group",
                                                        "name": "Group",
                                                      },
                                                    ]
                                                  }
                                                  dropdownList={
                                                    Array [
                                                      Object {
                                                        "modeId": "group",
                                                        "name": "Group",
                                                      },
                                                      Object {
                                                        "modeId": "stack",
                                                        "name": "Stack",
                                                      },
                                                    ]
                                                  }
                                                  isSingleSelection={true}
                                                  key="viz-series-1"
                                                  onSelectChange={[Function]}
                                                  paddingTitle="Mode"
                                                  vizState={Object {}}
                                                >
                                                  <EuiTitle
                                                    size="xxs"
                                                  >
                                                    <h3
                                                      className="euiTitle euiTitle--xxsmall"
                                                    >
                                                      Mode
                                                    </h3>
                                                  </EuiTitle>
                                                  <EuiSpacer
                                                    size="s"
                                                  >
                                                    <div
                                                      className="euiSpacer euiSpacer--s"
                                                    />
                                                  </EuiSpacer>
                                                  <EuiComboBox
                                                    aria-label="Use aria labels when no actual label is in use"
                                                    async={false}
                                                    compressed={false}
                                                    fullWidth={false}
                                                    id="axis-select-9"
                                                    isClearable={true}
                                                    isInvalid={true}
                                                    onChange={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "Group",
                                                          "modeId": "group",
                                                          "name": "Group",
                                                        },
                                                        Object {
                                                          "label": "Stack",
                                                          "modeId": "stack",
                                                          "name": "Stack",
                                                        },
                                                      ]
                                                    }
                                                    placeholder="Select a field"
                                                    selectedOptions={Array []}
                                                    singleSelection={true}
                                                    sortMatchesBy="none"
                                                  >
                                                    <div
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-label="Use aria labels when no actual label is in use"
                                                      className="euiComboBox euiComboBox-isInvalid"
                                                      onKeyDown={[Function]}
                                                      role="combobox"
                                                    >
                                                      <EuiComboBoxInput
                                                        autoSizeInputRef={[Function]}
                                                        compressed={false}
                                                        fullWidth={false}
                                                        hasSelectedOptions={false}
                                                        id="axis-select-9"
                                                        inputRef={[Function]}
                                                        isListOpen={false}
                                                        noIcon={false}
                                                        onChange={[Function]}
                                                        onClear={[Function]}
                                                        onClick={[Function]}
                                                        onCloseListClick={[Function]}
                                                        onFocus={[Function]}
                                                        onOpenListClick={[Function]}
                                                        onRemoveOption={[Function]}
                                                        placeholder="Select a field"
                                                        rootId={[Function]}
                                                        searchValue=""
                                                        selectedOptions={Array []}
                                                        singleSelection={true}
                                                        toggleButtonRef={[Function]}
                                                        updatePosition={[Function]}
                                                        value=""
                                                      >
                                                        <EuiFormControlLayout
                                                          compressed={false}
                                                          fullWidth={false}
                                                          icon={
                                                            Object {
                                                              "aria-label": "Open list of options",
                                                              "data-test-subj": "comboBoxToggleListButton",
                                                              "disabled": undefined,
                                                              "onClick": [Function],
                                                              "ref": [Function],
                                                              "side": "right",
                                                              "type": "arrowDown",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="euiFormControlLayout"
                                                          >
                                                            <div
                                                              className="euiFormControlLayout__childrenWrapper"
                                                            >
                                                              <div
                                                                className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                                                data-test-subj="comboBoxInput"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                              >
                                                                <p
                                                                  className="euiComboBoxPlaceholder"
                                                                >
                                                                  Select a field
                                                                </p>
                                                                <AutosizeInput
                                                                  aria-controls=""
                                                                  className="euiComboBox__input"
                                                                  data-test-subj="comboBoxSearchInput"
                                                                  id="axis-select-9"
                                                                  injectStyles={true}
                                                                  inputRef={[Function]}
                                                                  minWidth={1}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  role="textbox"
                                                                  style={
                                                                    Object {
                                                                      "fontSize": 14,
                                                                    }
                                                                  }
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="euiComboBox__input"
                                                                    style={
                                                                      Object {
                                                                        "display": "inline-block",
                                                                        "fontSize": 14,
                                                                      }
                                                                    }
                                                                  >
                                                                    <input
                                                                      aria-controls=""
                                                                      data-test-subj="comboBoxSearchInput"
                                                                      id="axis-select-9"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      role="textbox"
                                                                      style={
                                                                        Object {
                                                                          "boxSizing": "content-box",
                                                                          "width": "2px",
                                                                        }
                                                                      }
                                                                      value=""
                                                                    />
                                                                    <div
                                                                      style={
                                                                        Object {
                                                                          "height": 0,
                                                                          "left": 0,
                                                                          "overflow": "scroll",
                                                                          "position": "absolute",
                                                                          "top": 0,
                                                                          "visibility": "hidden",
                                                                          "whiteSpace": "pre",
                                                                        }
                                                                      }
                                                                    />
                                                                  </div>
                                                                </AutosizeInput>
                                                              </div>
                                                              <EuiFormControlLayoutIcons
                                                                compressed={false}
                                                                icon={
                                                                  Object {
                                                                    "aria-label": "Open list of options",
                                                                    "data-test-subj": "comboBoxToggleListButton",
                                                                    "disabled": undefined,
                                                                    "onClick": [Function],
                                                                    "ref": [Function],
                                                                    "side": "right",
                                                                    "type": "arrowDown",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                                >
                                                                  <EuiFormControlLayoutCustomIcon
                                                                    aria-label="Open list of options"
                                                                    data-test-subj="comboBoxToggleListButton"
                                                                    iconRef={[Function]}
                                                                    onClick={[Function]}
                                                                    size="m"
                                                                    type="arrowDown"
                                                                  >
                                                                    <button
                                                                      aria-label="Open list of options"
                                                                      className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                                                      data-test-subj="comboBoxToggleListButton"
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <EuiIcon
                                                                        aria-hidden="true"
                                                                        className="euiFormControlLayoutCustomIcon__icon"
                                                                        size="m"
                                                                        type="arrowDown"
                                                                      >
                                                                        <EuiIconEmpty
                                                                          aria-hidden={true}
                                                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                          focusable="false"
                                                                          role="img"
                                                                          style={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                            focusable="false"
                                                                            height={16}
                                                                            role="img"
                                                                            style={null}
                                                                            viewBox="0 0 16 16"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          />
                                                                        </EuiIconEmpty>
                                                                      </EuiIcon>
                                                                    </button>
                                                                  </EuiFormControlLayoutCustomIcon>
                                                                </div>
                                                              </EuiFormControlLayoutIcons>
                                                            </div>
                                                          </div>
                                                        </EuiFormControlLayout>
                                                      </EuiComboBoxInput>
                                                    </div>
                                                  </EuiComboBox>
                                                </PanelItem>
                                                <EuiSpacer
                                                  size="s"
                                                >
                                                  <div
                                                    className="euiSpacer euiSpacer--s"
                                                  />
                                                </EuiSpacer>
                                              </div>
                                            </div>
                                          </EuiResizeObserver>
                                        </div>
                                      </div>
                                    </EuiAccordion>
                                  </ConfigValueOptions>
                                </div>
                              </div>
                            </EuiFormRow>
                          </div>
                        </EuiForm>
                      </div>
                    </VizDataPanel>
                  </div>
                </div>
              </EuiTabbedContent>
            </div>
          </EuiPanel>
        </div>
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
      >
        <div
          className="euiFlexItem euiFlexItem--flexGrowZero"
        >
          <DefaultEditorControls
            isDirty={true}
            isInvalid={false}
            onConfigDiscard={[Function]}
            onConfigUpdate={[Function]}
          >
            <div
              className="visEditorSidebar__controls"
            >
              <EuiFlexGroup
                gutterSize="none"
                justifyContent="spaceBetween"
                responsive={false}
              >
                <div
                  className="euiFlexGroup euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                >
                  <EuiFlexItem
                    grow={false}
                  >
                    <div
                      className="euiFlexItem euiFlexItem--flexGrowZero"
                    >
                      <EuiButtonEmpty
                        data-test-subj="visualizeEditorResetButton"
                        disabled={false}
                        iconType="cross"
                        onClick={[Function]}
                        size="s"
                      >
                        <button
                          className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--small"
                          data-test-subj="visualizeEditorResetButton"
                          disabled={false}
                          onClick={[Function]}
                          type="button"
                        >
                          <EuiButtonContent
                            className="euiButtonEmpty__content"
                            iconSide="left"
                            iconSize="m"
                            iconType="cross"
                            textProps={
                              Object {
                                "className": "euiButtonEmpty__text",
                              }
                            }
                          >
                            <span
                              className="euiButtonContent euiButtonEmpty__content"
                            >
                              <EuiIcon
                                className="euiButtonContent__icon"
                                color="inherit"
                                size="m"
                                type="cross"
                              >
                                <EuiIconEmpty
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                  focusable="false"
                                  role="img"
                                  style={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                    focusable="false"
                                    height={16}
                                    role="img"
                                    style={null}
                                    viewBox="0 0 16 16"
                                    width={16}
                                    xmlns="http://www.w3.org/2000/svg"
                                  />
                                </EuiIconEmpty>
                              </EuiIcon>
                              <span
                                className="euiButtonEmpty__text"
                              >
                                Reset
                              </span>
                            </span>
                          </EuiButtonContent>
                        </button>
                      </EuiButtonEmpty>
                    </div>
                  </EuiFlexItem>
                  <EuiFlexItem
                    grow={false}
                  >
                    <div
                      className="euiFlexItem euiFlexItem--flexGrowZero"
                    >
                      <EuiButton
                        data-test-subj="visualizeEditorRenderButton"
                        disabled={false}
                        iconType="play"
                        onClick={[Function]}
                        size="s"
                      >
                        <EuiButtonDisplay
                          baseClassName="euiButton"
                          data-test-subj="visualizeEditorRenderButton"
                          disabled={false}
                          element="button"
                          iconType="play"
                          isDisabled={false}
                          onClick={[Function]}
                          size="s"
                          type="button"
                        >
                          <button
                            className="euiButton euiButton--primary euiButton--small"
                            data-test-subj="visualizeEditorRenderButton"
                            disabled={false}
                            onClick={[Function]}
                            style={
                              Object {
                                "minWidth": undefined,
                              }
                            }
                            type="button"
                          >
                            <EuiButtonContent
                              className="euiButton__content"
                              iconSide="left"
                              iconType="play"
                              textProps={
                                Object {
                                  "className": "euiButton__text",
                                }
                              }
                            >
                              <span
                                className="euiButtonContent euiButton__content"
                              >
                                <EuiIcon
                                  className="euiButtonContent__icon"
                                  color="inherit"
                                  size="m"
                                  type="play"
                                >
                                  <EuiIconEmpty
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    />
                                  </EuiIconEmpty>
                                </EuiIcon>
                                <span
                                  className="euiButton__text"
                                >
                                  Preview
                                </span>
                              </span>
                            </EuiButtonContent>
                          </button>
                        </EuiButtonDisplay>
                      </EuiButton>
                    </div>
                  </EuiFlexItem>
                </div>
              </EuiFlexGroup>
            </div>
          </DefaultEditorControls>
        </div>
      </EuiFlexItem>
    </div>
  </EuiFlexGroup>
</ConfigPanel>
`;
