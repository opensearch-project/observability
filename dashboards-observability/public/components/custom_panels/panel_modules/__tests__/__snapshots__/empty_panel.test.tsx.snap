// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Empty panel view component renders empty panel view with disabled popover 1`] = `
<EmptyPanelView
  addVizDisabled={true}
  showFlyout={[MockFunction]}
>
  <div>
    <EuiSpacer
      size="xxl"
    >
      <div
        className="euiSpacer euiSpacer--xxl"
      />
    </EuiSpacer>
    <EuiText
      data-test-subj="addFirstVisualizationText"
      textAlign="center"
    >
      <div
        className="euiText euiText--medium"
        data-test-subj="addFirstVisualizationText"
      >
        <EuiTextAlign
          textAlign="center"
        >
          <div
            className="euiTextAlign euiTextAlign--center"
          >
            <h2>
              Start by adding your first visualization
            </h2>
            <EuiSpacer
              size="m"
            >
              <div
                className="euiSpacer euiSpacer--m"
              />
            </EuiSpacer>
            <EuiText
              color="subdued"
              size="m"
            >
              <div
                className="euiText euiText--medium"
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Use PPL Queries to fetch & filter observability data and create visualizations
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </div>
        </EuiTextAlign>
      </div>
    </EuiText>
    <EuiSpacer
      size="m"
    >
      <div
        className="euiSpacer euiSpacer--m"
      />
    </EuiSpacer>
    <EuiFlexGroup
      justifyContent="center"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--justifyContentCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
      >
        <EuiFlexItem
          grow={false}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrowZero"
          >
            <AddVisualizationPopover
              addVizDisabled={true}
              showFlyout={[MockFunction]}
            >
              <EuiPopover
                anchorPosition="downLeft"
                button={
                  <EuiButton
                    data-test-subj="addVisualizationButton"
                    disabled={true}
                    iconSide="right"
                    iconType="arrowDown"
                    onClick={[Function]}
                  >
                    Add visualization
                  </EuiButton>
                }
                closePopover={[Function]}
                display="inlineBlock"
                hasArrow={true}
                id="addVisualizationContextMenu"
                isOpen={false}
                ownFocus={true}
                panelPaddingSize="none"
              >
                <div
                  className="euiPopover euiPopover--anchorDownLeft"
                  id="addVisualizationContextMenu"
                >
                  <div
                    className="euiPopover__anchor"
                  >
                    <EuiButton
                      data-test-subj="addVisualizationButton"
                      disabled={true}
                      iconSide="right"
                      iconType="arrowDown"
                      onClick={[Function]}
                    >
                      <EuiButtonDisplay
                        baseClassName="euiButton"
                        data-test-subj="addVisualizationButton"
                        disabled={true}
                        element="button"
                        iconSide="right"
                        iconType="arrowDown"
                        isDisabled={true}
                        onClick={[Function]}
                        type="button"
                      >
                        <button
                          className="euiButton euiButton--primary euiButton-isDisabled"
                          data-test-subj="addVisualizationButton"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "minWidth": undefined,
                            }
                          }
                          type="button"
                        >
                          <EuiButtonContent
                            className="euiButton__content"
                            iconSide="right"
                            iconType="arrowDown"
                            textProps={
                              Object {
                                "className": "euiButton__text",
                              }
                            }
                          >
                            <span
                              className="euiButtonContent euiButtonContent--iconRight euiButton__content"
                            >
                              <EuiIcon
                                className="euiButtonContent__icon"
                                color="inherit"
                                size="m"
                                type="arrowDown"
                              >
                                <EuiIconEmpty
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                  focusable="false"
                                  role="img"
                                  style={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                    focusable="false"
                                    height={16}
                                    role="img"
                                    style={null}
                                    viewBox="0 0 16 16"
                                    width={16}
                                    xmlns="http://www.w3.org/2000/svg"
                                  />
                                </EuiIconEmpty>
                              </EuiIcon>
                              <span
                                className="euiButton__text"
                              >
                                Add visualization
                              </span>
                            </span>
                          </EuiButtonContent>
                        </button>
                      </EuiButtonDisplay>
                    </EuiButton>
                  </div>
                </div>
              </EuiPopover>
            </AddVisualizationPopover>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
    <EuiSpacer
      size="xxl"
    >
      <div
        className="euiSpacer euiSpacer--xxl"
      />
    </EuiSpacer>
  </div>
</EmptyPanelView>
`;

exports[`Empty panel view component renders empty panel view with enabled popover 1`] = `
<EmptyPanelView
  addVizDisabled={false}
  showFlyout={[MockFunction]}
>
  <div>
    <EuiSpacer
      size="xxl"
    >
      <div
        className="euiSpacer euiSpacer--xxl"
      />
    </EuiSpacer>
    <EuiText
      data-test-subj="addFirstVisualizationText"
      textAlign="center"
    >
      <div
        className="euiText euiText--medium"
        data-test-subj="addFirstVisualizationText"
      >
        <EuiTextAlign
          textAlign="center"
        >
          <div
            className="euiTextAlign euiTextAlign--center"
          >
            <h2>
              Start by adding your first visualization
            </h2>
            <EuiSpacer
              size="m"
            >
              <div
                className="euiSpacer euiSpacer--m"
              />
            </EuiSpacer>
            <EuiText
              color="subdued"
              size="m"
            >
              <div
                className="euiText euiText--medium"
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Use PPL Queries to fetch & filter observability data and create visualizations
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </div>
        </EuiTextAlign>
      </div>
    </EuiText>
    <EuiSpacer
      size="m"
    >
      <div
        className="euiSpacer euiSpacer--m"
      />
    </EuiSpacer>
    <EuiFlexGroup
      justifyContent="center"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--justifyContentCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
      >
        <EuiFlexItem
          grow={false}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrowZero"
          >
            <AddVisualizationPopover
              addVizDisabled={false}
              showFlyout={[MockFunction]}
            >
              <EuiPopover
                anchorPosition="downLeft"
                button={
                  <EuiButton
                    data-test-subj="addVisualizationButton"
                    disabled={false}
                    iconSide="right"
                    iconType="arrowDown"
                    onClick={[Function]}
                  >
                    Add visualization
                  </EuiButton>
                }
                closePopover={[Function]}
                display="inlineBlock"
                hasArrow={true}
                id="addVisualizationContextMenu"
                isOpen={false}
                ownFocus={true}
                panelPaddingSize="none"
              >
                <div
                  className="euiPopover euiPopover--anchorDownLeft"
                  id="addVisualizationContextMenu"
                >
                  <div
                    className="euiPopover__anchor"
                  >
                    <EuiButton
                      data-test-subj="addVisualizationButton"
                      disabled={false}
                      iconSide="right"
                      iconType="arrowDown"
                      onClick={[Function]}
                    >
                      <EuiButtonDisplay
                        baseClassName="euiButton"
                        data-test-subj="addVisualizationButton"
                        disabled={false}
                        element="button"
                        iconSide="right"
                        iconType="arrowDown"
                        isDisabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <button
                          className="euiButton euiButton--primary"
                          data-test-subj="addVisualizationButton"
                          disabled={false}
                          onClick={[Function]}
                          style={
                            Object {
                              "minWidth": undefined,
                            }
                          }
                          type="button"
                        >
                          <EuiButtonContent
                            className="euiButton__content"
                            iconSide="right"
                            iconType="arrowDown"
                            textProps={
                              Object {
                                "className": "euiButton__text",
                              }
                            }
                          >
                            <span
                              className="euiButtonContent euiButtonContent--iconRight euiButton__content"
                            >
                              <EuiIcon
                                className="euiButtonContent__icon"
                                color="inherit"
                                size="m"
                                type="arrowDown"
                              >
                                <EuiIconArrowDown
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--medium euiIcon--inherit euiButtonContent__icon"
                                  focusable="false"
                                  role="img"
                                  style={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiButtonContent__icon"
                                    focusable="false"
                                    height={16}
                                    role="img"
                                    style={null}
                                    viewBox="0 0 16 16"
                                    width={16}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                      fillRule="non-zero"
                                    />
                                  </svg>
                                </EuiIconArrowDown>
                              </EuiIcon>
                              <span
                                className="euiButton__text"
                              >
                                Add visualization
                              </span>
                            </span>
                          </EuiButtonContent>
                        </button>
                      </EuiButtonDisplay>
                    </EuiButton>
                  </div>
                </div>
              </EuiPopover>
            </AddVisualizationPopover>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
    <EuiSpacer
      size="xxl"
    >
      <div
        className="euiSpacer euiSpacer--xxl"
      />
    </EuiSpacer>
  </div>
</EmptyPanelView>
`;
