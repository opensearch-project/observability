// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Service Config component renders empty service config 1`] = `
<ServiceConfig
  chrome={
    Object {
      "getIsNavDrawerLocked$": [MockFunction],
      "setBreadcrumbs": [MockFunction],
    }
  }
  dslService={
    Object {
      "fetch": [MockFunction],
      "fetchFields": [MockFunction],
      "fetchIndices": [MockFunction],
      "http": [MockFunction],
    }
  }
  endTime="now"
  filters={Array []}
  http={[MockFunction]}
  indicesExist={true}
  parentBreadcrumb={
    Object {
      "href": "test#/",
      "text": "test",
    }
  }
  query=""
  selectedServices={Array []}
  setEndTime={[MockFunction]}
  setFilters={[MockFunction]}
  setQuery={[MockFunction]}
  setSelectedServices={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setStartTime={[MockFunction]}
  startTime="now-5m"
>
  <EuiAccordion
    arrowDisplay="left"
    buttonContent={
      <React.Fragment>
        <EuiText
          size="s"
        >
          <h3>
            Services & Entities  
            <EuiBadge>
              0
            </EuiBadge>
          </h3>
        </EuiText>
        <EuiSpacer
          size="s"
        />
        <EuiText
          color="subdued"
          size="s"
        >
          Select services & entities to include in this application
        </EuiText>
      </React.Fragment>
    }
    extraAction={
      <EuiButton
        disabled={true}
        onClick={[Function]}
        size="s"
      >
        Clear all
      </EuiButton>
    }
    id="servicesEntities"
    initialIsOpen={false}
    isLoading={false}
    isLoadingMessage={false}
    onToggle={[Function]}
    paddingSize="l"
  >
    <div
      className="euiAccordion"
      onToggle={[Function]}
    >
      <div
        className="euiAccordion__triggerWrapper"
      >
        <button
          aria-controls="servicesEntities"
          aria-expanded={false}
          className="euiAccordion__button"
          id="random_html_id"
          onClick={[Function]}
          type="button"
        >
          <span
            className="euiAccordion__iconWrapper"
          >
            <EuiIcon
              className="euiAccordion__icon"
              size="m"
              type="arrowRight"
            >
              <EuiIconEmpty
                aria-hidden={true}
                className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon"
                focusable="false"
                role="img"
                style={null}
              >
                <svg
                  aria-hidden={true}
                  className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon"
                  focusable="false"
                  height={16}
                  role="img"
                  style={null}
                  viewBox="0 0 16 16"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                />
              </EuiIconEmpty>
            </EuiIcon>
          </span>
          <span
            className="euiIEFlexWrapFix"
          >
            <EuiText
              size="s"
            >
              <div
                className="euiText euiText--small"
              >
                <h3>
                  Services & Entities  
                  <EuiBadge>
                    <EuiInnerText>
                      <span
                        className="euiBadge euiBadge--iconLeft"
                        style={
                          Object {
                            "backgroundColor": "#d3dae6",
                            "color": "#000",
                          }
                        }
                        title="0"
                      >
                        <span
                          className="euiBadge__content"
                        >
                          0
                        </span>
                      </span>
                    </EuiInnerText>
                  </EuiBadge>
                </h3>
              </div>
            </EuiText>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <EuiText
              color="subdued"
              size="s"
            >
              <div
                className="euiText euiText--small"
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Select services & entities to include in this application
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </span>
        </button>
        <div
          className="euiAccordion__optionalAction"
        >
          <EuiButton
            disabled={true}
            onClick={[Function]}
            size="s"
          >
            <EuiButtonDisplay
              disabled={true}
              element="button"
              isDisabled={true}
              onClick={[Function]}
              size="s"
              type="button"
            >
              <button
                className="euiButton euiButton--primary euiButton--small euiButton-isDisabled"
                disabled={true}
                onClick={[Function]}
                type="button"
              >
                <EuiButtonContent
                  className="euiButton__content"
                  iconSide="left"
                  textProps={
                    Object {
                      "className": "euiButton__text",
                    }
                  }
                >
                  <span
                    className="euiButtonContent euiButton__content"
                  >
                    <span
                      className="euiButton__text"
                    >
                      Clear all
                    </span>
                  </span>
                </EuiButtonContent>
              </button>
            </EuiButtonDisplay>
          </EuiButton>
        </div>
      </div>
      <div
        className="euiAccordion__childWrapper"
        id="servicesEntities"
      >
        <EuiResizeObserver
          onResize={[Function]}
        >
          <div>
            <div
              className="euiAccordion__padding--l"
            >
              <EuiFormRow
                describedByIds={Array []}
                display="row"
                fullWidth={false}
                hasChildLabel={true}
                hasEmptyLabelSpace={false}
                label="Services & Entities"
                labelType="label"
              >
                <div
                  className="euiFormRow"
                  id="random_html_id-row"
                >
                  <div
                    className="euiFormRow__labelWrapper"
                  >
                    <EuiFormLabel
                      className="euiFormRow__label"
                      htmlFor="random_html_id"
                      isFocused={false}
                      type="label"
                    >
                      <label
                        className="euiFormLabel euiFormRow__label"
                        htmlFor="random_html_id"
                      >
                        Services & Entities
                      </label>
                    </EuiFormLabel>
                  </div>
                  <div
                    className="euiFormRow__fieldWrapper"
                  >
                    <EuiComboBox
                      aria-label="Select services and entities"
                      async={false}
                      compressed={false}
                      data-test-subj="servicesEntitiesComboBox"
                      fullWidth={false}
                      id="random_html_id"
                      isClearable={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      options={Array []}
                      placeholder="Select services and entities"
                      selectedOptions={Array []}
                      singleSelection={false}
                      sortMatchesBy="none"
                    >
                      <div
                        aria-expanded={false}
                        aria-haspopup="listbox"
                        aria-label="Select services and entities"
                        className="euiComboBox"
                        data-test-subj="servicesEntitiesComboBox"
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        role="combobox"
                      >
                        <EuiComboBoxInput
                          autoSizeInputRef={[Function]}
                          compressed={false}
                          fullWidth={false}
                          hasSelectedOptions={false}
                          id="random_html_id"
                          inputRef={[Function]}
                          isListOpen={false}
                          noIcon={false}
                          onChange={[Function]}
                          onClick={[Function]}
                          onCloseListClick={[Function]}
                          onFocus={[Function]}
                          onOpenListClick={[Function]}
                          onRemoveOption={[Function]}
                          placeholder="Select services and entities"
                          rootId={[Function]}
                          searchValue=""
                          selectedOptions={Array []}
                          singleSelection={false}
                          toggleButtonRef={[Function]}
                          updatePosition={[Function]}
                          value=""
                        >
                          <EuiFormControlLayout
                            compressed={false}
                            fullWidth={false}
                            icon={
                              Object {
                                "aria-label": "Open list of options",
                                "data-test-subj": "comboBoxToggleListButton",
                                "disabled": undefined,
                                "onClick": [Function],
                                "ref": [Function],
                                "side": "right",
                                "type": "arrowDown",
                              }
                            }
                          >
                            <div
                              className="euiFormControlLayout"
                            >
                              <div
                                className="euiFormControlLayout__childrenWrapper"
                              >
                                <div
                                  className="euiComboBox__inputWrap"
                                  data-test-subj="comboBoxInput"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                >
                                  <p
                                    className="euiComboBoxPlaceholder"
                                  >
                                    Select services and entities
                                  </p>
                                  <AutosizeInput
                                    aria-controls=""
                                    className="euiComboBox__input"
                                    data-test-subj="comboBoxSearchInput"
                                    id="random_html_id"
                                    injectStyles={true}
                                    inputRef={[Function]}
                                    minWidth={1}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    role="textbox"
                                    style={
                                      Object {
                                        "fontSize": 14,
                                      }
                                    }
                                    value=""
                                  >
                                    <div
                                      className="euiComboBox__input"
                                      style={
                                        Object {
                                          "display": "inline-block",
                                          "fontSize": 14,
                                        }
                                      }
                                    >
                                      <input
                                        aria-controls=""
                                        data-test-subj="comboBoxSearchInput"
                                        id="random_html_id"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        role="textbox"
                                        style={
                                          Object {
                                            "boxSizing": "content-box",
                                            "width": "2px",
                                          }
                                        }
                                        value=""
                                      />
                                      <div
                                        style={
                                          Object {
                                            "height": 0,
                                            "left": 0,
                                            "overflow": "scroll",
                                            "position": "absolute",
                                            "top": 0,
                                            "visibility": "hidden",
                                            "whiteSpace": "pre",
                                          }
                                        }
                                      />
                                    </div>
                                  </AutosizeInput>
                                </div>
                                <EuiFormControlLayoutIcons
                                  icon={
                                    Object {
                                      "aria-label": "Open list of options",
                                      "data-test-subj": "comboBoxToggleListButton",
                                      "disabled": undefined,
                                      "onClick": [Function],
                                      "ref": [Function],
                                      "side": "right",
                                      "type": "arrowDown",
                                    }
                                  }
                                >
                                  <div
                                    className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                  >
                                    <EuiFormControlLayoutCustomIcon
                                      aria-label="Open list of options"
                                      data-test-subj="comboBoxToggleListButton"
                                      iconRef={[Function]}
                                      onClick={[Function]}
                                      type="arrowDown"
                                    >
                                      <button
                                        aria-label="Open list of options"
                                        className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                        data-test-subj="comboBoxToggleListButton"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiIcon
                                          aria-hidden="true"
                                          className="euiFormControlLayoutCustomIcon__icon"
                                          type="arrowDown"
                                        >
                                          <EuiIconEmpty
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                            focusable="false"
                                            role="img"
                                            style={null}
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                              focusable="false"
                                              height={16}
                                              role="img"
                                              style={null}
                                              viewBox="0 0 16 16"
                                              width={16}
                                              xmlns="http://www.w3.org/2000/svg"
                                            />
                                          </EuiIconEmpty>
                                        </EuiIcon>
                                      </button>
                                    </EuiFormControlLayoutCustomIcon>
                                  </div>
                                </EuiFormControlLayoutIcons>
                              </div>
                            </div>
                          </EuiFormControlLayout>
                        </EuiComboBoxInput>
                      </div>
                    </EuiComboBox>
                  </div>
                </div>
              </EuiFormRow>
              <EuiSpacer>
                <div
                  className="euiSpacer euiSpacer--l"
                />
              </EuiSpacer>
              <ServiceMap
                addFilter={[Function]}
                idSelected="latency"
                serviceMap={Object {}}
                setIdSelected={[Function]}
              >
                <EuiPanel>
                  <div
                    className="euiPanel euiPanel--paddingMedium"
                  >
                    <PanelTitle
                      title="Service map"
                    >
                      <EuiText
                        size="m"
                      >
                        <div
                          className="euiText euiText--medium"
                        >
                          <span
                            className="panel-title"
                          >
                            Service map
                          </span>
                        </div>
                      </EuiText>
                    </PanelTitle>
                    <EuiSpacer
                      size="m"
                    >
                      <div
                        className="euiSpacer euiSpacer--m"
                      />
                    </EuiSpacer>
                    <EuiButtonGroup
                      buttonSize="s"
                      color="text"
                      idSelected="latency"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "id": "latency",
                            "label": "Latency",
                          },
                          Object {
                            "id": "error_rate",
                            "label": "Error rate",
                          },
                          Object {
                            "id": "throughput",
                            "label": "Throughput",
                          },
                        ]
                      }
                    >
                      <fieldset
                        className="euiButtonGroup__fieldset"
                      >
                        <div
                          className="euiButtonGroup euiButtonGroup--s"
                        >
                          <EuiButtonToggle
                            className="euiButtonGroup__button euiButtonGroup__button--selected"
                            color="text"
                            fill={true}
                            id="latency"
                            isSelected={true}
                            key="0"
                            label="Latency"
                            onChange={[Function]}
                            size="s"
                            toggleClassName="euiButtonGroup__toggle"
                            type="single"
                          >
                            <EuiToggle
                              checked={true}
                              className="euiButtonToggle__wrapper euiButtonGroup__toggle"
                              inputClassName="euiButtonToggle__input"
                              label="Latency"
                              onChange={[Function]}
                              title="Latency"
                              type="single"
                            >
                              <div
                                className="euiToggle euiToggle--checked euiButtonToggle__wrapper euiButtonGroup__toggle"
                              >
                                <input
                                  aria-label="Latency"
                                  checked={true}
                                  className="euiToggle__input euiButtonToggle__input"
                                  onChange={[Function]}
                                  title="Latency"
                                  type="radio"
                                />
                                <EuiButton
                                  className="euiButtonToggle euiButtonGroup__button euiButtonGroup__button--selected"
                                  color="text"
                                  fill={true}
                                  id="latency"
                                  size="s"
                                  tabIndex={-1}
                                >
                                  <EuiButtonDisplay
                                    className="euiButtonToggle euiButtonGroup__button euiButtonGroup__button--selected"
                                    color="text"
                                    disabled={false}
                                    element="button"
                                    fill={true}
                                    id="latency"
                                    isDisabled={false}
                                    size="s"
                                    tabIndex={-1}
                                    type="button"
                                  >
                                    <button
                                      className="euiButton euiButton--text euiButton--small euiButtonToggle euiButtonGroup__button euiButtonGroup__button--selected euiButton--fill"
                                      disabled={false}
                                      id="latency"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <EuiButtonContent
                                        className="euiButton__content"
                                        iconSide="left"
                                        textProps={
                                          Object {
                                            "className": "euiButton__text",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiButtonContent euiButton__content"
                                        >
                                          <span
                                            className="euiButton__text"
                                          >
                                            Latency
                                          </span>
                                        </span>
                                      </EuiButtonContent>
                                    </button>
                                  </EuiButtonDisplay>
                                </EuiButton>
                              </div>
                            </EuiToggle>
                          </EuiButtonToggle>
                          <EuiButtonToggle
                            className="euiButtonGroup__button"
                            color="text"
                            fill={false}
                            id="error_rate"
                            isSelected={false}
                            key="1"
                            label="Error rate"
                            onChange={[Function]}
                            size="s"
                            toggleClassName="euiButtonGroup__toggle"
                            type="single"
                          >
                            <EuiToggle
                              checked={false}
                              className="euiButtonToggle__wrapper euiButtonGroup__toggle"
                              inputClassName="euiButtonToggle__input"
                              label="Error rate"
                              onChange={[Function]}
                              title="Error rate"
                              type="single"
                            >
                              <div
                                className="euiToggle euiButtonToggle__wrapper euiButtonGroup__toggle"
                              >
                                <input
                                  aria-label="Error rate"
                                  checked={false}
                                  className="euiToggle__input euiButtonToggle__input"
                                  onChange={[Function]}
                                  title="Error rate"
                                  type="radio"
                                />
                                <EuiButton
                                  className="euiButtonToggle euiButtonGroup__button"
                                  color="text"
                                  fill={false}
                                  id="error_rate"
                                  size="s"
                                  tabIndex={-1}
                                >
                                  <EuiButtonDisplay
                                    className="euiButtonToggle euiButtonGroup__button"
                                    color="text"
                                    disabled={false}
                                    element="button"
                                    fill={false}
                                    id="error_rate"
                                    isDisabled={false}
                                    size="s"
                                    tabIndex={-1}
                                    type="button"
                                  >
                                    <button
                                      className="euiButton euiButton--text euiButton--small euiButtonToggle euiButtonGroup__button"
                                      disabled={false}
                                      id="error_rate"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <EuiButtonContent
                                        className="euiButton__content"
                                        iconSide="left"
                                        textProps={
                                          Object {
                                            "className": "euiButton__text",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiButtonContent euiButton__content"
                                        >
                                          <span
                                            className="euiButton__text"
                                          >
                                            Error rate
                                          </span>
                                        </span>
                                      </EuiButtonContent>
                                    </button>
                                  </EuiButtonDisplay>
                                </EuiButton>
                              </div>
                            </EuiToggle>
                          </EuiButtonToggle>
                          <EuiButtonToggle
                            className="euiButtonGroup__button"
                            color="text"
                            fill={false}
                            id="throughput"
                            isSelected={false}
                            key="2"
                            label="Throughput"
                            onChange={[Function]}
                            size="s"
                            toggleClassName="euiButtonGroup__toggle"
                            type="single"
                          >
                            <EuiToggle
                              checked={false}
                              className="euiButtonToggle__wrapper euiButtonGroup__toggle"
                              inputClassName="euiButtonToggle__input"
                              label="Throughput"
                              onChange={[Function]}
                              title="Throughput"
                              type="single"
                            >
                              <div
                                className="euiToggle euiButtonToggle__wrapper euiButtonGroup__toggle"
                              >
                                <input
                                  aria-label="Throughput"
                                  checked={false}
                                  className="euiToggle__input euiButtonToggle__input"
                                  onChange={[Function]}
                                  title="Throughput"
                                  type="radio"
                                />
                                <EuiButton
                                  className="euiButtonToggle euiButtonGroup__button"
                                  color="text"
                                  fill={false}
                                  id="throughput"
                                  size="s"
                                  tabIndex={-1}
                                >
                                  <EuiButtonDisplay
                                    className="euiButtonToggle euiButtonGroup__button"
                                    color="text"
                                    disabled={false}
                                    element="button"
                                    fill={false}
                                    id="throughput"
                                    isDisabled={false}
                                    size="s"
                                    tabIndex={-1}
                                    type="button"
                                  >
                                    <button
                                      className="euiButton euiButton--text euiButton--small euiButtonToggle euiButtonGroup__button"
                                      disabled={false}
                                      id="throughput"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <EuiButtonContent
                                        className="euiButton__content"
                                        iconSide="left"
                                        textProps={
                                          Object {
                                            "className": "euiButton__text",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiButtonContent euiButton__content"
                                        >
                                          <span
                                            className="euiButton__text"
                                          >
                                            Throughput
                                          </span>
                                        </span>
                                      </EuiButtonContent>
                                    </button>
                                  </EuiButtonDisplay>
                                </EuiButton>
                              </div>
                            </EuiToggle>
                          </EuiButtonToggle>
                        </div>
                      </fieldset>
                    </EuiButtonGroup>
                    <EuiHorizontalRule
                      margin="m"
                    >
                      <hr
                        className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
                      />
                    </EuiHorizontalRule>
                    <EuiFlexGroup
                      alignItems="center"
                      gutterSize="s"
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
                      >
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiText>
                              <div
                                className="euiText euiText--medium"
                              >
                                Focus on
                              </div>
                            </EuiText>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem>
                          <div
                            className="euiFlexItem"
                          >
                            <EuiFieldSearch
                              compressed={false}
                              fullWidth={false}
                              incremental={false}
                              isClearable={true}
                              isInvalid={false}
                              isLoading={false}
                              onChange={[Function]}
                              onSearch={[Function]}
                              placeholder="Service name"
                              value=""
                            >
                              <EuiFormControlLayout
                                compressed={false}
                                fullWidth={false}
                                icon="search"
                                isLoading={false}
                              >
                                <div
                                  className="euiFormControlLayout"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <EuiValidatableControl
                                      isInvalid={false}
                                    >
                                      <input
                                        className="euiFieldSearch euiFieldSearch-isClearable"
                                        onChange={[Function]}
                                        onKeyUp={[Function]}
                                        placeholder="Service name"
                                        type="search"
                                        value=""
                                      />
                                    </EuiValidatableControl>
                                    <EuiFormControlLayoutIcons
                                      icon="search"
                                      isLoading={false}
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons"
                                      >
                                        <EuiFormControlLayoutCustomIcon
                                          type="search"
                                        >
                                          <span
                                            className="euiFormControlLayoutCustomIcon"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              type="search"
                                            >
                                              <EuiIconEmpty
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                />
                                              </EuiIconEmpty>
                                            </EuiIcon>
                                          </span>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiFieldSearch>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                    <EuiSpacer>
                      <div
                        className="euiSpacer euiSpacer--l"
                      />
                    </EuiSpacer>
                    <div
                      style={
                        Object {
                          "minHeight": 434,
                        }
                      }
                    >
                      <NoMatchMessage
                        size="s"
                      >
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiEmptyPrompt
                          body={
                            <EuiText>
                              No data matches the selected filter. Clear the filter and/or increase the time range to see more results.
                            </EuiText>
                          }
                          title={
                            <h2>
                              No matches
                            </h2>
                          }
                        >
                          <div
                            className="euiEmptyPrompt"
                          >
                            <EuiTextColor
                              color="subdued"
                            >
                              <span
                                className="euiTextColor euiTextColor--subdued"
                              >
                                <EuiTitle
                                  size="m"
                                >
                                  <h2
                                    className="euiTitle euiTitle--medium"
                                  >
                                    No matches
                                  </h2>
                                </EuiTitle>
                                <EuiSpacer
                                  size="m"
                                >
                                  <div
                                    className="euiSpacer euiSpacer--m"
                                  />
                                </EuiSpacer>
                                <EuiText>
                                  <div
                                    className="euiText euiText--medium"
                                  >
                                    <EuiText>
                                      <div
                                        className="euiText euiText--medium"
                                      >
                                        No data matches the selected filter. Clear the filter and/or increase the time range to see more results.
                                      </div>
                                    </EuiText>
                                  </div>
                                </EuiText>
                              </span>
                            </EuiTextColor>
                          </div>
                        </EuiEmptyPrompt>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                      </NoMatchMessage>
                    </div>
                  </div>
                </EuiPanel>
              </ServiceMap>
            </div>
          </div>
        </EuiResizeObserver>
      </div>
    </div>
  </EuiAccordion>
</ServiceConfig>
`;

exports[`Service Config component renders with one service selected 1`] = `
<ServiceConfig
  chrome={
    Object {
      "getIsNavDrawerLocked$": [MockFunction],
      "setBreadcrumbs": [MockFunction],
    }
  }
  dslService={
    Object {
      "fetch": [MockFunction],
      "fetchFields": [MockFunction],
      "fetchIndices": [MockFunction],
      "http": [MockFunction],
    }
  }
  endTime="now"
  filters={
    Array [
      Object {
        "disabled": false,
        "field": "serviceName",
        "inverted": false,
        "operator": "is",
        "value": "User",
      },
    ]
  }
  http={[MockFunction]}
  indicesExist={true}
  parentBreadcrumb={
    Object {
      "href": "test#/",
      "text": "test",
    }
  }
  query=""
  selectedServices={Array []}
  setEndTime={[MockFunction]}
  setFilters={[MockFunction]}
  setQuery={[MockFunction]}
  setSelectedServices={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [
            Object {
              "label": "User",
            },
          ],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setStartTime={[MockFunction]}
  startTime="now-5m"
>
  <EuiAccordion
    arrowDisplay="left"
    buttonContent={
      <React.Fragment>
        <EuiText
          size="s"
        >
          <h3>
            Services & Entities  
            <EuiBadge>
              0
            </EuiBadge>
          </h3>
        </EuiText>
        <EuiSpacer
          size="s"
        />
        <EuiText
          color="subdued"
          size="s"
        >
          Select services & entities to include in this application
        </EuiText>
      </React.Fragment>
    }
    extraAction={
      <EuiButton
        disabled={true}
        onClick={[Function]}
        size="s"
      >
        Clear all
      </EuiButton>
    }
    id="servicesEntities"
    initialIsOpen={false}
    isLoading={false}
    isLoadingMessage={false}
    onToggle={[Function]}
    paddingSize="l"
  >
    <div
      className="euiAccordion"
      onToggle={[Function]}
    >
      <div
        className="euiAccordion__triggerWrapper"
      >
        <button
          aria-controls="servicesEntities"
          aria-expanded={false}
          className="euiAccordion__button"
          id="random_html_id"
          onClick={[Function]}
          type="button"
        >
          <span
            className="euiAccordion__iconWrapper"
          >
            <EuiIcon
              className="euiAccordion__icon"
              size="m"
              type="arrowRight"
            >
              <EuiIconArrowRight
                aria-hidden={true}
                className="euiIcon euiIcon--medium euiAccordion__icon"
                focusable="false"
                role="img"
                style={null}
              >
                <svg
                  aria-hidden={true}
                  className="euiIcon euiIcon--medium euiAccordion__icon"
                  focusable="false"
                  height={16}
                  role="img"
                  style={null}
                  viewBox="0 0 16 16"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M5.157 13.069l4.611-4.685a.546.546 0 000-.768L5.158 2.93a.552.552 0 010-.771.53.53 0 01.759 0l4.61 4.684c.631.641.63 1.672 0 2.312l-4.61 4.684a.53.53 0 01-.76 0 .552.552 0 010-.771z"
                    fillRule="nonzero"
                  />
                </svg>
              </EuiIconArrowRight>
            </EuiIcon>
          </span>
          <span
            className="euiIEFlexWrapFix"
          >
            <EuiText
              size="s"
            >
              <div
                className="euiText euiText--small"
              >
                <h3>
                  Services & Entities  
                  <EuiBadge>
                    <EuiInnerText>
                      <span
                        className="euiBadge euiBadge--iconLeft"
                        style={
                          Object {
                            "backgroundColor": "#d3dae6",
                            "color": "#000",
                          }
                        }
                        title="0"
                      >
                        <span
                          className="euiBadge__content"
                        >
                          0
                        </span>
                      </span>
                    </EuiInnerText>
                  </EuiBadge>
                </h3>
              </div>
            </EuiText>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <EuiText
              color="subdued"
              size="s"
            >
              <div
                className="euiText euiText--small"
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Select services & entities to include in this application
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </span>
        </button>
        <div
          className="euiAccordion__optionalAction"
        >
          <EuiButton
            disabled={true}
            onClick={[Function]}
            size="s"
          >
            <EuiButtonDisplay
              disabled={true}
              element="button"
              isDisabled={true}
              onClick={[Function]}
              size="s"
              type="button"
            >
              <button
                className="euiButton euiButton--primary euiButton--small euiButton-isDisabled"
                disabled={true}
                onClick={[Function]}
                type="button"
              >
                <EuiButtonContent
                  className="euiButton__content"
                  iconSide="left"
                  textProps={
                    Object {
                      "className": "euiButton__text",
                    }
                  }
                >
                  <span
                    className="euiButtonContent euiButton__content"
                  >
                    <span
                      className="euiButton__text"
                    >
                      Clear all
                    </span>
                  </span>
                </EuiButtonContent>
              </button>
            </EuiButtonDisplay>
          </EuiButton>
        </div>
      </div>
      <div
        className="euiAccordion__childWrapper"
        id="servicesEntities"
      >
        <EuiResizeObserver
          onResize={[Function]}
        >
          <div>
            <div
              className="euiAccordion__padding--l"
            >
              <EuiFormRow
                describedByIds={Array []}
                display="row"
                fullWidth={false}
                hasChildLabel={true}
                hasEmptyLabelSpace={false}
                label="Services & Entities"
                labelType="label"
              >
                <div
                  className="euiFormRow"
                  id="random_html_id-row"
                >
                  <div
                    className="euiFormRow__labelWrapper"
                  >
                    <EuiFormLabel
                      className="euiFormRow__label"
                      htmlFor="random_html_id"
                      isFocused={false}
                      type="label"
                    >
                      <label
                        className="euiFormLabel euiFormRow__label"
                        htmlFor="random_html_id"
                      >
                        Services & Entities
                      </label>
                    </EuiFormLabel>
                  </div>
                  <div
                    className="euiFormRow__fieldWrapper"
                  >
                    <EuiComboBox
                      aria-label="Select services and entities"
                      async={false}
                      compressed={false}
                      data-test-subj="servicesEntitiesComboBox"
                      fullWidth={false}
                      id="random_html_id"
                      isClearable={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      options={Array []}
                      placeholder="Select services and entities"
                      selectedOptions={Array []}
                      singleSelection={false}
                      sortMatchesBy="none"
                    >
                      <div
                        aria-expanded={false}
                        aria-haspopup="listbox"
                        aria-label="Select services and entities"
                        className="euiComboBox"
                        data-test-subj="servicesEntitiesComboBox"
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        role="combobox"
                      >
                        <EuiComboBoxInput
                          autoSizeInputRef={[Function]}
                          compressed={false}
                          fullWidth={false}
                          hasSelectedOptions={false}
                          id="random_html_id"
                          inputRef={[Function]}
                          isListOpen={false}
                          noIcon={false}
                          onChange={[Function]}
                          onClick={[Function]}
                          onCloseListClick={[Function]}
                          onFocus={[Function]}
                          onOpenListClick={[Function]}
                          onRemoveOption={[Function]}
                          placeholder="Select services and entities"
                          rootId={[Function]}
                          searchValue=""
                          selectedOptions={Array []}
                          singleSelection={false}
                          toggleButtonRef={[Function]}
                          updatePosition={[Function]}
                          value=""
                        >
                          <EuiFormControlLayout
                            compressed={false}
                            fullWidth={false}
                            icon={
                              Object {
                                "aria-label": "Open list of options",
                                "data-test-subj": "comboBoxToggleListButton",
                                "disabled": undefined,
                                "onClick": [Function],
                                "ref": [Function],
                                "side": "right",
                                "type": "arrowDown",
                              }
                            }
                          >
                            <div
                              className="euiFormControlLayout"
                            >
                              <div
                                className="euiFormControlLayout__childrenWrapper"
                              >
                                <div
                                  className="euiComboBox__inputWrap"
                                  data-test-subj="comboBoxInput"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                >
                                  <p
                                    className="euiComboBoxPlaceholder"
                                  >
                                    Select services and entities
                                  </p>
                                  <AutosizeInput
                                    aria-controls=""
                                    className="euiComboBox__input"
                                    data-test-subj="comboBoxSearchInput"
                                    id="random_html_id"
                                    injectStyles={true}
                                    inputRef={[Function]}
                                    minWidth={1}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    role="textbox"
                                    style={
                                      Object {
                                        "fontSize": 14,
                                      }
                                    }
                                    value=""
                                  >
                                    <div
                                      className="euiComboBox__input"
                                      style={
                                        Object {
                                          "display": "inline-block",
                                          "fontSize": 14,
                                        }
                                      }
                                    >
                                      <input
                                        aria-controls=""
                                        data-test-subj="comboBoxSearchInput"
                                        id="random_html_id"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        role="textbox"
                                        style={
                                          Object {
                                            "boxSizing": "content-box",
                                            "width": "2px",
                                          }
                                        }
                                        value=""
                                      />
                                      <div
                                        style={
                                          Object {
                                            "height": 0,
                                            "left": 0,
                                            "overflow": "scroll",
                                            "position": "absolute",
                                            "top": 0,
                                            "visibility": "hidden",
                                            "whiteSpace": "pre",
                                          }
                                        }
                                      />
                                    </div>
                                  </AutosizeInput>
                                </div>
                                <EuiFormControlLayoutIcons
                                  icon={
                                    Object {
                                      "aria-label": "Open list of options",
                                      "data-test-subj": "comboBoxToggleListButton",
                                      "disabled": undefined,
                                      "onClick": [Function],
                                      "ref": [Function],
                                      "side": "right",
                                      "type": "arrowDown",
                                    }
                                  }
                                >
                                  <div
                                    className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                  >
                                    <EuiFormControlLayoutCustomIcon
                                      aria-label="Open list of options"
                                      data-test-subj="comboBoxToggleListButton"
                                      iconRef={[Function]}
                                      onClick={[Function]}
                                      type="arrowDown"
                                    >
                                      <button
                                        aria-label="Open list of options"
                                        className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                        data-test-subj="comboBoxToggleListButton"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiIcon
                                          aria-hidden="true"
                                          className="euiFormControlLayoutCustomIcon__icon"
                                          type="arrowDown"
                                        >
                                          <EuiIconArrowDown
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                            focusable="false"
                                            role="img"
                                            style={null}
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                              focusable="false"
                                              height={16}
                                              role="img"
                                              style={null}
                                              viewBox="0 0 16 16"
                                              width={16}
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                fillRule="non-zero"
                                              />
                                            </svg>
                                          </EuiIconArrowDown>
                                        </EuiIcon>
                                      </button>
                                    </EuiFormControlLayoutCustomIcon>
                                  </div>
                                </EuiFormControlLayoutIcons>
                              </div>
                            </div>
                          </EuiFormControlLayout>
                        </EuiComboBoxInput>
                      </div>
                    </EuiComboBox>
                  </div>
                </div>
              </EuiFormRow>
              <EuiSpacer>
                <div
                  className="euiSpacer euiSpacer--l"
                />
              </EuiSpacer>
              <ServiceMap
                addFilter={[Function]}
                idSelected="latency"
                serviceMap={Object {}}
                setIdSelected={[Function]}
              >
                <EuiPanel>
                  <div
                    className="euiPanel euiPanel--paddingMedium"
                  >
                    <PanelTitle
                      title="Service map"
                    >
                      <EuiText
                        size="m"
                      >
                        <div
                          className="euiText euiText--medium"
                        >
                          <span
                            className="panel-title"
                          >
                            Service map
                          </span>
                        </div>
                      </EuiText>
                    </PanelTitle>
                    <EuiSpacer
                      size="m"
                    >
                      <div
                        className="euiSpacer euiSpacer--m"
                      />
                    </EuiSpacer>
                    <EuiButtonGroup
                      buttonSize="s"
                      color="text"
                      idSelected="latency"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "id": "latency",
                            "label": "Latency",
                          },
                          Object {
                            "id": "error_rate",
                            "label": "Error rate",
                          },
                          Object {
                            "id": "throughput",
                            "label": "Throughput",
                          },
                        ]
                      }
                    >
                      <fieldset
                        className="euiButtonGroup__fieldset"
                      >
                        <div
                          className="euiButtonGroup euiButtonGroup--s"
                        >
                          <EuiButtonToggle
                            className="euiButtonGroup__button euiButtonGroup__button--selected"
                            color="text"
                            fill={true}
                            id="latency"
                            isSelected={true}
                            key="0"
                            label="Latency"
                            onChange={[Function]}
                            size="s"
                            toggleClassName="euiButtonGroup__toggle"
                            type="single"
                          >
                            <EuiToggle
                              checked={true}
                              className="euiButtonToggle__wrapper euiButtonGroup__toggle"
                              inputClassName="euiButtonToggle__input"
                              label="Latency"
                              onChange={[Function]}
                              title="Latency"
                              type="single"
                            >
                              <div
                                className="euiToggle euiToggle--checked euiButtonToggle__wrapper euiButtonGroup__toggle"
                              >
                                <input
                                  aria-label="Latency"
                                  checked={true}
                                  className="euiToggle__input euiButtonToggle__input"
                                  onChange={[Function]}
                                  title="Latency"
                                  type="radio"
                                />
                                <EuiButton
                                  className="euiButtonToggle euiButtonGroup__button euiButtonGroup__button--selected"
                                  color="text"
                                  fill={true}
                                  id="latency"
                                  size="s"
                                  tabIndex={-1}
                                >
                                  <EuiButtonDisplay
                                    className="euiButtonToggle euiButtonGroup__button euiButtonGroup__button--selected"
                                    color="text"
                                    disabled={false}
                                    element="button"
                                    fill={true}
                                    id="latency"
                                    isDisabled={false}
                                    size="s"
                                    tabIndex={-1}
                                    type="button"
                                  >
                                    <button
                                      className="euiButton euiButton--text euiButton--small euiButtonToggle euiButtonGroup__button euiButtonGroup__button--selected euiButton--fill"
                                      disabled={false}
                                      id="latency"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <EuiButtonContent
                                        className="euiButton__content"
                                        iconSide="left"
                                        textProps={
                                          Object {
                                            "className": "euiButton__text",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiButtonContent euiButton__content"
                                        >
                                          <span
                                            className="euiButton__text"
                                          >
                                            Latency
                                          </span>
                                        </span>
                                      </EuiButtonContent>
                                    </button>
                                  </EuiButtonDisplay>
                                </EuiButton>
                              </div>
                            </EuiToggle>
                          </EuiButtonToggle>
                          <EuiButtonToggle
                            className="euiButtonGroup__button"
                            color="text"
                            fill={false}
                            id="error_rate"
                            isSelected={false}
                            key="1"
                            label="Error rate"
                            onChange={[Function]}
                            size="s"
                            toggleClassName="euiButtonGroup__toggle"
                            type="single"
                          >
                            <EuiToggle
                              checked={false}
                              className="euiButtonToggle__wrapper euiButtonGroup__toggle"
                              inputClassName="euiButtonToggle__input"
                              label="Error rate"
                              onChange={[Function]}
                              title="Error rate"
                              type="single"
                            >
                              <div
                                className="euiToggle euiButtonToggle__wrapper euiButtonGroup__toggle"
                              >
                                <input
                                  aria-label="Error rate"
                                  checked={false}
                                  className="euiToggle__input euiButtonToggle__input"
                                  onChange={[Function]}
                                  title="Error rate"
                                  type="radio"
                                />
                                <EuiButton
                                  className="euiButtonToggle euiButtonGroup__button"
                                  color="text"
                                  fill={false}
                                  id="error_rate"
                                  size="s"
                                  tabIndex={-1}
                                >
                                  <EuiButtonDisplay
                                    className="euiButtonToggle euiButtonGroup__button"
                                    color="text"
                                    disabled={false}
                                    element="button"
                                    fill={false}
                                    id="error_rate"
                                    isDisabled={false}
                                    size="s"
                                    tabIndex={-1}
                                    type="button"
                                  >
                                    <button
                                      className="euiButton euiButton--text euiButton--small euiButtonToggle euiButtonGroup__button"
                                      disabled={false}
                                      id="error_rate"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <EuiButtonContent
                                        className="euiButton__content"
                                        iconSide="left"
                                        textProps={
                                          Object {
                                            "className": "euiButton__text",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiButtonContent euiButton__content"
                                        >
                                          <span
                                            className="euiButton__text"
                                          >
                                            Error rate
                                          </span>
                                        </span>
                                      </EuiButtonContent>
                                    </button>
                                  </EuiButtonDisplay>
                                </EuiButton>
                              </div>
                            </EuiToggle>
                          </EuiButtonToggle>
                          <EuiButtonToggle
                            className="euiButtonGroup__button"
                            color="text"
                            fill={false}
                            id="throughput"
                            isSelected={false}
                            key="2"
                            label="Throughput"
                            onChange={[Function]}
                            size="s"
                            toggleClassName="euiButtonGroup__toggle"
                            type="single"
                          >
                            <EuiToggle
                              checked={false}
                              className="euiButtonToggle__wrapper euiButtonGroup__toggle"
                              inputClassName="euiButtonToggle__input"
                              label="Throughput"
                              onChange={[Function]}
                              title="Throughput"
                              type="single"
                            >
                              <div
                                className="euiToggle euiButtonToggle__wrapper euiButtonGroup__toggle"
                              >
                                <input
                                  aria-label="Throughput"
                                  checked={false}
                                  className="euiToggle__input euiButtonToggle__input"
                                  onChange={[Function]}
                                  title="Throughput"
                                  type="radio"
                                />
                                <EuiButton
                                  className="euiButtonToggle euiButtonGroup__button"
                                  color="text"
                                  fill={false}
                                  id="throughput"
                                  size="s"
                                  tabIndex={-1}
                                >
                                  <EuiButtonDisplay
                                    className="euiButtonToggle euiButtonGroup__button"
                                    color="text"
                                    disabled={false}
                                    element="button"
                                    fill={false}
                                    id="throughput"
                                    isDisabled={false}
                                    size="s"
                                    tabIndex={-1}
                                    type="button"
                                  >
                                    <button
                                      className="euiButton euiButton--text euiButton--small euiButtonToggle euiButtonGroup__button"
                                      disabled={false}
                                      id="throughput"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <EuiButtonContent
                                        className="euiButton__content"
                                        iconSide="left"
                                        textProps={
                                          Object {
                                            "className": "euiButton__text",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiButtonContent euiButton__content"
                                        >
                                          <span
                                            className="euiButton__text"
                                          >
                                            Throughput
                                          </span>
                                        </span>
                                      </EuiButtonContent>
                                    </button>
                                  </EuiButtonDisplay>
                                </EuiButton>
                              </div>
                            </EuiToggle>
                          </EuiButtonToggle>
                        </div>
                      </fieldset>
                    </EuiButtonGroup>
                    <EuiHorizontalRule
                      margin="m"
                    >
                      <hr
                        className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
                      />
                    </EuiHorizontalRule>
                    <EuiFlexGroup
                      alignItems="center"
                      gutterSize="s"
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
                      >
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiText>
                              <div
                                className="euiText euiText--medium"
                              >
                                Focus on
                              </div>
                            </EuiText>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem>
                          <div
                            className="euiFlexItem"
                          >
                            <EuiFieldSearch
                              compressed={false}
                              fullWidth={false}
                              incremental={false}
                              isClearable={true}
                              isInvalid={false}
                              isLoading={false}
                              onChange={[Function]}
                              onSearch={[Function]}
                              placeholder="Service name"
                              value=""
                            >
                              <EuiFormControlLayout
                                compressed={false}
                                fullWidth={false}
                                icon="search"
                                isLoading={false}
                              >
                                <div
                                  className="euiFormControlLayout"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <EuiValidatableControl
                                      isInvalid={false}
                                    >
                                      <input
                                        className="euiFieldSearch euiFieldSearch-isClearable"
                                        onChange={[Function]}
                                        onKeyUp={[Function]}
                                        placeholder="Service name"
                                        type="search"
                                        value=""
                                      />
                                    </EuiValidatableControl>
                                    <EuiFormControlLayoutIcons
                                      icon="search"
                                      isLoading={false}
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons"
                                      >
                                        <EuiFormControlLayoutCustomIcon
                                          type="search"
                                        >
                                          <span
                                            className="euiFormControlLayoutCustomIcon"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              type="search"
                                            >
                                              <EuiIconSearch
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M11.271 11.978l3.872 3.873a.502.502 0 00.708 0 .502.502 0 000-.708l-3.565-3.564c2.38-2.747 2.267-6.923-.342-9.532-2.73-2.73-7.17-2.73-9.898 0-2.728 2.729-2.728 7.17 0 9.9a6.955 6.955 0 004.949 2.05.5.5 0 000-1 5.96 5.96 0 01-4.242-1.757 6.01 6.01 0 010-8.486c2.337-2.34 6.143-2.34 8.484 0a6.01 6.01 0 010 8.486.5.5 0 00.034.738z"
                                                  />
                                                </svg>
                                              </EuiIconSearch>
                                            </EuiIcon>
                                          </span>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiFieldSearch>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                    <EuiSpacer>
                      <div
                        className="euiSpacer euiSpacer--l"
                      />
                    </EuiSpacer>
                    <div
                      style={
                        Object {
                          "minHeight": 434,
                        }
                      }
                    >
                      <NoMatchMessage
                        size="s"
                      >
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                        <EuiEmptyPrompt
                          body={
                            <EuiText>
                              No data matches the selected filter. Clear the filter and/or increase the time range to see more results.
                            </EuiText>
                          }
                          title={
                            <h2>
                              No matches
                            </h2>
                          }
                        >
                          <div
                            className="euiEmptyPrompt"
                          >
                            <EuiTextColor
                              color="subdued"
                            >
                              <span
                                className="euiTextColor euiTextColor--subdued"
                              >
                                <EuiTitle
                                  size="m"
                                >
                                  <h2
                                    className="euiTitle euiTitle--medium"
                                  >
                                    No matches
                                  </h2>
                                </EuiTitle>
                                <EuiSpacer
                                  size="m"
                                >
                                  <div
                                    className="euiSpacer euiSpacer--m"
                                  />
                                </EuiSpacer>
                                <EuiText>
                                  <div
                                    className="euiText euiText--medium"
                                  >
                                    <EuiText>
                                      <div
                                        className="euiText euiText--medium"
                                      >
                                        No data matches the selected filter. Clear the filter and/or increase the time range to see more results.
                                      </div>
                                    </EuiText>
                                  </div>
                                </EuiText>
                              </span>
                            </EuiTextColor>
                          </div>
                        </EuiEmptyPrompt>
                        <EuiSpacer
                          size="s"
                        >
                          <div
                            className="euiSpacer euiSpacer--s"
                          />
                        </EuiSpacer>
                      </NoMatchMessage>
                    </div>
                  </div>
                </EuiPanel>
              </ServiceMap>
            </div>
          </div>
        </EuiResizeObserver>
      </div>
    </div>
  </EuiAccordion>
</ServiceConfig>
`;
